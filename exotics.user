<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <thing id="eqLAGEfire2" name="Electronic Firing" description="With this modification, most of the weapon&apos;s moving parts are removed so that it can fire electronically, meaning that an electrical signal detonates the bullet&apos;s propellant. This provides 1 point of recoil compensation and a -1 dice pool modifier to sound-based Perception Tests when trying to locate where the weapon is being fired from. Electronic firing is usually combined with trigger removal (see p. 182) to further reduce the number of moving parts, but this is not mandatory. The weapon still includes a loading mechanism that moves the bullet into the chamber, and it requires caseless ammunition." compset="Equipment" replaces="acElecFire">
    <fieldval field="grCost" value="1000"/>
    <fieldval field="grAvail" value="10"/>
    <tag group="ModCat" tag="Firearm"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="MountUses" tag="Barrel"/>
    <tag group="MountUses" tag="Internal"/>
    <eval phase="Setup" priority="4000" index="2"><![CDATA[doneif (activated = 0)
doneif (container.ishero <> 0)

perform parent.assign[ForceCased.Caseless]]]></eval>
    <eval phase="Effects" priority="5000"><![CDATA[
      ~only apply this if we're activated
      doneif (activated = 0)

      ~Add 1 point of recoil comensation to our weapon
      perform container.parent.field[wpRecComp].modify[+,1,""]]]></eval>
    <child entity="grCustom"></child>
    </thing>
  <thing id="acLAGRHSilencer" name="Silencer/Suppressor" description="This barrel-mounted accessory reduces the sound and flash of a weapon&apos;s discharge. It cannot be used with revolvers. It applies a -4 dice pool modifier on all Perception Tests to notice the weapon&apos;s use or locate the weapon&apos;s firer. Attaching or removing a silencer takes a Complex Action." compset="Equipment" replaces="acSilencer">
    <fieldval field="grCost" value="500"/>
    <fieldval field="grAvail" value="9"/>
    <fieldval field="dvWireDesc" value="The silencer/suppressor features a Rating 2 microphone with Rating 2 Select Sound Filter and simple software that alerts you via AR if your silencer detects the sound of someone nearby reacting to the sound of the silenced weapon."/>
    <tag group="Restricted" tag="Forbidden" name="Forbidden" abbrev="F"/>
    <tag group="AccessCat" tag="Ranged" name="Ranged Weapon" abbrev="Ranged Weapon"/>
    <tag group="EquipCat" tag="Accessory" name="Weapon Accessories &amp; Mods" abbrev="Weapon Accessories &amp; Mods"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="MountUses" tag="Barrel" name="Barrel" abbrev="Barrel"/>
    <evalrule phase="Validate" priority="10000" message="placeholder"><![CDATA[if (parent.tagis[AccDetail.Revolver] <> 0) then
@message = "You can't silence a revolver!"
@valid = 0
else
debug "testing: " & parent.tagnames[AccDetail.?]
@valid = 1
endif]]></evalrule>
    <prereq message="The PSK-3 requires a custom silencer">
      <validate><![CDATA[
        validif (ishero <> 0)
        validif (parent.tagis[AccAllow.PSK3] = 0)]]></validate>
      </prereq>
    </thing>
  <thing id="wpLAGSquirt" name="Ares S-III Super Squirt" description="This popular non-lethal weapon fires DMSO gel packs. The dimethyl sulfoxide forces the skin to absorb the chemicals the operator wishes to deliver. The attack itself causes no damage, but when the target is hit successfully, the DMSO delivers the substance directly into the target&apos;s bloodstream as a Contact vector toxin ({b}Toxins, Drugs, and BTLs{/b}, p. 408). The Super Squirt uses Light Pistol ranges and can accept top- and underbarrel-mounted accessories." compset="Ranged" replaces="wpAresSIII">
    <fieldval field="grCost" value="950"/>
    <fieldval field="grAvail" value="7"/>
    <fieldval field="dpLimit" value="3"/>
    <fieldval field="wpAmmoCap" value="20"/>
    <usesource source="RHExotics"/>
    <tag group="Mount" tag="Top" name="Top" abbrev="Top"/>
    <tag group="Mount" tag="Under" name="Underbarrel" abbrev="Under"/>
    <tag group="OverDamage" tag="Chemical" name="Damage Derived From Toxin/Chemical" abbrev="By Chem."/>
    <tag group="RangeCat" tag="rcLPistol" name="Light Pistol" abbrev="Light Pistol"/>
    <tag group="ReloadType" tag="Clip" name="Clip" abbrev="(c)"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="WpCategory" tag="SpecialWep" name="Special Weapons" abbrev="Exotic Ranged Weapon"/>
    <tag group="AmmoType" tag="DMSO" name="DMSO Gel" abbrev="DMSO Gel"/>
    <tag group="Armory" tag="Firearm" name="Firearm" abbrev="Firearm"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Manufac" tag="Ares" name="Ares" abbrev="Ares"/>
    <tag group="Mode" tag="SemiAuto" name="Semi-Automatic" abbrev="SA"/>
    <tag group="ExCountAs" tag="wpLAG1GunSpray"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAG1BioSpray" name="BioSpray" compset="Ranged" replaces="wpBioSpray">
    <comment>This is a helper item that sets up the Lasers Weapons Skill</comment>
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="SpecialWep" name="Special Weapons" abbrev="Exotic Ranged Weapon"/>
    <tag group="Helper" tag="Helper" name="Helper" abbrev="Helper"/>
    <tag group="Helper" tag="AugOnly"/>
    <tag group="Augment" tag="Bio"/>
    </thing>
  <thing id="wpLAG1_DEW" name="Directed Energy Weapons" compset="Ranged">
    <comment>This is a helper item that sets up the Lasers Weapons Skill</comment>
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="SpecialWep" name="Special Weapons" abbrev="Exotic Ranged Weapon"/>
    <tag group="Helper" tag="Helper" name="Helper" abbrev="Helper"/>
    </thing>
  <thing id="wpLAG1Mono" name="MonoFilament Weapons" compset="Ranged">
    <comment>This is a helper item that sets up the Lasers Weapons Skill</comment>
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="SpecialWep" name="Special Weapons" abbrev="Exotic Ranged Weapon"/>
    <tag group="Helper" tag="Helper" name="Helper" abbrev="Helper"/>
    </thing>
  <thing id="wpLAGMWhip" name="Monofilament Whip" description="Iconic. Terrifying. Deadly. Few weapons on the street are more feared. This monofilament line can cut through bone and armor like hot butter. The line extends out to two meters, and retracts into the weapon&apos;s handle when not in use. The whip action, the weighted tip, and the deadly thread of the monofilament line itself make this weapon a potential danger to it&apos;s wielder. On a glitch, you catch the weighted tip on something nearby and need to disentangle it before you make another proper attack with it. On a critical glitch, you hit yourself with the whip and take its base damage (resisted normally). A monofilament whip requires the Exotic Melee Weapon (Monofilament Whip) skill to use." compset="Melee" replaces="wpMonoWhip">
    <fieldval field="grCost" value="10000"/>
    <fieldval field="grAvail" value="12"/>
    <fieldval field="dvWireDesc" value="The whip can be readied with a Free Action, rather than a Simple Action, and the whip&apos;s built-in safety system retracts automatically instead of getting you entangled on a glitch. The Accuracy is also increased by 2."/>
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="wpDamage" value="12"/>
    <fieldval field="wpAP" value="-8"/>
    <fieldval field="wpReach" value="2"/>
    <usesource source="RHExotics"/>
    <tag group="Restricted" tag="Forbidden" name="Forbidden" abbrev="F"/>
    <tag group="Weapon" tag="NoTwoBonus" name="Doesn&apos;t Increase DV when wielded two-handed" abbrev="Doesn&apos;t Increase DV when wielded two-handed"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <tag group="ExCountAs" tag="wpLAG1Mono"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <eval phase="Final" priority="5000"><![CDATA[
      doneif (activated = 0)
      doneif (tagis[Equipment.WirelessOn] = 0)

      perform field[dpLimit].modify[+,2,"Wireless Active"]]]>
      <before name="Calc Weapon DicePool"/>
      </eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGFichPain" name="Fichetti Pain Inducer" description="For a non-lethal weapon, the Fichetti Pain Inducer is not very humane. It makes someone feel like they are in a microwave, roasting from the inside out. Treat this as a toxin attack with a Power of 8 and a speed of Immediate. The target resists with Body + Willpower. If the modified Power exceeds the target&apos;s Mental limit, the target must spend his next Action Phase doing whatever it takes to run away from the pain. The attacker can continue to hold her beam on a target with a Complex Action unless the gamemaster deems the target has dodged away or found cover. If the target cannot get out of the beam, he is incapacitated with pain, suffering a dice pool modifier equal to the modified Power on all tests for as long as the beam is trained on him.{br}{br}The Pain Inducer uses SMG ranges and can take top and underbarrel accessories. It has ten charges; when attached to a power point, it reloads one charge every ten seconds." compset="Ranged" replaces="wpFichPain">
    <fieldval field="grCost" value="5000"/>
    <fieldval field="grAvail" value="11"/>
    <fieldval field="dvWireDesc" value="The Pain Inducer recharges by induction at a rate of 1 charge per hour."/>
    <fieldval field="dpLimit" value="3"/>
    <usesource source="RHExotics"/>
    <tag group="Mount" tag="Under" name="Underbarrel" abbrev="Under"/>
    <tag group="OverDamage" tag="Chemical" name="Damage Derived From Toxin/Chemical" abbrev="By Chem."/>
    <tag group="RangeCat" tag="rcSMG" name="SMG" abbrev="SMG"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="WpCategory" tag="SpecialWep" name="Special Weapons" abbrev="Exotic Ranged Weapon"/>
    <tag group="Armory" tag="Firearm" name="Firearm" abbrev="Firearm"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Manufac" tag="Fichetti" name="Fichetti" abbrev="Fichetti"/>
    <tag group="Mode" tag="Single" name="Single Shot" abbrev="SS"/>
    <tag group="ExCountAs" tag="wpLAG1_DEW"/>
    <tag group="Mount" tag="Top" name="Top" abbrev="Top"/>
    <child entity="grCustRang">
      <bootstrap thing="amBattery">
        <assignval field="trkMax" value="10"/>
        </bootstrap>
      </child>
    </thing>
  <thing id="wpLAGBarbecue" name="Halloweener Barbecue Lighter" description="Available on the streets on Seattle, and with its simple blueprint widely disseminated via the Matrix, the Halloweener Barbecue Lighter (one of various names it is known by throughout various sprawls) is a terror-inducing weapon—as much for its user as its intended target. The simplistic flamethrower is a far cry from being safe for its operator. It tends to find its way into the hands of the truly sadistic pyromaniacs, or truly desperate people with no good options.\n\nThe weapon includes a bulky backpack fuel tank. Putting on the backpack takes 2 Combat Turns. Unhooking the straps and slipping out of it takes a Complex Action. Readying the weapon requires a Complex Action. \nSee p. 49, Run &amp; Gun, for full rules for using flamethrowers.\n\nSpecial: The Halloweener Barbecue Lighter is a highly unstable weapon. On any glitch, the handler suffers a hit with the base damage of the weapon. On a critical glitch, the fuel tank explodes, causing (6 + Ammo remaining)P damage to the handler. So, for example, a tank with 8 rounds left would cause 6 + 8 = 14P damage to the wielder." compset="Ranged">
    <fieldval field="grAvail" value="8"/>
    <fieldval field="wpDamage" value="6"/>
    <fieldval field="wpAP" value="-6"/>
    <fieldval field="wpAmmoCap" value="12"/>
    <fieldval field="grCost" value="1200"/>
    <fieldval field="dpLimit" value="4"/>
    <usesource source="RHExotics"/>
    <tag group="ReloadType" tag="Clip"/>
    <tag group="RangeCat" tag="rcTaser"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="ModCat" tag="UnderFlame"/>
    <tag group="Helper" tag="Shadow"/>
    <tag group="Mode" tag="SemiAuto"/>
    <tag group="Mode" tag="Burst3"/>
    <tag group="Mode" tag="FullAuto10"/>
    <tag group="WpCategory" tag="Flamethrow"/>
    <tag group="AmmoType" tag="FlameFuel"/>
    <tag group="WpDamSpec" tag="Fire"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGFlameBracer" name="Flame Bracer" description="This gizmo was invented by a mage who favored the Shape Fire spell but could never find a flame when he needed it. On a critical glitch you hit yourself with the flame. This weapon uses the Exotic Ranged Weapon skill." compset="Ranged" replaces="wpFlameBra">
    <fieldval field="grAvail" value="8"/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="grCost" value="775"/>
    <fieldval field="wpDamage" value="6"/>
    <fieldval field="wpAP" value="-6"/>
    <fieldval field="wpAmmoCap" value="2"/>
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="Flamethrow"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="WpDamSpec" tag="Fire"/>
    <tag group="Mode" tag="Single"/>
    <tag group="AmmoType" tag="FlameFuel"/>
    <tag group="ReloadType" tag="Clip"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="Armory" tag="Firearm"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGMYoYo" name="Monofilament Yo-Yo" description="Laugh all you want, but the yo-yo was originally designed as a weapon for hunting, and while we think of them as toys for children, they can still be used for their original purpose as well as performing. A hardened yo-yo is simply constructed out of a tougher material, such as hardwood or metal. A bladed yo-yo is exactly what you think, while a monofilament yo-yo is safer to use than a monofilament whip but not by much. Each counts as a Professional Grade instrument for performing tricks.\n\nOn a glitch, you catch the weighted tip on something nearby and need to disentangle it before you make another proper attack with it. On a critical glitch, you hit yourself with the yo-yo and take its base damage (resisted normally). A monofilament yo-yo requires the Exotic Melee Weapon (Monofilament Whip) skill to use." compset="Melee">
    <fieldval field="grCost" value="12000"/>
    <fieldval field="grAvail" value="12"/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpDamage" value="8"/>
    <fieldval field="wpAP" value="-8"/>
    <fieldval field="wpReach" value="1"/>
    <usesource source="RHExotics"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="ExCountAs" tag="wpLAG1Mono" name="MonoFilament Weapons" abbrev="MonoFilament Weapons"/>
    <tag group="Restricted" tag="Forbidden" name="Forbidden" abbrev="F"/>
    <tag group="Weapon" tag="NoTwoBonus" name="Doesn&apos;t Increase DV when wielded two-handed" abbrev="Doesn&apos;t Increase DV when wielded two-handed"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <eval phase="Final" priority="5000"><![CDATA[
      doneif (activated = 0)
      doneif (tagis[Equipment.WirelessOn] = 0)

      perform field[dpLimit].modify[+,2,"Wireless Active"]]]>
      <before name="Calc Weapon DicePool"/>
      </eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGMGarrote" name="Ares &quot;Queen of Hearts&quot; Monofilament Garrote" description="Leave it to Ares to make something deadly even deadlier. The Queen of Hearts is the nickname for Ares&apos; monofilament garrote that will often take a head right off well before the target suffocates, though I&apos;m certain that was part of the intended design. Other megacorps have copied the design, but Ares is by far the biggest name out there.\n\nUsing a garrote requires and initial successful attack test to get the weapon in place similar to subduing combat. The attacker uses their Exotic Melee Weapon (Garrote) skill to initiate the subduing. The attack must use the Called Shot Location modifier and needs at least 1 net hit to succeed. After the weapon is in place, the attacking character can choose to do the damage of the weapon during their next Action Phase along with improving their hold with another Attack Test or knocking the opponent to the ground.\n\nBreaking free of the garrote requires an Agility + Unarmed Combat [Physical] Test with a threshold of the attacker&apos;s net hits on all attacks or a successful Knock Out of Hands called shot or similar attack that breaks the attacker&apos;s grip." compset="Melee" replaces="wpMonoGarr">
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="18"/>
    <fieldval field="wpDamage" value="6"/>
    <fieldval field="wpAP" value="-8"/>
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="ExCountAs" tag="wpLAG1Mono"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="Armory" tag="Melee"/>
    <tag group="Manufac" tag="Ares"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Restricted" tag="Forbidden"/>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGMBolas" name="Nemesis Arms Surchin Monofilament Bolas" compset="Ranged" replaces="wpMonoBola">
    <fieldval field="wpSpecial" value="A monofilament bola requires the target to make an immediate Damage Resistance Test against 12Pv-8 along with  an immediate Agility + Gymnastics [Physical] Test with a threshold of the attacker&apos;s net hits; if they fail, they fall prone."/>
    <fieldval field="grCost" value="4000"/>
    <fieldval field="wpDamage" value="3"/>
    <fieldval field="wpAP" value="4"/>
    <fieldval field="grAvail" value="18"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="WpDamType" tag="Stun"/>
    <tag group="ExCountAs" tag="wpLAG1Mono"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="Armory" tag="Thrown"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="RangeCat" tag="rcShuriken"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Manufac" tag="Nemesis"/>
    <tag group="WpGroup" tag="MissileLa"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGAtomizer" name="Atomizer" description="Developed during the early resurgence of alchemy as a practice, the atomizer is more a delivery device than it is an actual tool. The key to this device lies in its ability to take solid or liquid compounds and break them down into an aerosol spray without any loss in power or effect. This enables both healing and poison effects that would normally be command triggered to be created as contact triggers while retaining efficacy. The nature of the atomizer itself keeps contact with the device from activating the  contact trigger. This enables the atomizer to spray out its payload which will then activate upon contact. Rumors exist about atomizers that may hold more than one compound “cartridge” at a time, though none can verify the truth of them. \n\nEffect: One  compound may be converted from a solid or liquid into an aerosol when inserted into the atomizer. Compounds made with a contact trigger are not enacted until they contact a substance after being fired from the atomizer. Atomizers can be used to make a ranged attack with a maximum range of three meters." compset="Ranged">
    <fieldval field="wpShort" value="3"/>
    <fieldval field="grCost" value="500"/>
    <fieldval field="grAvail" value="4"/>
    <fieldval field="dpLimit" value="4"/>
    <usesource source="RHExotics"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Armory" tag="Projectile"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="AmmoType" tag="AtomizAmmo"/>
    <tag group="OverDamage" tag="Chemical"/>
    <tag group="MountNo" tag="Barrel"/>
    <tag group="MountNo" tag="Internal"/>
    <tag group="MountNo" tag="Side"/>
    <tag group="MountNo" tag="Stock"/>
    <tag group="MountNo" tag="Top"/>
    <tag group="MountNo" tag="Under"/>
    <tag group="ReloadType" tag="BreakAct"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="ExCountAs" tag="wpLAG1GunSpray"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="amLAGAtomizerAmmo" name="Atomizer Refill" description="For use with the Atomizer." compset="Ammunition" stacking="merge">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="OverDamage" tag="Chemical" name="Damage Derived From Toxin/Chemical" abbrev="By Chem."/>
    <tag group="Vector" tag="Contact" name="Contact" abbrev="Contact"/>
    <tag group="Weapon" tag="DamageMod" name="Ammo: Damage is a Modification" abbrev="Ammo: Damage is a Modification"/>
    <tag group="Weapon" tag="ToxinAmmo" name="Ammo that needs a toxin loaded" abbrev="Ammo that needs a toxin loaded"/>
    <tag group="Vector" tag="Inhale"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="AmmoType" tag="AtomizAmmo"/>
    <child entity="grCustAmmo"></child>
    </thing>
  <thing id="wpLAGModSprayPen" name="Modified Spray Pen" description="This pen/digital stylus contains a small pepper punch canister. It is commonly sold to wageslaves who shy away from firearms as a discreet means of self-defense against muggings. It can be re-purposed to hold any inhalation vector toxin or drug. The range of the spray is two meters." compset="Ranged" replaces="wpSprayPen">
    <fieldval field="dpLimit" value="3"/>
    <fieldval field="grCost" value="60"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="grAvail" value="4"/>
    <fieldval field="wpShort" value="2"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="OverDamage" tag="Chemical"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="AmmoType" tag="SprayPen"/>
    <tag group="ReloadType" tag="Clip"/>
    <tag group="ExCountAs" tag="wpLAG1GunSpray"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Restricted" tag="Forbidden"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGNarcoGasGun" name="Narcoject Gas Gun" compset="Ranged" replaces="wpNaGasGun">
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="grCost" value="1500"/>
    <fieldval field="wpAmmoCap" value="5"/>
    <fieldval field="wpAmmoBins" value="2"/>
    <fieldval field="grAvail" value="8"/>
    <usesource source="RHExotics"/>
    <tag group="Manufac" tag="Narcoject"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="OverDamage" tag="Chemical"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="AmmoType" tag="GasGun"/>
    <tag group="ReloadType" tag="Clip"/>
    <tag group="ExCountAs" tag="wpLAG1GunSpray"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="Helper" tag="NoMission"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="RangeCat" tag="rcTaser"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGNarcoTrack" name="Narcoject Trackstopper" description="The Narcoject Trackstopper was adapted from the discontinued Ares Fogger Glop Cannon. When Ares began to divert all non-essential weapons research, development, and production to the Excalibur rifle, the Glop Cannon (which hadn’t been selling all that well) was discontinued. Seeing an opportunity, Narcoject bought the name and the research for a modest sum, which suited both parties at the time.\n\nThe Trackstopper has the look of a firehose crossed with a sub-machine gun. It connects to a pack worn on the user’s back and fires a stream of liquid foam at the target. Unlike the original formulation of Freeze Foam, Narcoject Foam won’t help you build a bridge, but it will harden in 1 Combat Round. For every net hit the user gets to hit the target, the target suffers a –1 penalty to their Agility. If the target’s Agility reaches 0, they are unable to move or take any actions that require use of their limbs. Once hardened, the foam has a Structure Rating of 4 and an Armor Rating of 6. Narcoject Foam is specially formulated at the microscopic level to allow encased victims to breathe. Narcoject Foam dissolves completely in one hour, or immediately with the application of Narcoject-brand solvent (free with purchase of Narcoject Foam refills).\n\nNote: This weapon uses Light Pistol ranges. Foam refills cost 500¥ per 6 charges and have an Availability of 15R." compset="Ranged" replaces="wpNaTrackstopper">
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="grCost" value="8500"/>
    <fieldval field="wpAmmoCap" value="6"/>
    <fieldval field="grAvail" value="15"/>
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="Mode" tag="Single"/>
    <tag group="ExCountAs" tag="wpLAG1GunSpray"/>
    <tag group="Manufac" tag="Narcoject"/>
    <tag group="OverDamage" tag="AgiPen"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="AmmoType" tag="NarcoFoan"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="ReloadType" tag="Magazine"/>
    <tag group="RangeCat" tag="rcLPistol"/>
    <tag group="Restricted" tag="Restricted"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGPepperPen" name="Pepper Punch Pen" description="This pen/digital stylus contains a small pepper punch canister. It is commonly sold to wageslaves who shy away from firearms as a discreet means of self-defense against muggings. It can be re-purposed to hold any inhalation vector toxin or drug. The range of the spray is two meters." compset="Ranged" replaces="wpPepperPu">
    <fieldval field="dpLimit" value="3"/>
    <fieldval field="grCost" value="45"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="grAvail" value="3"/>
    <fieldval field="wpShort" value="2"/>
    <usesource source="RHExotics"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="AmmoType" tag="PepperPen"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="OverDamage" tag="Chemical"/>
    <tag group="ExCountAs" tag="wpLAG1GunSpray"/>
    <tag group="ReloadType" tag="Clip"/>
    <tag group="Mode" tag="Single"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGPEPGun" name="Narcoject PEP" description="The Narcoject PEP is an interesting device. The PEP, or Pulsed Energy Projectile, could easily have been turned into a killing machine, and a rather brutal one at that. Instead, the PEP fires short, intense laser pulses. These pulses vaporize the surface of whatever they hit, creating plasma. This plasma then absorbs all other energy the PEP sends to it, detonating with a flash, bang, and pulse. The PEP is designed to prevent outright killing of targets, as the stun effects caused by the pulse are quite effective.\n\nNote: This weapon uses Heavy Pistol ranges. It can only accept top- and underbarrel accessories. The PEP is powered by peak-discharge battery packs (p. 52, {i}Run &amp; Gun{/i}) and uses two power units per shot. It typically takes 2 units with ten charges apiece." compset="Ranged" replaces="wpNaPEP">
    <fieldval field="grCost" value="7500"/>
    <fieldval field="dpLimit" value="6"/>
    <fieldval field="wpDamage" value="10"/>
    <fieldval field="wpAmmoCap" value="10"/>
    <fieldval field="wpAmmoBins" value="2"/>
    <fieldval field="wpAmmoUse" value="2"/>
    <fieldval field="grAvail" value="12"/>
    <fieldval field="wpSpecial" value="If the target is wearing armor that is capable of supporting a Chemical Seal, the attack has no AP. If the target is wearing clothing or armor with gaps, the attack’s AP is –5."/>
    <usesource source="RHExotics"/>
    <tag group="WpDamType" tag="Stun"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="AmmoType" tag="Battery"/>
    <tag group="ReloadType" tag="Clip"/>
    <tag group="RangeCat" tag="rcHPistol"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="ExCountAs" tag="wpLAG1_DEW"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="Manufac" tag="Narcoject"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGScreech" name="Ares Screech Sonic Rifle" description="This is a nasty little oddball of a weapon. Though it&apos;s called the Screech and its classified as a sonic rifle, anyone with this thing pointed at them will rarely hear a thing other then their own retching as they puke up their latest meal. This devious invention uses focused sound waves to disorient the target while not causing any real damage. Perfect for crowd control as long as the users are prepped with gas masks, since the reek of soybase vomit will fill the air this sucker is fired.\n\nThe sonic rifle can fire with variable beam settings. It uses the same rules as shotguns (p. 180, {i}SR5{/i}) for determining the number of targets affected and the DV modifier, as well as ranges. The Exotic Ranged Weapon (Sonic Rifle) skill is used to fire this weapon.\n\nTargets hit by a beam suffer the effects of disorientation and nausea (p. 409, {i}SR5{/i}; use Damage Resistance Test in place of Toxin Resistance Test). The rifle uses peak discharge battery packs, with each shot consuming 1 power unit." compset="Ranged" replaces="wpAresScre">
    <fieldval field="wpSpecial" value="The Damage Resistance Test uses Willpower instead of Body and ignores all standard armor. Damper earware (p. 454, {i}SR5{/i}) provides +2 bonus dice to the resistance test. A Hush or Silence spell reduces the DV by -1 per hit on the Spellcasting Test. Targets hit by a beam suffer the effects of disorientation and nausea (see p. 409, {i}SR5{/i})."/>
    <fieldval field="grCost" value="8000"/>
    <fieldval field="dpLimit" value="6"/>
    <fieldval field="wpDamage" value="7"/>
    <fieldval field="grAvail" value="15"/>
    <usesource source="RHExotics"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="Weapon" tag="HasSpread"/>
    <tag group="Manufac" tag="Ares"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="WpDamType" tag="Stun"/>
    <tag group="Mode" tag="Single"/>
    <tag group="AmmoType" tag="Battery"/>
    <tag group="ReloadType" tag="Clip"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="ExCountAs" tag="wpLAG1_DEW"/>
    <tag group="RangeCat" tag="rcShotSlug"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGSpiderSilk" name="Spidersilk Gland" description="Spidersilk is renowned for its strength in relation to its weight, so engineers have long looked for ways to harness its abilities. By implanting glands that shoot a reasonable facsimile of spidersilk from the human body, people get the opportunity to trip up opponents, or even rappel down a building. Don&apos;t try swinging from it, though - this is not a comic book. Glands are often implanted in people&apos;s wrists; those ones hold two doses, with each dose being about twenty meters long. Glands implanted in the abdomen or lower back can hold five doses. When the silk shoots out, the user can choose to keep it stuck to the gland, or they can snip it off. Aiming spidersilk at a target requires an Exotic Ranged Weapon (Spidersilk) attack. A successful hit does no damage, but gives the target -2 on their Physical limit. Called shots incur the normal -4 penalty, but if successful they can hit the feet, tripping the target as long as the attack generated any net hits, or temporarily disabling their hands if that&apos;s what was hit. The target will need 5 Combat Turns to disentangle themselves, unless they have a special enzyme, available for 25 nuyen a dose, that can dissolve it in 2 Combat Turns.\n\nWhen used in rappelling situations, add +3 dice to the required Free-fall + Body test." compset="Ranged" replaces="auSpdrsilk">
    <fieldval field="grCost" value="35000"/>
    <fieldval field="wpShort" value="20"/>
    <fieldval field="grAvail" value="10"/>
    <fieldval field="grEssence" value=".3"/>
    <arrayval field="usrArray" index="0" value="Wrist"/>
    <arrayval field="usrArray" index="1" value="Abdomen"/>
    <arrayval field="usrArray" index="2" value="Lower Back"/>
    <usesource source="RHExotics"/>
    <tag group="Equipment" tag="Natural"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="OverDamage" tag="dmTrapSilk"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="Augment" tag="Bio"/>
    <tag group="AugCat" tag="Bioware"/>
    <tag group="ExCountAs" tag="wpLAG1BioSpray"/>
    <tag group="Show" tag="SpecialTab"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Armory" tag="Projectile"/>
    <tag group="WeaponNote" tag="Tool"/>
    <tag group="Helper" tag="AugOnly"/>
    <bootstrap thing="trkSpdrslk"></bootstrap>
    <eval phase="Effects" priority="10000"><![CDATA[doneif (activated = 0)

#situational[hero.childfound[skaFreeFal],"+3 dice when used in rappelling situations",field[thingname].text]

if (compare(field[usrSelect].text,"Wrist") = 0) then
  field[Value].value = 2
else
  field[Value].value = 5
  endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGSpit" name="Spit" description="An unusual choice as it always exposes the user to the chemical, spitting involves a sphincter added to the mouth that can be opened by contraction of facial muscles or continuous tongue placement, unlocking a single dose of the substance for use. Metahuman spit with a concentrated chemical core can be launched up to 5 meters. A user may only have one implant, and they use the Exotic Ranged Weapon (Spitter) skill to employ it." compset="Ranged" replaces="auSpit">
    <fieldval field="grCost" value="6000"/>
    <fieldval field="grAvail" value="12"/>
    <fieldval field="grEssence" value=".1"/>
    <fieldval field="wpShort" value="5"/>
    <usesource source="RHExotics"/>
    <tag group="Armory" tag="Projectile"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="Equipment" tag="Natural"/>
    <tag group="OverDamage" tag="Chemical"/>
    <tag group="Augment" tag="Bio"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="Equipment" tag="HideActive"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="Helper" tag="AugOnly"/>
    <tag group="Helper" tag="Shadow"/>
    <tag group="ExCountAs" tag="wpLAG1BioSpray"/>
    <tag group="WeaponNote" tag="NoRecoil"/>
    <tag group="ModCat" tag="auChemGlan"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="Equipment" tag="FixRating"/>
    <exprreq message="Chemical Gland already has a delivery method.">parent.tagis[ModInstall.auExhaSpra] + parent.tagis[ModInstall.auInteRele] + parent.tagis[ModInstall.auGradRele] + parent.tagis[ModInstall.auWeapRese] = 0</exprreq>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGSprayer" name="Sprayer" description="Useless without a chemical gland to attach it to, the sprayer is a tubular sphincter lined with powerful muscles, allowing the user to spray a tight jet of liquid. This results in a weapon delivery system not unlike a skunk, though the chemical used can generate quite a range of results. Thanks to the powerful muscle contraction, this jet can strike a target as far away as five meters, but it uses two doses of chemicals in the process.\n\nThe Sprayer uses the Exotic Ranged Weapons (Bio-Sprayer) skill." compset="Ranged" replaces="auSprayer">
    <fieldval field="grCost" value="4000"/>
    <fieldval field="grAvail" value="8"/>
    <fieldval field="grEssence" value=".25"/>
    <fieldval field="wpShort" value="5"/>
    <usesource source="RHExotics"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="OverDamage" tag="Chemical"/>
    <tag group="Equipment" tag="HideActive"/>
    <tag group="Augment" tag="Bio"/>
    <tag group="AugCat" tag="BioWeapon"/>
    <tag group="Armory" tag="Projectile"/>
    <tag group="Helper" tag="Shadow"/>
    <tag group="Helper" tag="AugOnly"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="Equipment" tag="Natural"/>
    <tag group="ExCountAs" tag="wpLAG1BioSpray"/>
    <exprreq message="Chemical Gland required."><![CDATA[hero.tagis[HasAugment.auChemGlan] <> 0]]></exprreq>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGCorrSpit" name="Corrosive Spit" description="The critter&apos;s saliva (or some other chemical it can shoot) is extremely caustic and can be used as a weapon. It&apos;s treated as a standard ranged combat attack, using the critter&apos;s Exotic Ranged Weapon skill + Agility [Physical], with range increments of (Body) meters. The spit causes Acid damage (p. 170), with a DV of (Magic x 2)P and an AP of - (critter&apos;s Magic)." compset="Ranged" replaces="wpCorSpitQ">
    <fieldval field="wpDamage" value="6"/>
    <usesource source="RHExotics"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="ExCountAs" tag="wpLAG1BioSpray"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Equipment" tag="Natural"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="Mode" tag="Single"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="WpDamSpec" tag="Acid"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="Shadow"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <tag group="QualityCat" tag="Positive" name="Positive Quality" abbrev="Positive Quality"/>
    <eval phase="Traits" priority="14000">~our range increments are our Body attribute
      field[wpShort].value += #trait[attrBod]
      field[wpMedium].value += #trait[attrBod] * 2
      field[wpLong].value += #trait[attrBod] * 3
      field[wpExtreme].value += #trait[attrBod] * 4
      <after name="Calc trtFinal Final"/>
      </eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGParaDartPist" name="Parashield Dart Pistol" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="ParaDartPi" name="ParashieldDartPistol"/>
    <tag group="SkillList" tag="skaPistol"/>
    <tag group="SkillHelp" tag="SpecModCol"/>
    </thing>
  <thing id="wpLAGParaDartPi" name="Parashield Dart Pistol" description="The industry standard dart pistol, this fires injection darts (p. 434) with narcoject or another payload. The Parashield dart pistol uses Heavy Pistol ranges and can take top-mounted accessories." compset="Ranged" replaces="wpParaDPis">
    <fieldval field="grCost" value="600"/>
    <fieldval field="grAvail" value="4"/>
    <fieldval field="dvWireDesc" value="The dart reports whether or not it has struck home and successfully injected. It may also report any gross physical anomalies in the target&apos;s tissue, although its medical sensors are not very sophisticated (Device Rating of 1 for the dart)."/>
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="wpAmmoCap" value="5"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="RangeCat" tag="rcHPistol" name="Heavy Pistol" abbrev="Heavy Pistol"/>
    <tag group="ReloadType" tag="Clip" name="Clip" abbrev="(c)"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="AmmoType" tag="Inject" name="Injection Darts" abbrev="Injection Darts"/>
    <tag group="Armory" tag="Firearm" name="Firearm" abbrev="Firearm"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Manufac" tag="Parashield" name="Parashield" abbrev="Parashield"/>
    <tag group="Mode" tag="SemiAuto" name="Semi-Automatic" abbrev="SA"/>
    <tag group="WpCategory" tag="ParaDartPi"/>
    <tag group="OverDamage" tag="Chemical" name="Damage Derived From Toxin/Chemical" abbrev="By Chem."/>
    <tag group="Mount" tag="Top" name="Top" abbrev="Top"/>
    <tag group="WpGroup" tag="Pistol"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGParaDartPist] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.ParaDartPi"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGParaDartRi" name="Parashield Dart Rifle" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="Equipment" tag="TwoHand" name="Requires two hands" abbrev="Requires two hands"/>
    <tag group="SkillList" tag="skaLongarm"/>
    <tag group="WpCategory" tag="ParaDartRi" name="Parashield Dart Rifle"/>
    </thing>
  <thing id="wpLAGParaDartRi" name="Parashield Dart Rifle" description="Originally designed to non-lethally take down large game animals at long ranges, the Parashield dart rifle uses compressed air cartridges to fire injection darts. This weapon includes a top-mounted imaging scope. It uses sporting rifle ranges and can mount top and underbarrel accessories." compset="Ranged" replaces="wpParaDRif">
    <fieldval field="grCost" value="1200"/>
    <fieldval field="grAvail" value="6"/>
    <fieldval field="dvWireDesc" value="The dart reports whether or not it has struck home and successfully injected. It may also report any gross physical anomalies in the target&apos;s tissue, although its medical sensors are not very sophisticated (Device Rating of 1 for the dart)."/>
    <fieldval field="dpLimit" value="6"/>
    <fieldval field="wpAmmoCap" value="6"/>
    <fieldval field="wpBonus" value="-2"/>
    <tag group="Mount" tag="Top" name="Top" abbrev="Top"/>
    <tag group="Mount" tag="Under" name="Underbarrel" abbrev="Under"/>
    <tag group="OverDamage" tag="Chemical" name="Damage Derived From Toxin/Chemical" abbrev="By Chem."/>
    <tag group="RangeCat" tag="rcSporting" name="Sporting Rifle" abbrev="Sporting Rifle"/>
    <tag group="ReloadType" tag="Magazine" name="Internal Magazine" abbrev="(m)"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="AmmoType" tag="Inject" name="Injection Darts" abbrev="Injection Darts"/>
    <tag group="Armory" tag="Firearm" name="Firearm" abbrev="Firearm"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="TwoHand" name="Requires two hands" abbrev="Requires two hands"/>
    <tag group="Manufac" tag="Parashield" name="Parashield" abbrev="Parashield"/>
    <tag group="WpCategory" tag="ParaDartRi"/>
    <tag group="Mode" tag="SemiAuto" name="Semi-Automatic" abbrev="SA"/>
    <tag group="WpGroup" tag="SportRif"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGParaDartRi] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.ParaDartRi"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang">
      <bootstrap thing="acImaScope"></bootstrap>
      </child>
    </thing>
  <thing id="spLAGMicroFlare" name="Micro Flare Launcher" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaPistol" name="Pistols" abbrev="Pistols"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="MicroFlare" name="Micro Flare Launcher"/>
    </thing>
  <thing id="wpLAGMicroFlare" name="Micro Flare Launcher" description="The flare launcher can shoot colored flares about 200 meters into the air, illuminating an area the size of a city block for a couple of minutes and negating the modifier for poor or low lighting. If you shoot it at someone, use the Exotic Ranged Weapon skill; the micro flare deals 5P Fire damage." compset="Ranged" replaces="wpMicFlare">
    <fieldval field="grCost" value="175"/>
    <fieldval field="grSpace" value="1"/>
    <fieldval field="dpLimit" value="3"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="wpDamage" value="5"/>
    <fieldval field="wpAP" value="-5"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="ReloadType" tag="MuzzLoad" name="Muzzle-Loading" abbrev="(ml)"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="WeaponNote" tag="Tool" name="A tool, not intended for combat" abbrev="A tool, not intended for combat"/>
    <tag group="WpDamSpec" tag="Fire" name="Fire" abbrev="(fire)"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="AmmoType" tag="Flare" name="Flares" abbrev="Flares"/>
    <tag group="Armory" tag="Firearm" name="Firearm" abbrev="Firearm"/>
    <tag group="EquipCat" tag="Survival" name="Survival Gear" abbrev="Survival Gear"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Helper" tag="Shadow" name="Shadow" abbrev="Shadow"/>
    <tag group="ModCat" tag="ArmorAddOn" name="ArmorAddOn" abbrev="ArmorAddOn"/>
    <tag group="WpCategory" tag="MicroFlare"/>
    <tag group="RangeCat" tag="rcLgtXBow" name="Light Crossbow" abbrev="Light Crossbow"/>
    <tag group="Mode" tag="Single" name="Single Shot" abbrev="SS"/>
    <tag group="WpGroup" tag="Pistol"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGMicroFlare] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.MicroFlare"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGGyrojet" name="FN-AAL Gyrojet Pistol" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaPistol" name="Pistols" abbrev="Pistols"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Gyrojet" name="FN-AAL Gyrojet Pistol"/>
    </thing>
  <thing id="wpLAGGyrojet" name="FN-AAL Gyrojet pistol" description="This is the preferred weapon of many military marine and combat diving teams like the British Special Boat Squadron or the German Kampfschwimmer. It fires self-propelling miniature rockets that explode upon impact; though it was initially developed for underwater combat, it has also proven to be quite effective on land.\n\nThe FN-AAL Gyrojet pistol can mount the same accessories as a heavy pistol and uses the same ranges. When it is used underwater, increase any DV ratings by +1 in addition to any other modifiers." compset="Ranged" replaces="wpFNAAGyro">
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="grCost" value="2000"/>
    <fieldval field="wpDamage" value="10"/>
    <fieldval field="wpAP" value="-2"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpAmmoCap" value="10"/>
    <fieldval field="grAvail" value="12"/>
    <usesource source="RHExotics"/>
    <tag group="ModCatAllw" tag="Firearm"/>
    <tag group="ModCatAllw" tag="Ranged"/>
    <tag group="ModCatAllw" tag="Weapon"/>
    <tag group="Mount" tag="Barrel"/>
    <tag group="Mount" tag="Internal"/>
    <tag group="Mount" tag="Side"/>
    <tag group="Mount" tag="Stock"/>
    <tag group="Mount" tag="Top"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="WpCategory" tag="Gyrojet"/>
    <tag group="Mode" tag="SemiAuto"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="AmmoType" tag="Gyrojet"/>
    <tag group="ReloadType" tag="Clip"/>
    <tag group="RangeCat" tag="rcHPistol"/>
    <tag group="Manufac" tag="FN"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="WpGroup" tag="Pistol"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGGyrojet] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Gyrojet"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGSimoom" name="Shooting Bracers" description="This covers the Shiawase Arms Simoom, and the Tiffani Élégance Shooting Bracers." compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="SASimoom" name="Shiawase Arms Simoom"/>
    <tag group="SkillList" tag="skaPistol"/>
    </thing>
  <thing id="wpLAGSimoom" name="Shiawase Arms Simoom" description="Combining the best of offense and defense, this set of forearm guards (p. 73, {i}Run &amp; Gun{/i}) offers +1 Armor and has a built in light pistol &quot;Magazine Barrel&quot; on the dominant arm&apos;s guard. Firing is a Complex Action. The magazine barrel holds 6 shots that can be fired individually or all at once as full auto fire. The Simoom uses pistol ranges. Full Auto fire takes a -2 penalty from recoil. The offhand guard has one capacity slot that stores a spare barrel magazine (nonfiring) standard but can be repurposed with other equipment. The Concelability modifier to hide the true function of the bracer is -4{i}.{/i}" compset="Ranged">
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="grCost" value="1500"/>
    <fieldval field="dvWireDesc" value="Firing is a Simple Action."/>
    <fieldval field="wpAmmoCap" value="6"/>
    <fieldval field="wpDamage" value="6"/>
    <usesource source="RHExotics"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="Equipment" tag="HideActive"/>
    <tag group="MountNo" tag="Side"/>
    <tag group="MountNo" tag="Stock"/>
    <tag group="MountNo" tag="Top"/>
    <tag group="MountNo" tag="Under"/>
    <tag group="WpCategory" tag="SASimoom"/>
    <tag group="Manufac" tag="Shiawase"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="AmmoType" tag="Bullet"/>
    <tag group="RangeCat" tag="rcLPistol"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="ReloadType" tag="MuzzLoad"/>
    <tag group="Mode" tag="SemiAuto"/>
    <tag group="Mode" tag="FullAuto10"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="WpGroup" tag="Pistol"/>
    <eval phase="Final" priority="10000">~we decrease the recoil cost for shooting 6+ rounds at once by -1 at
~each step
var i as number
for i = 6 to field[wpCaRecoil].arrayrows - 1
  field[wpCaRecoil].arrayvalue[i] -= 1
  next
      <before name="Calc wpCaRecoil"/>
      </eval>
    <eval phase="Final" priority="20001" index="2"><![CDATA[if (this.hero.tagcount[Specialty.spLAGSimoom] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.SASimoom"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGTiffElegance" name="Tiffani Élégance Shooting Bracers" description="Elegant and deadly in one high fashion package. Tiffani has made the Élégance for years, and dozens of basic designs are out there now. The truly elite get their bracers customized to match their newest fashions, and some have gathered quite the collection of Élégance bracers in their closet.\n\nThe Élégance Shooting Bracer can only use caseless ammunition and uses taser ranges. It cannot mount any accessories. The bracer&apos;s Concealability modifier to hide its true function is -5 (see p. 419, {i}SR5{/i})." compset="Ranged" replaces="wpTiffEleg">
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="grCost" value="1250"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpDamage" value="7"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="grAvail" value="10"/>
    <usesource source="RHExotics"/>
    <tag group="MountNo" tag="Barrel"/>
    <tag group="MountNo" tag="Internal"/>
    <tag group="MountNo" tag="Side"/>
    <tag group="MountNo" tag="Stock"/>
    <tag group="MountNo" tag="Top"/>
    <tag group="MountNo" tag="Under"/>
    <tag group="WpCategory" tag="SASimoom"/>
    <tag group="Mode" tag="Single"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="AmmoType" tag="Bullet"/>
    <tag group="AmmoCat" tag="rcLPistol"/>
    <tag group="ReloadType" tag="BreakAct"/>
    <tag group="ForceCased" tag="Caseless"/>
    <tag group="RangeCat" tag="rcTaser"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="WpGroup" tag="Pistol"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGSimoom] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.SASimoom"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang">
      <bootstrap thing="acLaser"></bootstrap>
      </child>
    </thing>
  <thing id="spLAGGunCane" name="Gun Canes" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="SkillList" tag="skaLongarm" name="Longarms" abbrev="Longarms"/>
    <tag group="Equipment" tag="TwoHand" name="Requires two hands" abbrev="Requires two hands"/>
    <tag group="WpCategory" tag="GunCanes" name="Gun Canes"/>
    </thing>
  <thing id="wpLAGMortCane" name="Mortimer &quot;Trafalgar&quot; Gun Cane" description="Where fashion meets defense, this single-shot weapon is a fashion accessory with both form and function. Designed to look just like Mortimer&apos;s regular line of dress canes, the Trafalger tag goes on any of the gun canes no matter what they look like.\n\nThe gun cane uses taser ranges, can only use caseless ammo, and cannot mount any accessories. It is fired with the Exotic Ranged Weapons (Gun Cane) skill. Its Concealment modifiers are +0 for the whole cane and -6 to detect its true nature (see p. 419, {i}SR5{/i})." compset="Ranged" replaces="wpMortTraf">
    <fieldval field="grCost" value="750"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="dpLimit" value="6"/>
    <fieldval field="wpDamage" value="7"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="grAvail" value="9"/>
    <usesource source="RHExotics"/>
    <tag group="MountNo" tag="Internal"/>
    <tag group="MountNo" tag="Side"/>
    <tag group="MountNo" tag="Stock"/>
    <tag group="MountNo" tag="Top"/>
    <tag group="MountNo" tag="Under"/>
    <tag group="Manufac" tag="Mortimer"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="WpCategory" tag="GunCanes"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="AmmoType" tag="Bullet"/>
    <tag group="ReloadType" tag="BreakAct"/>
    <tag group="ForceCased" tag="Caseless"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="RangeCat" tag="rcTaser"/>
    <tag group="MountNo" tag="Barrel"/>
    <tag group="WpGroup" tag="SportRif"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGGunCane] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.GunCanes"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGGunCane" name="Knockoff Gun Cane" description="Where fashion meets defense, this single-shot weapon is a fashion accessory with both form and function. Designed to look just like Mortimer&apos;s regular line of dress canes, the Trafalger tag goes on any of the gun canes no matter what they look like.\n\nThe gun cane uses taser ranges, can only use caseless ammo, and cannot mount any accessories. It is fired with the Exotic Ranged Weapons (Gun Cane) skill. Its Concealment modifiers are +0 for the whole cane and -6 to detect its true nature (see p. 419, {i}SR5{/i}).\n\nThe Knockoff models are destroyed after firing." compset="Ranged" replaces="wpGunCane">
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="grCost" value="150"/>
    <fieldval field="wpDamage" value="9"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="grAvail" value="6"/>
    <usesource source="RHExotics"/>
    <tag group="MountNo" tag="Internal"/>
    <tag group="MountNo" tag="Side"/>
    <tag group="MountNo" tag="Stock"/>
    <tag group="MountNo" tag="Top"/>
    <tag group="MountNo" tag="Under"/>
    <tag group="WpCategory" tag="GunCanes"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="AmmoType" tag="Bullet"/>
    <tag group="ForceCased" tag="Caseless"/>
    <tag group="RangeCat" tag="rcTaser"/>
    <tag group="MountNo" tag="Barrel"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="WpGroup" tag="SportRif"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGGunCane] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.GunCanes"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGGrapple" name="Grapple Guns" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="Equipment" tag="TwoHand" name="Requires two hands" abbrev="Requires two hands"/>
    <tag group="SkillList" tag="skaArchery"/>
    <tag group="WpCategory" tag="GrappleGuns" name="Grapple Guns"/>
    </thing>
  <thing id="wpLAGGrappleBase" name="Grapple Gun" description="This gun can shoot a grappling hook and attached rope, using Light Crossbow ranges. It comes equipped with an internal winch to pull back the grapple (or pull up small loads). Use the Exotic Ranged Weapon skill to shoot it. Micro rope can support a weight of up to 100 kilograms; standard and stealth ropes can support a weight of up to 400 kilograms." compset="Ranged" replaces="wpGrapGun">
    <fieldval field="grCost" value="500"/>
    <fieldval field="grAvail" value="8"/>
    <fieldval field="dpLimit" value="3"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="wpDamage" value="7"/>
    <fieldval field="wpAP" value="-2"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="WeaponNote" tag="Tool" name="A tool, not intended for combat" abbrev="A tool, not intended for combat"/>
    <tag group="WpDamType" tag="Stun" name="Stun" abbrev="S"/>
    <tag group="Armory" tag="Firearm" name="Firearm" abbrev="Firearm"/>
    <tag group="EquipCat" tag="GrappleGun" name="Grapple Gun" abbrev="Grapple Gun"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Helper" tag="Shadow" name="Shadow" abbrev="Shadow"/>
    <tag group="ModCat" tag="UnderGrapp" name="Underbarrel Grapple Gun" abbrev="Underbarrel Grapple Gun"/>
    <tag group="Mode" tag="Single" name="Single Shot" abbrev="SS"/>
    <tag group="WpCategory" tag="GrappleGuns"/>
    <tag group="RangeCat" tag="rcHvyXBow" name="Heavy Crossbow" abbrev="Heavy Crossbow"/>
    <tag group="ReloadType" tag="MuzzLoad" name="Muzzle-Loading" abbrev="(ml)"/>
    <tag group="WpGroup" tag="Crossbow"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGGrapple] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.GrappleGuns"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGGrapAug" name="Grapple Gun" description="This is an implanted version of the grapple gun described on p. 449. It doesn&apos;t store any rope inside it, but you can attach an external rope before you shoot the grapple.\n\n{b}Grapple Gun{/b}\nThis gun can shoot a grappling hook and attached rope, using Light Crossbow ranges. It comes equipped with an internal winch to pull back the grapple (or pull up small loads). Use the Exotic Ranged Weapon skill to shoot it. Micro rope can support a weight of up to 100 kilograms; standard and stealth ropes can support a weight of up to 400 kilograms." compset="Ranged" replaces="auGrapGun">
    <fieldval field="grCost" value="5000"/>
    <fieldval field="grAvail" value="8"/>
    <fieldval field="grEssence" value="0.5"/>
    <fieldval field="grSpace" value="4"/>
    <fieldval field="dpLimit" value="3"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="wpDamage" value="7"/>
    <fieldval field="wpAP" value="-2"/>
    <fieldval field="wpBonus" value="-2"/>
    <tag group="RangeCat" tag="rcLgtXBow" name="Light Crossbow" abbrev="Light Crossbow"/>
    <tag group="ReloadType" tag="MuzzLoad" name="Muzzle-Loading" abbrev="(ml)"/>
    <tag group="WeaponNote" tag="Tool" name="A tool, not intended for combat" abbrev="A tool, not intended for combat"/>
    <tag group="WpDamType" tag="Stun" name="Stun" abbrev="S"/>
    <tag group="Armory" tag="Firearm" name="Firearm" abbrev="Firearm"/>
    <tag group="AugCat" tag="Bodyware" name="Bodyware" abbrev="Bodyware"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="NonUnique" name="NonUnique" abbrev="NonUnique"/>
    <tag group="Helper" tag="AugOnly" name="Augmentation Only" abbrev="Augmentation Only"/>
    <tag group="Helper" tag="Shadow" name="Shadow" abbrev="Shadow"/>
    <tag group="ModCat" tag="Bodyware" name="Bodyware" abbrev="Bodyware"/>
    <tag group="WpCategory" tag="GrappleGuns"/>
    <tag group="Mode" tag="Single" name="Single Shot" abbrev="SS"/>
    <tag group="WpGroup" tag="Crossbow"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGGrapple] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.GrappleGuns"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGGrapTact" name="Tactical Grapple Gun" description="Similar to the standard issue grapple gun, but with significant improvements for military and security use. These include an integral smartlink with customized software, interchangeable specialized grapple heads, upgraded winch motor, and improved range (uses Heavy Crossbow ranges, p. 476, SR5). Grapple heads can be ejected through a smartlink, and replacing them is a Complex Action. This model comes standard with arachnofibre rope (600kg break strength and extremely thin). Other features include:\n\n{i}Harpoon head:{/i} Intended to pierce rather than hook. DV 9P, AP –4. (300¥ replacement cost)\n\n{i}Articulated grapnel:{/i} Has articulated mechanical “fingers” providing improved gripping ability on difficult surfaces. Reduce surface-related environmental modifiers, such as slickness, by two. (1,000¥ replacement cost)\n\n{i}Sticky grapnel:{/i} A thin shell covering that shatters upon contact, releasing a sticky, fibrous material. Allows the head to stick to a flat, dry surface and provide an anchor point as effective as a normal grapnel. Requires industrial solvent to remove. Single use (150¥ replacement cost).\n\n{i}Grenade reel:{/i} As a Standard Action, after a grapple head has been affixed to a target the reel can be released from the gun mechanism. It then coils itself automatically, pulling the reel up to where the grapple is affixed. The reel contains space for one minigrenade of the user’s choice and can be detonated via wireless command. (750¥ + grenade cost to replace.)" compset="Ranged" replaces="wpTactGrap">
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="grCost" value="10000"/>
    <fieldval field="wpDamage" value="9"/>
    <fieldval field="wpAP" value="-2"/>
    <fieldval field="wpRecComp" value="1"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="grAvail" value="15"/>
    <usesource source="RHExotics"/>
    <tag group="ModCatAllw" tag="mdTactGrap"/>
    <tag group="WpDamType" tag="Stun"/>
    <tag group="WpCategory" tag="GrappleGuns"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="WeaponNote" tag="Tool"/>
    <tag group="AmmoType" tag="Grapple"/>
    <tag group="ReloadType" tag="BreakAct"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="RangeCat" tag="rcHvyXBow"/>
    <tag group="Mode" tag="Single"/>
    <tag group="EquipCat" tag="GrappleGun" name="Grapple Gun" abbrev="Grapple Gun"/>
    <tag group="WpGroup" tag="Crossbow"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGGrapple] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.GrappleGuns"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang">
      <bootstrap thing="mdSmartgun"></bootstrap>
      </child>
    </thing>
  <thing id="wpLAGGrapHand" name="Grapple Hand" description="A modification to a cyberarm (either partial or full) that consists of a winch, a feed system capable of loading up to thirty meters of wire, and a pneumatic launcher that can fire the cyberhand up to the full range of the wire, which also serves as a command path to let the hand grab hold of a distant target. Once a firm grip is secured, the winch can pull them toward the hand at a rate of ten meters per Combat Turn, or half that silently. Should a grip not be made, it can rewind the hand at a rate of twenty-five meters per turn, or ten meters silently. It takes one minute for the air compressor to ready the hand for another shot.\n\nUse Exotic Ranged Weapon (Grapple Gun) for targeting with the launched hand." compset="Ranged" replaces="auGrapHand">
    <fieldval field="dpLimit" value="3"/>
    <fieldval field="wpDamage" value="7"/>
    <fieldval field="wpAP" value="-2"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="grAvail" value="12"/>
    <fieldval field="grEssence" value=".45"/>
    <fieldval field="grSpace" value="10"/>
    <fieldval field="grCost" value="2000"/>
    <tag group="WpDamType" tag="Stun"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="WeaponNote" tag="Tool"/>
    <tag group="Augment" tag="Cyber"/>
    <tag group="AugCat" tag="Cyberlimbs"/>
    <tag group="Helper" tag="Shadow"/>
    <tag group="Helper" tag="AugOnly"/>
    <tag group="WpCategory" tag="GrappleGuns"/>
    <tag group="ReloadType" tag="MuzzLoad"/>
    <tag group="Mode" tag="Single"/>
    <tag group="RangeCat" tag="rcHvyXBow"/>
    <tag group="ModCat" tag="Cyberlimbs"/>
    <tag group="Equipment" tag="NonUnique"/>
    <tag group="AccessType" tag="ArmLower" name="Cyber Arm Lower" abbrev="Cyber Arm Lower"/>
    <tag group="AccessType" tag="Hand" name="Cyberhand" abbrev="Cyberhand"/>
    <tag group="EquipCat" tag="Survival" name="Survival Gear" abbrev="Survival Gear"/>
    <tag group="WpGroup" tag="Crossbow"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGGrapple] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.GrappleGuns"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGBlowgun" name="Blowguns" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaArchery" name="Archery" abbrev="Archery"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Blowgun" name="Blowguns" abbrev="Blowguns"/>
    </thing>
  <thing id="wpLAGBlowgun" name="Blowgun" description="Nope, not kidding. The blowgun has been silently neutralizing targets for hundreds of years. Especially popular with stealthy forces that like to poison their targets and then recover their goodies or finish them off once they are no longer able to fight off a flea. They take a lot of skill to use and almost always include a drug or toxin on their needles. Otherwise it would just be ranged acupuncture.\n\nBlowguns are fired with the Exotic Ranged Weapon (Blowgun) skill. To deliver a toxin with a blowgun needle, use the Called Shot Location rules to target an area not protected by armor. If the attack succeeds, the poison is delivered.\n\nNote that when using a blowgun, a character may inhale his own dart on a critical glitch; some modern blowguns have a safeguard in form of a small cross-like section in the mouthpiece." compset="Ranged" replaces="wpBlowgun">
    <fieldval field="dpLimit" value="8"/>
    <fieldval field="grCost" value="15"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="wpDamage" value="1"/>
    <fieldval field="grAvail" value="4"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Armory" tag="Projectile"/>
    <tag group="AmmoType" tag="Blowgun"/>
    <tag group="ReloadType" tag="MuzzLoad"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="RangeCat" tag="rcTaser"/>
    <tag group="WpCategory" tag="Blowgun" name="Special Weapons" abbrev="Exotic Ranged Weapon"/>
    <tag group="WpGroup" tag="Crossbow"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGBlowgun] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Blowgun"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGHDExProj" name="Exotic Weapons" compset="Ranged" isshowonly="yes">
    <tag group="Armory" tag="Projectile" name="Projectile" abbrev="Projectile"/>
    <tag group="WpCategory" tag="Blowgun" name="Blowguns" abbrev="Blowguns"/>
    <tag group="WpCategory" tag="Bolas"/>
    </thing>
  <thing id="wpLAGHDExFirearm" name="Exotic Weapons" compset="Ranged" isshowonly="yes">
    <tag group="WpCategory" tag="Gyrojet"/>
    <tag group="WpCategory" tag="MicroFlare"/>
    <tag group="WpCategory" tag="ParaDartPi"/>
    <tag group="WpCategory" tag="SASimoom"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="WpCategory" tag="GrappleGuns"/>
    <tag group="WpCategory" tag="GunCanes"/>
    <tag group="WpCategory" tag="ParaDartRi"/>
    <tag group="WpCategory" tag="Netgun"/>
    </thing>
  <thing id="wpLAGSARetNet" name="SA Retiarius Net Gun" description="This weapon comes in two models, the basic and the XL. The basic is designed for metahumans, except for trolls, and smaller critters; while the XL is intended for trolls and other larger creatures.\n\nWhen a target is hit, apply the rules for nets (see p. 25):\nWith a successful attack using rules for a Grazing Hit (p. 173, {i}SR5{/i}), the net lands over an opponent and they are considered to be in subduing combat (p. 195, {i}SR5{/i}). An attacker must move to the target in order to engage in any of the Subduing actions.\n\nTo break free of the net, the subdued character rolls Agility + Unarmed Combat (rather than Strength + Unarmed Combat) or Agility + Escape Artist as a Complex Action, against a threshold equal to the attacker&apos;s net hits.\n\nIf a large net is used against a normal sized target, the target receives a -2 modifier on his Agility, while a large target hit by a normal sized net receives a +2 Agility modifier. Net guns use light pistol ranges and cannot mount any accessories." compset="Ranged" replaces="wpSARetiNr">
    <fieldval field="dpLimit" value="8"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="grCost" value="750"/>
    <fieldval field="wpAmmoCap" value="4"/>
    <fieldval field="grAvail" value="9"/>
    <usesource source="RHExotics"/>
    <tag group="MountNo" tag="Barrel"/>
    <tag group="MountNo" tag="Internal"/>
    <tag group="MountNo" tag="Side"/>
    <tag group="MountNo" tag="Stock"/>
    <tag group="MountNo" tag="Top"/>
    <tag group="MountNo" tag="Under"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="OverDamage" tag="Entangle"/>
    <tag group="AmmoType" tag="Net"/>
    <tag group="ReloadType" tag="BreakAct"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="RangeCat" tag="rcLPistol"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Manufac" tag="Shiawase"/>
    <tag group="WpCategory" tag="Netgun"/>
    <tag group="WpGroup" tag="Crossbow"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="wpLAGSARetNetXl" name="SA Retiarius XL Net Gun" description="This weapon comes in two models, the basic and the XL. The basic is designed for metahumans, except for trolls, and smaller critters; while the XL is intended for trolls and other larger creatures.\n\nWhen a target is hit, apply the rules for nets (see p. 25):\nWith a successful attack using rules for a Grazing Hit (p. 173, {i}SR5{/i}), the net lands over an opponent and they are considered to be in subduing combat (p. 195, {i}SR5{/i}). An attacker must move to the target in order to engage in any of the Subduing actions.\n\nTo break free of the net, the subdued character rolls Agility + Unarmed Combat (rather than Strength + Unarmed Combat) or Agility + Escape Artist as a Complex Action, against a threshold equal to the attacker&apos;s net hits.\n\nIf a large net is used against a normal sized target, the target receives a -2 modifier on his Agility, while a large target hit by a normal sized net receives a +2 Agility modifier. Net guns use light pistol ranges and cannot mount any accessories." compset="Ranged" replaces="wpSARetiLr">
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="grCost" value="1000"/>
    <fieldval field="wpAmmoCap" value="2"/>
    <fieldval field="grAvail" value="9"/>
    <usesource source="RHExotics"/>
    <tag group="Manufac" tag="Shiawase"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Equipment" tag="ShowRating"/>
    <tag group="WpCategory" tag="Netgun"/>
    <tag group="MountNo" tag="Barrel"/>
    <tag group="MountNo" tag="Internal"/>
    <tag group="MountNo" tag="Side"/>
    <tag group="MountNo" tag="Stock"/>
    <tag group="MountNo" tag="Top"/>
    <tag group="MountNo" tag="Under"/>
    <tag group="OverDamage" tag="Entangle"/>
    <tag group="AmmoType" tag="NetXL"/>
    <tag group="ReloadType" tag="BreakAct"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="RangeCat" tag="rcLPistol"/>
    <tag group="WpGroup" tag="Crossbow"/>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGNetGuns" name="Net Guns" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaArchery" name="Archery" abbrev="Archery"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Netgun" name="Net Guns"/>
    </thing>
  <thing id="wpLAGBolaLaunch" name="Underbarrel Bola Launcher" description="Would your weapon be enhanced by the ability to throw out two balls connected by a thin rope that can entangle and trip up your opponent? If your answer is &quot;no,&quot; please go back and read the questions again. As the name indicates, this goes on the underneath slot, and it can only go on weapons rifle-sized or larger The launched bola works in the same way as a regular bola (p. 27) as thrown by someone with Strength 5. It uses Heavy Pistol ranges, and wielders fire it with the Exotic Ranged Weapon (Bola) skill." compset="Ranged" replaces="wpUnderBol">
    <fieldval field="grCost" value="350"/>
    <fieldval field="wpSpecial" value="A standard bola requires the target to make an immediate Agility + Gymnastics [Physical] Test with a threshold of the attacker&apos;s net hits; if they fail, they fall prone."/>
    <fieldval field="wpDamage" value="8"/>
    <fieldval field="wpAP" value="4"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="grAvail" value="8"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="WpDamType" tag="Stun"/>
    <tag group="WpCategory" tag="BolaLaunch"/>
    <tag group="AmmoType" tag="Bola"/>
    <tag group="ReloadType" tag="MuzzLoad"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="ModCat" tag="Firearm"/>
    <tag group="RangeCat" tag="rcHPistol"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="OverDamage" tag="Ammo"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Helper" tag="Shadow"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="AmmoType" tag="Grenade"/>
    <tag group="MountUses" tag="Under" name="Underbarrel" abbrev="Under"/>
    <tag group="WpGroup" tag="Crossbow"/>
    <eval phase="Final" priority="20001" index="2"><![CDATA[if (this.hero.tagcount[Specialty.spLAGBolaLaunch] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.BolaLaunch"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <eval phase="Effects" priority="10000"><![CDATA[~if we're on a weapon, and we've been unequipped, hide us on the
~weapon list
if (container.ishero = 0) then
  if (field[grIsEquip].value = 0) then
    perform assign[Hide.Weapon]
    endif
  endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGBolaLaunch" name="Bola Launchers" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaArchery" name="Archery" abbrev="Archery"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="BolaLaunch" name="Bola Launchers"/>
    </thing>
  <thing id="amLAGAVAC" name="AV Assault Cannon" description="These are Anti-Vehicle rounds for Assault Cannons." compset="Ammunition" lotsize="10" stacking="merge">
    <fieldval field="grLotCost" value="1000"/>
    <fieldval field="grAvail" value="14"/>
    <fieldval field="wpAP" value="-1"/>
    <fieldval field="wpVehAP" value="-4"/>
    <tag group="AmmoType" tag="ACannon" name="Assault Cannon Rounds" abbrev="Assault Cannon Rounds"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Restricted" tag="Forbidden" name="Forbidden" abbrev="F"/>
    <tag group="Weapon" tag="DamageMod" name="Ammo: Damage is a Modification" abbrev="Ammo: Damage is a Modification"/>
    <child entity="grCustAmmo"></child>
    </thing>
  <thing id="amLAGGyroPlus" name="Gyrojet Plus" compset="Ammunition" lotsize="10">
    <fieldval field="wpDamage" value="1"/>
    <fieldval field="wpAP" value="-1"/>
    <fieldval field="grAvail" value="9"/>
    <fieldval field="grCost" value="160"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="AmmoType" tag="Gyrojet" name="Gyrojet" abbrev="Gyrojet"/>
    <tag group="Weapon" tag="DamageMod"/>
    <tag group="Equipment" tag="FixRating"/>
    </thing>
  <thing id="amLAGShExAmmo" name="Custom Exotic Ammo" compset="Ammunition" isshowonly="yes">
    <tag group="AmmoType" tag="AtomizAmmo"/>
    </thing>
  <thing id="spLAGYoYo" name="Yo-Yos" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="SkillList" tag="skaThrow"/>
    <tag group="WpCategory" tag="YoYo" name="Yo-Yos"/>
    </thing>
  <thing id="wpLAGHardYoYo" name="Hardened Yo-Yo" description="Laugh all you want, but the yo-yo was originally designed as a weapon for hunting, and while we think of them as toys for children, they can still be used for their original purpose as well as performing. A hardened yo-yo is simply constructed out of a tougher material, such as hardwood or metal. A bladed yo-yo is exactly what you think, while a monofilament yo-yo is safer to use than a monofilament whip but not by much. Each counts as a Professional Grade instrument for performing tricks." compset="Melee">
    <fieldval field="grCost" value="600"/>
    <fieldval field="grAvail" value="8"/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpDamage" value="1"/>
    <fieldval field="wpReach" value="1"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="WpCategory" tag="YoYo"/>
    <tag group="Weapon" tag="NoTwoBonus" name="Doesn&apos;t Increase DV when wielded two-handed" abbrev="Doesn&apos;t Increase DV when wielded two-handed"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="WpGroup" tag="Throwing"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGYoYo] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.YoYo"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGSharpYoYo" name="Bladed Yo-Yo" description="Laugh all you want, but the yo-yo was originally designed as a weapon for hunting, and while we think of them as toys for children, they can still be used for their original purpose as well as performing. A hardened yo-yo is simply constructed out of a tougher material, such as hardwood or metal. A bladed yo-yo is exactly what you think, while a monofilament yo-yo is safer to use than a monofilament whip but not by much. Each counts as a Professional Grade instrument for performing tricks." compset="Melee">
    <fieldval field="grCost" value="600"/>
    <fieldval field="grAvail" value="12"/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpDamage" value="1"/>
    <fieldval field="wpReach" value="1"/>
    <fieldval field="wpAP" value="-1"/>
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="Weapon" tag="NoTwoBonus" name="Doesn&apos;t Increase DV when wielded two-handed" abbrev="Doesn&apos;t Increase DV when wielded two-handed"/>
    <tag group="WpCategory" tag="YoYo" name="Yo-Yos" abbrev="Yo-Yos"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <tag group="Weapon" tag="DamageStr" name="Add STR to Damage" abbrev="Add STR to Damage"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="WpGroup" tag="Throwing"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGYoYo] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.YoYo"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="spLAGBola" name="Bolas" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaThrow" name="Throwing Weapons" abbrev="Throwing Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Bolas" name="Bolas"/>
    </thing>
  <thing id="wpLAGBolas" name="Bolas" description="Take a pair of rocks, tie them together with a rope. Now you have basic bolas. Take that and throw it at something, letting the extra centrifugal force give it some added punch. Now get fancy and try and wrap it around your target. It&apos;s not easy, but if you hit just right it&apos;s both a takedown and a load of pain all in one. Modern bolas aren&apos;t rocks tied with strings; instead, they&apos;re usually solid steel connected with wire, often with three balls instead of two. They&apos;re a favorite weapon of hunters that prefer to take their prey alive, especially bounty hunters.\n\nBolas can do one of two types of damage based on their use. When thrown to hit a target, make an Exotic Ranged Weapon (Bolas) Attack Test (use the DV and AP stats on the left side of the slash for monofilament bolas).\n\nWhen thrown with the intent of wrapping around a specific location on an opponent use the appropriate Called Shot Location modifier to determine success. A standard bola requires the target to make an immediate Agility + Gymnastics [Physical] Test with a threshold of the attacker&apos;s net hits; if they fail, they fall prone.\n\nRemoving wrapped bolas requires an Agility + Escape Artist [Physical] (6, 1 Action Phase) Extended Test or a sharp knife (taking a Complex Action to cut it off).\n\nBolas use shuriken ranges." compset="Ranged" replaces="wpStBolas">
    <fieldval field="grCost" value="75"/>
    <fieldval field="wpDamage" value="3"/>
    <fieldval field="wpAP" value="4"/>
    <fieldval field="wpStrReq" value="-2"/>
    <fieldval field="grAvail" value="6"/>
    <fieldval field="wpSpecial" value="A standard bola requires the target to make an immediate Agility + Gymnastics [Physical] Test with a threshold of the attacker&apos;s net hits; if they fail, they fall prone."/>
    <fieldval field="wpBonus" value="-2"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="Armory" tag="Thrown"/>
    <tag group="WpCategory" tag="Bolas"/>
    <tag group="RangeCat" tag="rcShuriken"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="WpDamType" tag="Stun"/>
    <tag group="WpGroup" tag="Throwing"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGBola] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Bolas"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGBullwhip" name="Bullwhips" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaThrow" name="Throwing Weapons" abbrev="Throwing Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Bullwhip" name="Bullwhip"/>
    </thing>
  <thing id="wpLAGBullwhip" name="Bullwhip" description="Whether it&apos;s redirecting bulls, snagging wrists, or lashing infidels, the whip has seen an interesting history as a tool, a showpiece, a torture device, and a weapon. This versatility is both its greatest asset and its biggest detriment. The training that is needed to use this weapon is very specific, but a truly skilled individual can perform feats with this item unmatched by any other weapon.\n\nA whip can be used to snare handheld objects, including weapons, or to trip an opponent using the Called Shot rules (p. 195, {i}SR5{/i}). Disarming or grabbing a held object requires a Blast Out of Hands called shot with an additional Opposed Strength Test to yank the item free and toward, instead of away from, the attacker. The attacker must be within 2 meters of the opponent and gains a +2 dice pool bonus to their Strength Test. Tripping an opponent uses the Knockdown called shot. Again, the attacker must be within 2 meters of the target." compset="Melee" replaces="wpWhip">
    <fieldval field="dpLimit" value="6"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="grAvail" value="6"/>
    <fieldval field="grCost" value="100"/>
    <fieldval field="wpDamage" value="1"/>
    <fieldval field="wpAP" value="3"/>
    <fieldval field="wpReach" value="2"/>
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="Bullwhip"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="Armory" tag="Melee"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="WpGroup" tag="Throwing"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGBullwhip] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Bullwhip"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="spLAGNet" name="Nets" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaThrow" name="Throwing Weapons" abbrev="Throwing Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Net" name="Nets"/>
    </thing>
  <thing id="wpLAGNet" name="Net" description="There always seemed to be no more embarrassing gladiatorial death than to be trapped in a net and then poked to death. I think the fact that the gladiators who fought with nets were the lowliest of the low makes it even worse. But these days it doesn&apos;t matter. If it works, use it. The net makes a great way to slow an opponent and provide an advantage, and isn&apos;t that what life is always about - getting the advantage?\n\nWith a successful attack using rules for a Grazing Hit (p. 173, {i}SR5{/i}), the net lands over an opponent and they are considered to be in subduing combat (p. 195, {i}SR5{/i}). An attacker must move to the target in order to engage in any of the Subduing actions.\n\nTo break free of the net, the subdued character rolls Agility + Unarmed Combat (rather than Strength + Unarmed Combat) or Agility + Escape Artist as a Complex Action, against a threshold equal to the attacker&apos;s net hits.\n\nNets use half the range of throwing knives (round up) and employ the Exotic Ranged Weapons (Net) skill." compset="Ranged" replaces="wpNet">
    <fieldval field="dpLimit" value="-2"/>
    <fieldval field="wpExtreme" value="2.5"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="grCost" value="350"/>
    <fieldval field="grAvail" value="6"/>
    <fieldval field="wpShort" value=".5"/>
    <fieldval field="wpMedium" value="1"/>
    <fieldval field="wpLong" value="1.5"/>
    <usesource source="RHExotics"/>
    <tag group="OverDamage" tag="Entangle"/>
    <tag group="Weapon" tag="RangeStr"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="Armory" tag="Thrown"/>
    <tag group="WpCategory" tag="Net"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="WpGroup" tag="Throwing" name="Throwing Weapons"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGNet] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Net"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang">
      <tag group="WpGroup" tag="Throwing" name="Throwing Weapons"/>
      </child>
    </thing>
  <thing id="spLAGChakramMelee" name="Chakrams" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="SkillList" tag="skaBlades"/>
    <tag group="WpCategory" tag="ChakramMel" name="Chakrams (Melee)"/>
    </thing>
  <thing id="spLAGChakramThrow" name="Chakrams" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="SkillList" tag="skaThrow"/>
    <tag group="WpCategory" tag="ChakramThr" name="Chakrams (Thrown)"/>
    </thing>
  <thing id="wpLAGChakramM" name="Chakram" description="Chakram fighting originated in India in the Eighth century, with the use of the chakram, a circular weapon with a sharpened outside edge. Since then it has been copied in Mongolia, Tibet, Malaysia, and Indonesia with variations in the design of chakram. The chakram can be worn on the head, arm, or wrist to be used in melee combat or damage an opponent while clinching or subduing them. The chakram can also be thrown at ranged targets. The tanjani technique is where the chakram is spun around a finger, adding range and power before it is hurled at a target. In 2061 chakram bracelets became a fad for a while as both a weapon and fashion statement." compset="Melee" replaces="wpChakramM">
    <fieldval field="grCost" value="750"/>
    <fieldval field="grAvail" value="8"/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="ChakramMel"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="WpGroup" tag="Blade"/>
    <bootstrap thing="wpLAGChakramR"></bootstrap>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGChakramMelee] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.ChakramMel"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGChakramR" name="Chakram (Thrown)" description="Chakram fighting originated in India in the Eighth century, with the use of the chakram, a circular weapon with a sharpened outside edge. Since then it has been copied in Mongolia, Tibet, Malaysia, and Indonesia with variations in the design of chakram. The chakram can be worn on the head, arm, or wrist to be used in melee combat or damage an opponent while clinching or subduing them. The chakram can also be thrown at ranged targets. The tanjani technique is where the chakram is spun around a finger, adding range and power before it is hurled at a target. In 2061 chakram bracelets became a fad for a while as both a weapon and fashion statement." compset="Ranged" replaces="wpChakram">
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="grCost" value="750"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="RangeCat" tag="rcShuriken"/>
    <tag group="Armory" tag="Thrown"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="WpCategory" tag="ChakramThr"/>
    <tag group="WpGroup" tag="Throwing"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGChakramThrow] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.ChakramThr"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGThrowSyringe" name="Throwing Syringes" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaThrow" name="Throwing Weapons" abbrev="Throwing Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="ThrowSyrng" name="Throwing Syringes"/>
    </thing>
  <thing id="wpLAGThrowSyr" name="Throwing Syringes" description="Originally developed by a street doc who was also a throwing adept, this weapon quickly found fans with assassins due to its ability to deal deadly attacks in an easily concealable package. These aerodynamic throwing needles have an internal compressed reservoir with an inertial trigger. When the darts strike a target, they inject any liquid they contain into the target. If the syringe does not penetrate the armor and the liquid is not contact vector, the target is not affected by the liquid (see {b}Injection Darts{/b}, p. 434, {i}SR5{/i}). A character can ready (Agility / 2) of these syringes with one Ready Weapon action." compset="Ranged" replaces="wpThrowSyr">
    <fieldval field="grCost" value="40"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpDamage" value="-2"/>
    <fieldval field="wpAP" value="-2"/>
    <fieldval field="grAvail" value="6"/>
    <fieldval field="dvWireDesc" value="If all the Throwing Syringes you throw in a Combat Turn have wireless and you have a smartlink system, each syringe you throw receives a +1 dice pool bonus per syringe thrown that Combat Turn at your current target, as the syringes adjust for wind and other atmospheric conditions. So you&apos;d get no bonus on the first throw, +1 on the second throw, and +2 on the third, etc. (assuming you aimed all three syringes at the same target. If you didn&apos;t then no bonus)."/>
    <usesource source="RHExotics"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="WpCategory" tag="ThrowSyrng"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="Armory" tag="Thrown"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="ModCatAllw" tag="Injected"/>
    <tag group="RangeCat" tag="rcThrKnife"/>
    <tag group="WpGroup" tag="Throwing"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGThrowSyringe] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.ThrowSyrng"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGSharpBoard" name="Bladed Skateboards" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="SkillList" tag="skaBlades"/>
    <tag group="WpCategory" tag="BladeBoard" name="Skateboards (Bladed)"/>
    </thing>
  <thing id="spLAGHardBoard" name="Hardened Skateboards" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="HardBoard" name="Skateboards (Hardened)"/>
    <tag group="SkillList" tag="skaClubs"/>
    </thing>
  <thing id="wpLAGBladeBoard" name="Bladed Skateboard" description="Skates have been connected to shadowrunners ever since the dawn of the Sixth World. Making combatworthy skates came about a day later. Skateboards can be found in both hardened and bladed versions, while roller skates only come in bladed.\nAs with other instruments, the hidden weapons degrade the performance somewhat, while the awkward design makes the weapon somewhat inferior but the hidden feature allows them to be snuck past security. Trying to discover that someone’s skates\nare, in fact, rolling blades is treated as if they were a hold-out pistol (–4 Concealability Modifier) \n\nWearing rolling blades increases your Run multiplier by +1 (this does not stack with other movement mods)." compset="Melee">
    <fieldval field="grCost" value="600"/>
    <fieldval field="grAvail" value="12"/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpDamage" value="2"/>
    <fieldval field="wpAP" value="-1"/>
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="Weapon" tag="DamageStr" name="Add STR to Damage" abbrev="Add STR to Damage"/>
    <tag group="Weapon" tag="NoTwoBonus" name="Doesn&apos;t Increase DV when wielded two-handed" abbrev="Doesn&apos;t Increase DV when wielded two-handed"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <tag group="WpCategory" tag="BladeBoard"/>
    <tag group="WpGroup" tag="Blade"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGSharpBoard] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.BladeBoard"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGHardBoard" name="Hardened Skateboard" description="Skates have been connected to shadowrunners ever since the dawn of the Sixth World. Making combatworthy skates came about a day later. Skateboards can be found in both hardened and bladed versions, while roller skates only come in bladed.\nAs with other instruments, the hidden weapons degrade the performance somewhat, while the awkward design makes the weapon somewhat inferior but the hidden feature allows them to be snuck past security. Trying to discover that someone’s skates\nare, in fact, rolling blades is treated as if they were a hold-out pistol (–4 Concealability Modifier) \n\nWearing rolling blades increases your Run multiplier by +1 (this does not stack with other movement mods)." compset="Melee">
    <fieldval field="grCost" value="600"/>
    <fieldval field="grAvail" value="8"/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpDamage" value="2"/>
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Weapon" tag="DamageStr" name="Add STR to Damage" abbrev="Add STR to Damage"/>
    <tag group="Weapon" tag="NoTwoBonus" name="Doesn&apos;t Increase DV when wielded two-handed" abbrev="Doesn&apos;t Increase DV when wielded two-handed"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <tag group="WpCategory" tag="HardBoard"/>
    <tag group="WpGroup" tag="Club"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGHardBoard] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.HardBoard"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="spLAGKrimeLance" name="Krime Stun Lances" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaClubs" name="Clubs" abbrev="Clubs"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="KrimeLance" name="Krime Stun Lances"/>
    </thing>
  <thing id="wpLAGKrimeLance" name="Krime Stun Lance" description="When Krime was approached by the newly reformed Winged Hussars, asking that they provide proper lances to ride into battle with, their crew of negotiators, after many rounds of vodka and a very long history lesson on who the Hussars are, finally asked, “For what, on horseback?” “No,” the response came. “Combat motorcycles.” Well, the agreement was signed right fragging then and there because that kind of stuff is right up Krime’s alley. The Krime Lance is the result, after many hours of research, development, and working with a variety of Polish and Serbian experts in the combat biker and urban brawl fields. This three-meter-long stun baton allows a charge that will leave any rioter jerking in the streets. Available in a variety of colors and with heraldic additions. Ballistic streamers extra.\n\n{i}Note:{/i} The Krime Stun Lance comes in troll sizes only; see {b}Using Unadapted Gear{/b} (p. 420, {i}SR5{/i})." compset="Melee" replaces="wpKrStunLance">
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="grCost" value="900"/>
    <fieldval field="grAvail" value="9"/>
    <fieldval field="wpDamage" value="10"/>
    <fieldval field="wpAP" value="-5"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpReach" value="2"/>
    <usesource source="RHExotics"/>
    <tag group="WpDamType" tag="Stun"/>
    <tag group="Manufac" tag="Krime"/>
    <tag group="WpDamSpec" tag="Elec"/>
    <tag group="FixedGearSize" tag="Troll2"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="WpCategory" tag="KrimeLance"/>
    <tag group="WpGroup" tag="Club"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGKrimeLance] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.KrimeLance"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="spLAGShields" name="Shields" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaClubs" name="Clubs" abbrev="Clubs"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Shields" name="Shields"/>
    </thing>
  <thing id="wpLAGShieldBall" name="Ballistic Shield" description="This large opaque shield is used by SWAT teams and in urban combat. It features a clear plastic window and a built-in ladder frame along the inside so that it can be used to climb over small obstacles." compset="Shield" replaces="shBallisti">
    <fieldval field="grCost" value="1200"/>
    <fieldval field="grAvail" value="12"/>
    <fieldval field="grCapacity" value="6"/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpDamage" value="2"/>
    <fieldval field="defArmor" value="6"/>
    <fieldval field="wpBonus" value="-2"/>
    <tag group="EquipCat" tag="Shield" name="Shield" abbrev="Shield"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="Weapon" tag="DamageStr" name="Add STR to Damage" abbrev="Add STR to Damage"/>
    <tag group="WpDamType" tag="Stun" name="Stun" abbrev="S"/>
    <tag group="ArmorAddOn" tag="Shield" name="Shield" abbrev="Shield"/>
    <tag group="WpCategory" tag="Shields"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGShields] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Shields"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustShld"></child>
    </thing>
  <thing id="wpLAGShieldRiot" name="Riot Shield" description="As an added crowd control measure, a riot shield can be used to shock anyone who comes into contact with it, inflicting Electricity damage (p. 170). The taser shield holds 10 charges; when attached to a power point, it regains one charge per 10 seconds." compset="Shield" replaces="shRiot">
    <fieldval field="grCost" value="1500"/>
    <fieldval field="grAvail" value="10"/>
    <fieldval field="grCapacity" value="6"/>
    <fieldval field="dvWireDesc" value="The riot shield recharges by induction, recharging one charge per hour."/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpDamage" value="9"/>
    <fieldval field="wpAP" value="-5"/>
    <fieldval field="defArmor" value="6"/>
    <fieldval field="wpBonus" value="-2"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="WpDamSpec" tag="Elec" name="Electricity" abbrev="(e)"/>
    <tag group="WpDamType" tag="Stun" name="Stun" abbrev="S"/>
    <tag group="ArmorAddOn" tag="Shield" name="Shield" abbrev="Shield"/>
    <tag group="EquipCat" tag="Shield" name="Shield" abbrev="Shield"/>
    <tag group="WpCategory" tag="Shields"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGShields] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Shields"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustShld">
      <bootstrap thing="amBattery">
        <assignval field="trkMax" value="20"/>
        </bootstrap>
      </child>
    </thing>
  <thing id="wpLAGShieldCase" name="Ares Briefcase Shield" description="This briefcase flips open and locks. Internal straps and an armored composite construction allow it to be used as a ballistic shield. It has a Concealability of –4 for purposes or determining that it is more than a standard briefcase." compset="Shield" replaces="wpBriefShl">
    <fieldval field="grCost" value="1800"/>
    <fieldval field="grAvail" value="14"/>
    <fieldval field="dvWireDesc" value="The riot shield recharges by induction, recharging one charge per hour."/>
    <fieldval field="dpLimit" value="3"/>
    <fieldval field="wpDamage" value="2"/>
    <fieldval field="defArmor" value="4"/>
    <fieldval field="wpBonus" value="-2"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="ArmorAddOn" tag="Shield" name="Shield" abbrev="Shield"/>
    <tag group="WpCategory" tag="Shields"/>
    <tag group="Manufac" tag="Ares"/>
    <tag group="EquipCat" tag="Shield" name="Shield" abbrev="Shield"/>
    <tag group="Helper" tag="CustomItem"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGShields] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Shields"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustShld">
      <bootstrap thing="amBattery">
        <assignval field="trkMax" value="20"/>
        </bootstrap>
      </child>
    </thing>
  <thing id="wpLAGShieldFlash" name="Ares FlaShield" description="I was excited when I saw the Ares FlaShield hit the market. It&apos;s a standard riot shield with the added bonus of a flashpak built onto the front. Defense and offense in one intimidating package!\n\n{b}Features:{/b} Flashpak (10 charges; recharges 1 charge every 10 seconds when connected to a power source. Requires a Complex Action to activate)." compset="Shield" replaces="wpAresFlas">
    <fieldval field="grAvail" value="12"/>
    <fieldval field="grCapacity" value="4"/>
    <fieldval field="dvWireDesc" value="Setting off the Flashpak is a Simple Action."/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpDamage" value="9"/>
    <fieldval field="wpAP" value="-5"/>
    <fieldval field="defArmor" value="6"/>
    <fieldval field="grCost" value="4000"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="WpDamSpec" tag="Elec" name="Electricity" abbrev="(e)"/>
    <tag group="WpDamType" tag="Stun" name="Stun" abbrev="S"/>
    <tag group="ArmorAddOn" tag="Shield" name="Shield" abbrev="Shield"/>
    <tag group="Manufac" tag="Ares"/>
    <tag group="EquipCat" tag="Shield" name="Shield" abbrev="Shield"/>
    <tag group="WpCategory" tag="Shields"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGShields] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Shields"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustShld">
      <bootstrap thing="amBattery">
        <assignval field="trkMax" value="20"/>
        </bootstrap>
      </child>
    </thing>
  <thing id="wpLAGShieldBlast" name="Blast Shield" description="The blast shield is a two meter by one meter variable-geometry shaped charge consisting of thermite strips and several high-explosive devices. Handle straps in the center allow it to be carried and used like a shield until it’s deployed. Adhesives or magnets can secure the blast shield to any surface. The charge can be detonated with a timer or remotely. To use as a melee weapon, wielders must have Exotic Weapon (Blast Shield) skill; the accuracy rating of the item is 4." compset="Shield" replaces="shBlastS">
    <fieldval field="grCost" value="20000"/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="grAvail" value="8"/>
    <fieldval field="wpDamage" value="20"/>
    <fieldval field="wpAP" value="-4"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="grCapacity" value="6"/>
    <usesource source="RHExotics"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="WpCategory" tag="Shields"/>
    <tag group="EquipCat" tag="Shield"/>
    <tag group="ArmorAddOn" tag="Shield"/>
    <tag group="Restricted" tag="Restricted"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGShields] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Shields"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustShld"></child>
    </thing>
  <thing id="spLAGRam" name="Rams" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaClubs" name="Clubs" abbrev="Clubs"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Rams" name="Rams"/>
    </thing>
  <thing id="wpLAGRamStand" name="Standard Ram" description="Sometimes, when a maglock pass key or a lock pick just can’t get the job done, a more robust method becomes necessary. Popular with entry teams, battering rams range from hunks of metal to high-tech wireless devices. Battering rams are not recommended for use as a melee weapon but can be used as such (use Exotic Melee Weapon (Battering Rams) skill, assuming you had the foresight to select it). Battering rams use Strength + Agility for the attack test (see {b}Destroying Barriers{/b}, p.197, {i}SR5{/i}).\n\n{b}Standard Ram{/b}: A metal tube weighing approximately 20 kilograms with a blunted end and handles along the sides, this is a no-frills entry tool that relies on the user’s Strength* for breaching. The standard ram is normally used by one individual, but heavier versions are available and can be used by two average humans.\n\n{i}*Strength Rating to be used is (combined Strength of all users) / (number of users) {/i}" compset="Melee" replaces="wpBatRamSt">
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="10"/>
    <fieldval field="wpDamage" value="2"/>
    <fieldval field="wpAP" value="-1"/>
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="Rams"/>
    <tag group="Equipment" tag="TwoHand"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="Show" tag="SpecialTab"/>
    <tag group="Armory" tag="Melee"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="WeaponNote" tag="Tool"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="EquipCat" tag="BreakEnter" name="Breaking and Entering Gear" abbrev="Breaking and Entering Gear"/>
    <tag group="WpGroup" tag="Club"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGRam] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Rams"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGRamShock" name="Shock Ram" description="Sometimes, when a maglock pass key or a lock pick just can’t get the job done, a more robust method becomes necessary. Popular with entry teams, battering rams range from hunks of metal to high-tech wireless devices. Battering rams are not recommended for use as a melee weapon but can be used as such (use Exotic Melee Weapon (Battering Rams) skill, assuming you had the foresight to select it). Battering rams use Strength + Agility for the attack test (see {b}Destroying Barriers{/b}, p.197, {i}SR5{/i}).\n\n{b}Shock Ram{/b}: Users call it the Shock Knocker. It’s a shock ram is designed to disable electronic locks or defenses when it breaches a door or barrier. Four large conductive spikes protrude from the ram’s head that penetrates the barrier to deliver the charge. A metahuman in contact with the barrier or the spikes must resist shock damage per normal rules. Shock rams can be wirelessly discharged. Though an effective breaching tool, a shock ram requires frequent maintenance and constant monitoring, as repeated use can damage the mechanism and insulating protective casing. A glitch on a use test results in the batteries failing; a critical glitch results in a shock to the operator.\n\n{i}*Strength Rating to be used is (combined Strength of all users) / (number of users) {/i}" compset="Melee" replaces="wpBatRamSh">
    <fieldval field="grCost" value="15000"/>
    <fieldval field="grAvail" value="10"/>
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpDamage" value="2"/>
    <fieldval field="wpAP" value="-3"/>
    <fieldval field="wpSpecial" value="Deals 12(e) damage in addition to the regular damage."/>
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="WpCategory" tag="Rams" name="Rams" abbrev="Rams"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <tag group="EquipCat" tag="BreakEnter" name="Breaking and Entering Gear" abbrev="Breaking and Entering Gear"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="TwoHand" name="Requires two hands" abbrev="Requires two hands"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="Show" tag="SpecialTab" name="SpecialTab" abbrev="SpecialTab"/>
    <tag group="WeaponNote" tag="Tool" name="A tool, not intended for combat" abbrev="A tool, not intended for combat"/>
    <tag group="Weapon" tag="DamageStr" name="Add STR to Damage" abbrev="Add STR to Damage"/>
    <tag group="WpGroup" tag="Club"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGRam] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Rams"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGRamPneum" name="Pneumatic Ram" description="Sometimes, when a maglock pass key or a lock pick just can’t get the job done, a more robust method becomes necessary. Popular with entry teams, battering rams range from hunks of metal to high-tech wireless devices. Battering rams are not recommended for use as a melee weapon but can be used as such (use Exotic Melee Weapon (Battering Rams) skill, assuming you had the foresight to select it). Battering rams use Strength + Agility for the attack test (see {b}Destroying Barriers{/b}, p.197, {i}SR5{/i}).\n\n{b}Pneumatic Ram{/b}: Also known as the P-Ram, a pneumatic ram’s breaching power comes from a large, battery-powered pneumatic piston. A P-Ram is too large and heavy to be swung. The quad-legged device is securely positioned at the door or barrier before operation and triggered by a touch pad or wirelessly. Its power comes at the expense of mobility; it requires a four-person team of average humans to deploy." compset="Melee" replaces="wpBatRamPn">
    <fieldval field="grCost" value="10000"/>
    <fieldval field="grAvail" value="18"/>
    <fieldval field="dpLimit" value="6"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpDamage" value="16"/>
    <fieldval field="wpAP" value="-4"/>
    <fieldval field="shortname" value="P-Ram"/>
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <tag group="EquipCat" tag="BreakEnter" name="Breaking and Entering Gear" abbrev="Breaking and Entering Gear"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="TwoHand" name="Requires two hands" abbrev="Requires two hands"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="Show" tag="SpecialTab" name="SpecialTab" abbrev="SpecialTab"/>
    <tag group="WpCategory" tag="Rams" name="Rams" abbrev="Rams"/>
    <tag group="WeaponNote" tag="Tool" name="A tool, not intended for combat" abbrev="A tool, not intended for combat"/>
    <tag group="WpGroup" tag="Club"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGRam] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Rams"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGRamFluid" name="Fluid-Motion Ram" description="Sometimes, when a maglock pass key or a lock pick just can’t get the job done, a more robust method becomes necessary. Popular with entry teams, battering rams range from hunks of metal to high-tech wireless devices. Battering rams are not recommended for use as a melee weapon but can be used as such (use Exotic Melee Weapon (Battering Rams) skill, assuming you had the foresight to select it). Battering rams use Strength + Agility for the attack test (see {b}Destroying Barriers{/b}, p.197, {i}SR5{/i}).\n\n{b}Fluid-Motion Ram{/b}: The same as the standard battering ram, but it includes an internal ten-liter liquid reservoir. When used, the ram is swung backwards and then forward to strike the target. On impact the internal fluid in the ram creates extra momentum that increases the impact damage. Very useful against more durable doors, but using it requires two average-size humans or one average-size troll.\n\n{i}*Strength Rating to be used is (combined Strength of all users) / (number of users) {/i}" compset="Melee" replaces="wpBatRamFM">
    <fieldval field="grCost" value="3500"/>
    <fieldval field="grAvail" value="10"/>
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpDamage" value="3"/>
    <fieldval field="wpAP" value="-1"/>
    <fieldval field="wpReach" value="1"/>
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="WpCategory" tag="Rams" name="Rams" abbrev="Rams"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <tag group="EquipCat" tag="BreakEnter" name="Breaking and Entering Gear" abbrev="Breaking and Entering Gear"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="TwoHand" name="Requires two hands" abbrev="Requires two hands"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="Show" tag="SpecialTab" name="SpecialTab" abbrev="SpecialTab"/>
    <tag group="WeaponNote" tag="Tool" name="A tool, not intended for combat" abbrev="A tool, not intended for combat"/>
    <tag group="Weapon" tag="DamageStr" name="Add STR to Damage" abbrev="Add STR to Damage"/>
    <tag group="WpGroup" tag="Club"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGRam] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Rams"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGPenInject" name="Injector Pen" description="This pen or stylus conceals a hypodermic needle that can inject one dose of a drug or toxin." compset="Melee" replaces="wpInjecPen">
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="grCost" value="220"/>
    <fieldval field="grAvail" value="9"/>
    <fieldval field="wpAP" value="-2"/>
    <fieldval field="wpAmmoCap" value="1"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="Weapon" tag="NoParry"/>
    <tag group="OverDamage" tag="Chemical"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="WpCategory" tag="PenInject"/>
    <tag group="AmmoType" tag="PreInstall"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Armory" tag="Melee"/>
    <tag group="ModCatAllw" tag="Injected"/>
    <tag group="WpGroup" tag="Blade"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGPenInject] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.PenInject"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap">
      <bootstrap thing="amInjecPen">
        <autotag group="Weapon" tag="ForceAmmo"/>
        </bootstrap>
      </child>
    </thing>
  <thing id="spLAGPenInject" name="Injector Pens" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaBlades" name="Blades" abbrev="Blades"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="PenInject" name="Injector Pens"/>
    </thing>
  <thing id="spLAGFrogTongue" name="Frog Tongues" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="SkillList" tag="skaUnarmed"/>
    <tag group="WpCategory" tag="FrogTongue" name="Frog Tongues"/>
    </thing>
  <thing id="wpLAGFrogTongue" name="Frog Tongue" description="The character possesses a long adhesive tongue, which can be extended in a spring-loaded fashion by a muscular trigger. When triggered, it shoots outward to strike at a target and then retracts. Though not prehensile enough to manipulate a tool, the tongue is strong enough to snatch an object, provided the object&apos;s weight is less than the character&apos;s unaugmented Strength x 100 grams. Because of the tongue&apos;s sticky secretions, the object will stick to the tongue until manually removed. If the character also possesses the Natural Venom quality (p. 117) the tongue can be used to apply the substance with a successful touch-only melee attack (p. 187, {i}SR5{/i}) using the Exotic Melee Weapon (Frog Tongue) skill." compset="Melee" replaces="wpFrogTong">
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="WpCategory" tag="FrogTongue"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="Equipment" tag="Natural"/>
    <tag group="Weapon" tag="NoParry"/>
    <tag group="OverDamage" tag="Blank"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="WpGroup" tag="Unarmed"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGFrogTongue] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.FrogTongue"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="spLAGGarrote" name="Garrotes" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaUnarmed" name="Unarmed Combat" abbrev="Unarmed Combat"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Garrote" name="Garrotes"/>
    </thing>
  <thing id="wpLAGGarrote" name="Garrote" description="This can be as simple as a string attached to a pair of pencils but is usually a far more professional tool. The garrote is a handheld weapon designed to quietly kill via strangulation. The weapon consists of a central string, usually a semiflexible wire of some sort, attached to a pair of handles used to pull the weapon tight once it is wrapped around a targets neck. Death is slow and unpleasant as the target usually struggles intensely, so a strong stomach and skill are both required.\n\nUsing a garrote requires and initial successful attack test to get the weapon in place similar to subduing combat. The attacker uses their Exotic Melee Weapon (Garrote) skill to initiate the subduing. The attack must use the Called Shot Location modifier and needs at least 1 net hit to succeed. After the weapon is in place, the attacking character can choose to do the damage of the weapon during their next Action Phase along with improving their hold with another Attack Test or knocking the opponent to the ground.\n\nBreaking free of the garrote requires an Agility + Unarmed Combat [Physical] Test with a threshold of the attacker&apos;s net hits on all attacks or a successful Knock Out of Hands called shot or similar attack that breaks the attacker&apos;s grip." compset="Melee" replaces="wpGarrote">
    <fieldval field="grCost" value="50"/>
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="wpDamage" value="4"/>
    <fieldval field="wpAP" value="-6"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="Weapon" tag="DamageStr" name="Add STR to Damage" abbrev="Add STR to Damage"/>
    <tag group="WpDamType" tag="Stun"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="WpCategory" tag="Garrote"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <tag group="WpGroup" tag="Unarmed"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGGarrote] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Garrote"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="spLAGHornGoring" name="Goring Horns" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaUnarmed" name="Unarmed Combat" abbrev="Unarmed Combat"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="HornGoring" name="Goring Horns"/>
    </thing>
  <thing id="wpLAGHornGore" name="Horns" description="A single horn or horns express on the character&apos;s head. If the character already had horns, these grow even bigger or more pronounced. The horns can be anything from ram horns to deer-like antlers to devil horns or even jagged crests of bone around the skull. Unlike most metatype horns, the character may use these in combat with the Exotic Melee Weapon (Horns) skill. Goring Horns have the following stats: DV (STR + 2)P, Reach - , AP -1." compset="Melee" replaces="wpGoreHorn">
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="wpDamage" value="2"/>
    <fieldval field="wpAP" value="-1"/>
    <usesource source="RHExotics"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="Weapon" tag="NoParry"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="WpCategory" tag="HornGoring"/>
    <tag group="Armory" tag="Melee"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Equipment" tag="Natural"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="WpGroup" tag="Unarmed"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGHornGoring] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.HornGoring"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="spLAGOralSlash" name="Oral Slasher" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaUnarmed" name="Unarmed Combat" abbrev="Unarmed Combat"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="OralSlash" name="Oral Slashers"/>
    </thing>
  <thing id="wpLAGOralSlash" name="Oral Slasher" description="A spool of pointed wire placed under the tongue, the oral slasher is more truthfully called the oral thruster, launched forward by compressed air to impale the target before being quickly rewound, not unlike a frog&apos;s tongue, only more dangerous. With a range of only one meter, the slasher is a melee weapon but is covered by the Exotic Weapon Skill, rather than Unarmed Combat. Oral slashers are often connected to chemical reserves, but not always." compset="Melee" replaces="auOrlSlash">
    <fieldval field="wpBonus" value="-2"/>
    <fieldval field="grCost" value="750"/>
    <fieldval field="grAvail" value="12"/>
    <fieldval field="wpDamage" value="6"/>
    <fieldval field="wpAP" value="-3"/>
    <fieldval field="grEssence" value=".25"/>
    <fieldval field="wpReach" value="1"/>
    <fieldval field="grSpace" value="3"/>
    <fieldval field="grMenuName" value="Fangs (Pair)"/>
    <usesource source="RHExotics"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Augment" tag="Cyber"/>
    <tag group="AugCat" tag="Cybermelee"/>
    <tag group="Helper" tag="AugOnly"/>
    <tag group="Helper" tag="Shadow"/>
    <tag group="ModCat" tag="Cybermelee"/>
    <tag group="AccessType" tag="Skull"/>
    <tag group="ModCatAllw" tag="MeleeAcc"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Armory" tag="Melee"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="WpCategory" tag="OralSlash"/>
    <tag group="WpGroup" tag="Unarmed"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGOralSlash] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.OralSlash"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="spLAGProboscis" name="Proboscis" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaUnarmed" name="Unarmed Combat" abbrev="Unarmed Combat"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Proboscis" name="Proboscises"/>
    </thing>
  <thing id="wpLAGTrunk" name="Trunk" description="The character possesses an prehensile nose or elephantine trunk instead of a typical nose and upper lip. This is even more versatile than the Prehensile Tail (p. 115). It can be used for small manipulations or even a blunt punch using the Exotic Melee Weapon (Trunk) skill (DV (STR - 1)P, Reach - , AP +1). Apply a -2 dice pool modifier to any attempt to manipulate an object with the trunk. It has an effective Strength equal to the character&apos;s unaugmented Strength. Trunks do not provide an extra attack. Characters with a proboscis suffer modifiers to social interaction (see {b}Freaks{/b} sidebar, p. 123)." compset="Melee" replaces="wpProbosci">
    <fieldval field="wpDamage" value="-1"/>
    <fieldval field="wpAP" value="1"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="Equipment" tag="Natural"/>
    <tag group="Weapon" tag="NoParry"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Armory" tag="Melee"/>
    <tag group="WpCategory" tag="Proboscis"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="WpGroup" tag="Unarmed"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGProboscis] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Proboscis"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="spLAGQuills" name="Quills" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaUnarmed" name="Unarmed Combat" abbrev="Unarmed Combat"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Quills" name="Quills"/>
    </thing>
  <thing id="wpLAGQuills" name="Quills" description="These modified hairs are coated with thick keratin plates that resemble porcupine quills, interspersed with bristles, under fur and hair. Quills are 2 to 4 centimeters long, sharp as needles, and detach easily when used in close combat. Quills are used as a defensive mechanism to hold off attackers. If the character is successfully grappled in close combat (see {b}Subduing{/b}, p. 195, {i}SR5{/i}), the attacker makes a Damage Resistance Test against a DV of (STR + 1)P, AP +1, using the higher Strength attribute of the grappling pair. Quills can be wielded in melee combat using the Exotic Melee Weapon (Quills) skill, with the following stats: DV (STR + 1)P, Reach - , AP +1. The character&apos;s arms or legs must be exposed and mobile to use any of these advantages. Quills is incompatible with other natural or artificial hair or skin modifications." compset="Melee" replaces="wpQuills">
    <fieldval field="wpDamage" value="1"/>
    <fieldval field="wpAP" value="1"/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="Weapon" tag="NoParry"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="Armory" tag="Melee"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Equipment" tag="Natural"/>
    <tag group="WpCategory" tag="Quills"/>
    <tag group="WpGroup" tag="Unarmed"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGQuills] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Quills"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="spLAGThagomizer" name="Thagomizers" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaUnarmed" name="Unarmed Combat" abbrev="Unarmed Combat"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="Thagomizer" name="Thagomizers"/>
    </thing>
  <thing id="wpLAGThagomizer" name="Thagomizer" description="This powerfully muscled prehensile tail ends in an array of dermal spikes and can be used for a melee attack using the Exotic Melee Weapon (Thagomizer) skill, with the following stats: DV (STR + 3) P, Reach 1, AP -1." compset="Melee" replaces="wpThagomiz">
    <fieldval field="wpDamage" value="3"/>
    <fieldval field="wpAP" value="-1"/>
    <fieldval field="wpReach" value="1"/>
    <fieldval field="wpBonus" value="-2"/>
    <tag group="Weapon" tag="NoEquip"/>
    <tag group="Weapon" tag="NoParry"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="WpCategory" tag="Thagomizer"/>
    <tag group="Armory" tag="Melee"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Equipment" tag="Natural"/>
    <tag group="WpGroup" tag="Unarmed"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGThagomizer] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.Thagomizer"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="wpLAGHoldFastLL" name="Hold-Fast Adhesive Sprayer (Long Lasting)" description="Hold-Fast was developed at MIT&amp;T as an effort to meet—and cash in on—Dunkelzhan’s call for a non-lethal alternative to conventional firearms. Its intended purpose is to quickly immobilize subjects without harming them. Though initially rejected by the Draco Foundation for “not meeting the necessary criteria,” Hold-Fast was adopted by Lone Star after their own independent trials, conducted on the streets of several CAS cities, proved it to be effective in apprehension and crowd control. Hold-Fast is a liquid that is delivered through a sprayer not unlike a fire extinguisher. Once exposed to oxygen, the liquid hardens to form a clear plastic-like shell in about thirty seconds. Standard Hold-Fast become brittle after two hours, while the long-lasting formula is stable until removed with a solvent. Use Taser ranges for Hold-Fast sprayer. Breaking free of Hold-Fast requires a Strength (4) Test." compset="Ranged" replaces="wpHFSprLL">
    <fieldval field="dpLimit" value="2"/>
    <fieldval field="grCost" value="50"/>
    <fieldval field="grAvail" value="12"/>
    <usesource source="RHExotics"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="ModCatAllw" tag="Ranged"/>
    <tag group="AccAllow" tag="Ranged"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Show" tag="SpecialTab"/>
    <tag group="OverDamage" tag="HoldFastSp"/>
    <tag group="Armory" tag="Projectile"/>
    <tag group="AmmoType" tag="PreInstall"/>
    <tag group="RangeCat" tag="rcTaser"/>
    <tag group="ExCountAs" tag="wpLAG1GunSpray"/>
    <tag group="WpCategory" tag="SpecialWep"/>
    <child entity="grCustRang">
      <bootstrap thing="amHFASLL">
        <autotag group="Weapon" tag="ForceAmmo"/>
        </bootstrap>
      </child>
    </thing>
  <thing id="wpLAG1GunSpray" name="Spray Guns" compset="Ranged">
    <comment>This is a helper item that sets up the Lasers Weapons Skill</comment>
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="Helper" tag="Helper" name="Helper" abbrev="Helper"/>
    <tag group="WpCategory" tag="SpecialWep" name="Special Weapons" abbrev="Exotic Ranged Weapon"/>
    <tag group="Augment" tag="Bio" name="Bioware" abbrev="Bioware"/>
    </thing>
  <thing id="wpLAGGunSpray" name="Spray Guns(deprecated)" description="An orphaned item, you shouldn&apos;t use this." compset="Ranged">
    <comment>This is a helper item that sets up the Lasers Weapons Skill</comment>
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="Helper" tag="Helper" name="Helper" abbrev="Helper"/>
    <tag group="WpCategory" tag="SpecialWep" name="Special Weapons" abbrev="Exotic Ranged Weapon"/>
    <tag group="Augment" tag="Bio" name="Bioware" abbrev="Bioware"/>
    <tag group="ExCountAs" tag="wpLAG1GunSpray"/>
    </thing>
  <thing id="wpLAGHoldFast" name="Hold-Fast Adhesive Sprayer (Standard)" description="Hold-Fast was developed at MIT&amp;T as an effort to meet—and cash in on—Dunkelzhan’s call for a non-lethal alternative to conventional firearms. Its intended purpose is to quickly immobilize subjects without harming them. Though initially rejected by the Draco Foundation for “not meeting the necessary criteria,” Hold-Fast was adopted by Lone Star after their own independent trials, conducted on the streets of several CAS cities, proved it to be effective in apprehension and crowd control. Hold-Fast is a liquid that is delivered through a sprayer not unlike a fire extinguisher. Once exposed to oxygen, the liquid hardens to form a clear plastic-like shell in about thirty seconds. Standard Hold-Fast become brittle after two hours, while the long-lasting formula is stable until removed with a solvent. Use Taser ranges for Hold-Fast sprayer. Breaking free of Hold-Fast requires a Strength (4) Test." compset="Ranged" replaces="wpHFSprSta">
    <fieldval field="dpLimit" value="2"/>
    <fieldval field="grCost" value="50"/>
    <fieldval field="grAvail" value="12"/>
    <usesource source="RHExotics"/>
    <tag group="AmmoType" tag="PreInstall"/>
    <tag group="Mode" tag="Single"/>
    <tag group="ExCountAs" tag="wpLAG1GunSpray" name="Spray Guns" abbrev="Spray Guns"/>
    <tag group="Show" tag="SpecialTab" name="SpecialTab" abbrev="SpecialTab"/>
    <tag group="ModCatAllw" tag="Ranged"/>
    <tag group="AccAllow" tag="Ranged"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Armory" tag="Projectile" name="Projectile" abbrev="Projectile"/>
    <tag group="EquipCat" tag="Chemicals" name="Industrial Chemicals" abbrev="Industrial Chemicals"/>
    <tag group="RangeCat" tag="rcTaser"/>
    <tag group="OverDamage" tag="HoldFastSp"/>
    <tag group="WpCategory" tag="SpecialWep" name="Special Weapons" abbrev="Exotic Ranged Weapon"/>
    <child entity="grCustRang">
      <bootstrap thing="amHFASStan">
        <autotag group="Weapon" tag="ForceAmmo"/>
        </bootstrap>
      </child>
    </thing>
  <thing id="spLAGManCatcher" name="Man-Catchers" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="SkillList" tag="skaHeavyWe"/>
    <tag group="WpCategory" tag="ManCatcher" name="Man-Catchers"/>
    <tag group="Equipment" tag="TwoHand" name="Requires two hands" abbrev="Requires two hands"/>
    </thing>
  <thing id="wpLAGManCatcher" name="Shiawase/Nemesis Arms Man-Catcher" description="A prototype weapon system long considered a failure, the Man-Catcher was one of many projects recently re-discovered by Nemesis Arms during the Megacorp Audit. A part of the low-priority non-lethal division, the Man-Catcher is in essence a rocket launcher that fires a warhead filled with a fast-acting compound that, when exposed to air, expands slightly and turns into a rubber-like substance. Anything coming into contact or coated with it will become stuck and eventually immobile. The problem with the system wasn’t the launcher or warhead, but rather the chemical compound payload. On second review, a solution was found, and the system became viable. The launcher itself is a small tube approximately fifty centimeters long, the warhead approximately thirty centimeters. When used against a target, the warhead can be pre-programmed to detonate by timer, proximity, or impact, though with with the latter the compound only has a fifty percent chance of working (roll 1D6 with no rerolls for Edge; it works on a 4 or better). Weapon requires Exotic Ranged Weapon (Man-Catcher) to operate." compset="Ranged" replaces="wpManCatcher">
    <fieldval field="dpLimit" value="4"/>
    <fieldval field="grCost" value="6000"/>
    <fieldval field="grAvail" value="18"/>
    <fieldval field="wpAmmoCap" value="10"/>
    <fieldval field="wpSpecial" value="Anyone/thing caught within the blast radius must make an opposed grapple test against a dice pool of 12 or they will be considered trapped and unable to move as the compound hardens and expands an additional one meter."/>
    <fieldval field="wpBonus" value="-2"/>
    <usesource source="RHExotics"/>
    <tag group="Manufac" tag="Nemesis"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="Manufac" tag="Shiawase"/>
    <tag group="AmmoType" tag="ManCatcher"/>
    <tag group="ReloadType" tag="Magazine"/>
    <tag group="RangeCat" tag="rcMLaunch"/>
    <tag group="OverDamage" tag="Ammo"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="Mode" tag="Single"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="WpCategory" tag="ManCatcher"/>
    <tag group="WpGroup" tag="MissileLa"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGManCatcher] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.ManCatcher"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="spLAGGunStockClub" name="Gunstock War Clubs" compset="Special" uniqueness="useronce">
    <usesource source="RHExotics" parent="UserParent" name="RunnerHub Exotic Weapons"/>
    <tag group="SkillList" tag="skaThrow" name="Throwing Weapons" abbrev="Throwing Weapons"/>
    <tag group="SkillHelp" tag="SpecModCol" name="Also a Modifier Collector" abbrev="Also a Modifier Collector"/>
    <tag group="WpCategory" tag="GunStock" name="Gun Stock War Clubs"/>
    </thing>
  <thing id="wpLAGGunStockTh" name="Gunstock War Club (Thrown)" description="A valuable tool for Native Americans, this weapon has become an important part of the Okichitaw martial combat style. Its name is a clear descriptor—it’s a war club that is shaped like a gunstock, though there’s plenty of debate about which design came first. With a sharp point often set at the crook, this club delivers a lot of impact at the point of contact, and in the right hands it can puncture through a fair amount of protection." compset="Ranged" replaces="wpGunstockThrown">
    <fieldval field="wpDamage" value="2"/>
    <fieldval field="wpAP" value="-1"/>
    <fieldval field="wpBonus" value="-2"/>
    <tag group="Armory" tag="Thrown"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="UsesLimit" tag="ilPhysical"/>
    <tag group="WpCategory" tag="GunStock"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="RangeCat" tag="rcThrKnife"/>
    <tag group="WpGroup" tag="Throwing"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGGunStockClub] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.GunStock"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustRang"></child>
    </thing>
  <thing id="auLAGCybOptArch" name="Cyberlimb Optimization, Archery" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Archery:{/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper"/>
    <tag group="Augment" tag="Cyber"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Equipment" tag="AvailAdd"/>
    <tag group="Equipment" tag="HideActive"/>
    <tag group="AugExclude" tag="OptLimb"/>
    <eval phase="Final" priority="20000"><![CDATA[
~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptArch]

doneif (hero.tagcount[Duplicate.CybOptArch] > 1)

~+1 to Archery limit per optimized limb
perform #limit[skaArchery,+,hero.tagcount[HasAugment.auLAGCybOptArch],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptArch] / 2,0,-1)

~+1 to limit of Archery weapons 
foreach pick in hero from WeaponBase where "WpGroup.Bow|WpGroup.Crossbow"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptArch],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  nexteach

~+1 to Archery tests per pair of optimized limbs
perform #dicepool[skaArchery,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptArch" name="CybOptArch" abbrev="CybOptArch"/>
      </child>
    </thing>
  <thing id="wpLAGUnarmed" name="Unarmed Strike" compset="Melee" replaces="wpUnarmed" uniqueness="unique">
    <fieldval field="shortname" value="Unarmed"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="Natural" name="Natural weapon/armor/etc." abbrev="Natural weapon/armor/etc."/>
    <tag group="Equipment" tag="Unarmed" name="Unarmed" abbrev="Unarmed"/>
    <tag group="Hide" tag="Statblock" name="Statblock" abbrev="Statblock"/>
    <tag group="UsesLimit" tag="ilPhysical" name="Physical Limit" abbrev="Physical Limit"/>
    <tag group="Weapon" tag="DamageStr" name="Add STR to Damage" abbrev="Add STR to Damage"/>
    <tag group="Weapon" tag="NoTwoBonus" name="Doesn&apos;t Increase DV when wielded two-handed" abbrev="Doesn&apos;t Increase DV when wielded two-handed"/>
    <tag group="WpCategory" tag="MartialArt" name="Unarmed (Martial Arts)" abbrev="Unarmed"/>
    <tag group="WpDamType" tag="Stun" name="Stun" abbrev="S"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <eval phase="Final" priority="10000"><![CDATA[
      ~if we have a natural attack, we don't want to see our unarmed strike
      ~we'll also hide it if we're a program
      if (hero.tagexpr[(Hero.HasNatural & !Hero.Sapient) | Hero.MatrixOnly| Hero.Vehicle] <> 0) then
        perform assign[Hide.Weapon]
        endif]]></eval>
    <eval phase="Final" priority="10001" index="2"><![CDATA[if (this.hero.tagcount[ExoticProf.wpChainsaw] = 0) then
  foreach pick in hero from WeaponBase where "ExCountAs.wpChainsaw"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif
if (this.hero.tagcount[ExoticProf.wpLaser] = 0) then
  foreach pick in hero from WeaponBase where "ExCountAs.wpLaser"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif
if (this.hero.tagcount[ExoticProf.wpLAG1Mono] = 0) then
  foreach pick in hero from WeaponBase where "ExCountAs.wpLAG1Mono"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif
if (this.hero.tagcount[ExoticProf.wpLAG1_DEW] = 0) then
  foreach pick in hero from WeaponBase where "ExCountAs.wpLAG1_DEW"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif
if (this.hero.tagcount[ExoticProf.wpFlamethr] = 0) then
  foreach pick in hero from WeaponBase where "ExCountAs.wpFlamethr"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif
if (this.hero.tagcount[ExoticProf.wpLAG1GunSpray] = 0) then
  foreach pick in hero from WeaponBase where "ExCountAs.wpLAG1GunSpray"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif
if (this.hero.tagcount[ExoticProf.wpLAG1BioSpray] = 0) then
  foreach pick in hero from WeaponBase where "ExCountAs.wpLAG1BioSpray"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    </thing>
  <thing id="auLAGCybOptAuto" name="Cyberlimb Optimization, Automatics" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Automatics:{/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <eval phase="Final" priority="20000"><![CDATA[
~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptAuto]

doneif (hero.tagcount[Duplicate.CybOptAuto] > 1)

~+1 to Automatics limit per optimized limb
perform #limit[skaAutomat,+,hero.tagcount[HasAugment.auLAGCybOptAuto],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptAuto] / 2,0,-1)

~+1 to limit of Automatics weapons 
foreach pick in hero from WeaponBase where "WpGroup.SMG|WpGroup.MachinePst|WpGroup.Carbine|WpGroup.AssaultRif"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptAuto],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  nexteach

~+1 to Automatics tests per pair of optimized limbs
perform #dicepool[skaAutomat,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptAuto" name="CybOptAuto" abbrev="CybOptAuto"/>
      </child>
    </thing>
  <thing id="auLAGCybOptBSpray" name="Cyberlimb Optimization, Bio-Sprays" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Bio-Sprays:{/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Duplicate" tag="CybOptBSpr"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptBSpray]

doneif (hero.tagcount[Duplicate.CybOptBSpray] > 1)

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptBSpray] / 2,0,-1)



foreach pick in hero from Skill where "HasSkill.skaExRange"
  if (eachpick.tagis[ExoticProf.wpLAG1BioSpray] <> 0) then
    ~+1 to BioSpray limit per optimized limb
    perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptBSpray],""]
    ~+1 to BioSpray tests per pair of optimized limbs
    perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  endif
nexteach
~+1 to limit of BioSpray weapons 
foreach pick in hero from WeaponBase where "ExCountAs.wpLAG1BioSpray"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptBSpray],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  nexteach]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptBSpray" name="CybOptBSpray" abbrev="CybOptBSpray"/>
      </child>
    </thing>
  <thing id="auLAGCybOptBlad" name="Cyberlimb Optimization, Blades" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Blades:{/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <eval phase="Final" priority="20000"><![CDATA[
~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptBlad]

doneif (hero.tagcount[Duplicate.CybOptBlad] > 1)

~+1 to Blades limit per optimized limb
perform #limit[skaBlades,+,hero.tagcount[HasAugment.auLAGCybOptBlad],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptBlad] / 2,0,-1)

~+1 to limit of Blades weapons 
foreach pick in hero from WeaponBase where "WpGroup.Blade"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptBlad],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  nexteach

~+1 to Blades tests per pair of optimized limbs
perform #dicepool[skaBlades,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptBlad" name="CybOptBlad" abbrev="CybOptBlad"/>
      </child>
    </thing>
  <thing id="auLAGCybOptChSaw" name="Cyberlimb Optimization, Chainsaws" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Chainsaws: {/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Duplicate" tag="CybOptBSpr" name="CybOptBSpr" abbrev="CybOptBSpr"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptChSaw]

doneif (hero.tagcount[Duplicate.CybOptChSaw] > 1)

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptChSaw] / 2,0,-1)



foreach pick in hero where "HasSkill.skaExMelee"
  if (eachpick.tagis[ExoticProf.wpChainsaw] <> 0) then
    ~+1 to Chainsaw limit per optimized limb
    perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptChSaw],""]
    ~+1 to Chainsaw tests per pair of optimized limbs
    perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  endif
nexteach
~+1 to limit of Chainsaw weapons 
foreach pick in hero from WeaponBase where "ExCountAs.wpChainsaw"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptChSaw],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  nexteach]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptChSaw" name="CybOptChSaw" abbrev="CybOptChSaw"/>
      </child>
    </thing>
  <thing id="auLAGCybOptClub" name="Cyberlimb Optimization, Clubs" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Clubs:{/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <eval phase="Final" priority="20000"><![CDATA[
~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptClub]

doneif (hero.tagcount[Duplicate.CybOptClub] > 1)

~+1 to Clubs limit per optimized limb
perform #limit[skaClubs,+,hero.tagcount[HasAugment.auLAGCybOptClub],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptClub] / 2,0,-1)

~+1 to limit of Clubs weapons 
foreach pick in hero from WeaponBase where "WpGroup.Club"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptClub],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  nexteach

~+1 to Clubs tests per pair of optimized limbs
perform #dicepool[skaClubs,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptClub" name="CybOptClub" abbrev="CybOptClub"/>
      </child>
    </thing>
  <thing id="auLAGCybOptDEW" name="Cyberlimb Optimization, Directed Energy Weapons" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Directed Energy Weapons:{/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Duplicate" tag="CybOptBSpr"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptDEW]

doneif (hero.tagcount[Duplicate.CybOptDEW] > 1)

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptDEW] / 2,0,-1)



foreach pick in hero where "HasSkill.skaExRange"
  if (eachpick.tagis[ExoticProf.wpLAG1_DEW] <> 0) then
    ~+1 to Directed Energy Weapons limit per optimized limb
    perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptDEW],""]
    ~+1 to Directed Energy Weapons tests per pair of optimized limbs
    perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  endif
nexteach
~+1 to limit of Directed Energy Weapons weapons 
foreach pick in hero from WeaponBase where "ExCountAs.wpLAG1_DEW"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptDEW],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  nexteach]]></eval>
    <evalrule phase="Validate" message="PlaceHolder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptDEW" name="CybOptDEW" abbrev="CybOptDEW"/>
      </child>
    </thing>
  <thing id="auLAGCybOptFlame" name="Cyberlimb Optimization, Flamethrowers" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Flamethrowers:{/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Duplicate" tag="CybOptBSpr" name="CybOptBSpr" abbrev="CybOptBSpr"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)


perform hero.assign[Duplicate.CybOptFlame]

doneif (hero.tagcount[Duplicate.CybOptFlame] > 1)

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptFlame] / 2,0,-1)



foreach pick in hero where "HasSkill.skaExRange"
  if (eachpick.tagis[ExoticProf.wpFlamethr] <> 0) then
    ~+1 to Flamethrowers limit per optimized limb
    perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptFlame],""]
    ~+1 to Flamethrowers tests per pair of optimized limbs
    perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  endif
nexteach
~+1 to limit of Flamethrowers weapons 
foreach pick in hero from WeaponBase where "ExCountAs.wpFlamethr"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptFlame],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  nexteach]]></eval>
    <evalrule phase="Validate" message="Placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptFlame" name="CybOptFlame" abbrev="CybOptFlame"/>
      </child>
    </thing>
  <thing id="auLAGCybOptHeavy" name="Cyberlimb Optimization, Heavy Weapons" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Heavy Weapons: {/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <eval phase="Final" priority="20000"><![CDATA[
~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptHeavy]

doneif (hero.tagcount[Duplicate.CybOptHeavy] > 1)

~+1 to Heavy weapons limit per optimized limb
perform #limit[skaHeavyWe,+,hero.tagcount[HasAugment.auLAGCybOptHeavy],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptHeavy] / 2,0,-1)

~+1 to limit of Heavy weapons 
foreach pick in hero from WeaponBase where "WpGroup.MissileLa|WpGroup.GrenadeLa|WpGroup.LMG|WpGroup.MMG|WpGroup.HMG|WpGroup.AssaultCan"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptHeavy],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
nexteach

~+1 to Heavy Weapons tests per pair of optimized limbs
perform #dicepool[skaHeavyWe,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptHeavy" name="CybOptHeavy" abbrev="CybOptHeavy"/>
      </child>
    </thing>
  <thing id="auLAGCybOptLaser" name="Cyberlimb Optimization, Lasers" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Lasers{/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Duplicate" tag="CybOptBSpr" name="CybOptBSpr" abbrev="CybOptBSpr"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)


perform hero.assign[Duplicate.CybOptLaser]

doneif (hero.tagcount[Duplicate.CybOptLaser] > 1)

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptLaser] / 2,0,-1)



foreach pick in hero where "HasSkill.skaExRange"
  if (eachpick.tagis[ExoticProf.wpLaser] <> 0) then
    ~+1 to Lasers limit per optimized limb
    perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptLaser],""]
    ~+1 to Lasers tests per pair of optimized limbs
    perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  endif
nexteach
~+1 to limit of Lasers weapons 
foreach pick in hero from WeaponBase where "ExCountAs.wpLaser"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptLaser],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  nexteach]]></eval>
    <evalrule phase="Validate" message="Placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptLaser" name="CybOptLaser" abbrev="CybOptLaser"/>
      </child>
    </thing>
  <thing id="auLAGCybOptLong" name="Cyberlimb Optimization, Longarms" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Longarms: {/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <eval phase="Final" priority="20000"><![CDATA[
~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptLong]

doneif (hero.tagcount[Duplicate.CybOptLong] > 1)

~+1 to Longarms limit per optimized limb
perform #limit[skaLongarm,+,hero.tagcount[HasAugment.auLAGCybOptLong],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptLong] / 2,0,-1)

~+1 to limit of Longarms 
foreach pick in hero from WeaponBase where "WpGroup.Shotgun|WpGroup.SportRif|WpGroup.SniperRif"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptLong],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
nexteach

~+1 to Longarms tests per pair of optimized limbs
perform #dicepool[skaLongarm,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptLong" name="CybOptLong" abbrev="CybOptLong"/>
      </child>
    </thing>
  <thing id="auLAGCybOptMonoF" name="Cyberlimb Optimization, Monofilament" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Monofilament:{/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Duplicate" tag="CybOptBSpr"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptMonoF]

doneif (hero.tagcount[Duplicate.CybOptMonoF] > 1)

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptMonoF] / 2,0,-1)



foreach pick in hero where "HasSkill.skaExRange"
  if (eachpick.tagis[ExoticProf.wpLAG1Mono] <> 0) then
    ~+1 to MonoFilament limit per optimized limb
    perform eachpick.field[DicePool].modify[+,field[Value].value,""]
    ~+1 to MonoFilament tests per pair of optimized limbs
    perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptMonoF],""]
  endif
nexteach
~+1 to limit of MonoFilament weapons 
foreach pick in hero from WeaponBase where "ExCountAs.wpLAG1Mono"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptMonoF],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
nexteach]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptMonoF" name="CybOptMonoF" abbrev="CybOptMonoF"/>
      </child>
    </thing>
  <thing id="auLAGCybOptSprayG" name="Cyberlimb Optimization, Spray Guns" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Spray Guns:{/b} This is an arm only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Duplicate" tag="CybOptBSpr"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptSprayG]

doneif (hero.tagcount[Duplicate.CybOptSprayG] > 1)

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptSprayG] / 2,0,-1)

var result as string

foreach pick in hero where "HasSkill.skaExRange"
  if (eachpick.tagis[ExoticProf.wpLAG1GunSpray] <> 0) then
    debug "ExoticProf is " & eachpick.tagnames[ExoticProf.?," and "] & "."
    debug "ID is " & eachpick.idstring & "."
    ~+1 to SprayGun limit per optimized limb
~   perform #dicepool[result,+,field[Value].value,""]
    perform eachpick.field[DicePool].modify[+,field[Value].value,""]
    ~+1 to SprayGun tests per pair of optimized limbs
~   perform #limit[result,+,hero.tagcount[HasAugment.auLAGCybOptSprayG],""]
    perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptSprayG],""]
  endif
nexteach
~+1 to limit of SprayGun weapons 
foreach pick in hero from WeaponBase where "ExCountAs.wpLAG1GunSpray"
  perform eachpick.field[dpLimit].modify[+,hero.tagcount[HasAugment.auLAGCybOptSprayG],""]
  perform eachpick.field[DicePool].modify[+,field[Value].value,""]
  nexteach]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptSprayG" name="CybOptSprayG" abbrev="CybOptSprayG"/>
      </child>
    </thing>
  <thing id="auLAGCybOptEscap" name="Cyberlimb Optimization, Escape Artist" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Escape Artist: {/b} This is an arm, leg and torso optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper"/>
    <tag group="Augment" tag="Cyber"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Equipment" tag="AvailAdd"/>
    <tag group="Equipment" tag="HideActive"/>
    <tag group="AugExclude" tag="OptLimb"/>
    <tag group="AccessType" tag="LegUpper"/>
    <tag group="AccessType" tag="Torso"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptEscap]

doneif (hero.tagcount[Duplicate.CybOptEscap] > 1)

~+1 to Escape limit per optimized limb
perform #limit[skaEscape,+,hero.tagcount[HasAugment.auLAGCybOptEscap],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptEscap] / 2,0,-1)

~+1 to Escape tests per pair of optimized limbs
perform #dicepool[skaEscape,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptEscap" name="CybOptEscap" abbrev="CybOptEscap"/>
      </child>
    </thing>
  <thing id="auLAGCybOptPalm" name="Cyberlimb Optimization, Palming" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Palming: {/b} This is an arm, leg and torso optimization, however when installed in cyberlegs it may not apply to all tests. Check with your GM to be sure." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper"/>
    <tag group="Augment" tag="Cyber"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Equipment" tag="AvailAdd"/>
    <tag group="Equipment" tag="HideActive"/>
    <tag group="AugExclude" tag="OptLimb"/>
    <tag group="AccessType" tag="LegUpper"/>
    <tag group="AccessType" tag="Torso"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptPalm]

doneif (hero.tagcount[Duplicate.CybOptPalm] > 1)

~+1 to Palming limit per optimized limb
perform #limit[skaPalming,+,hero.tagcount[HasAugment.auLAGCybOptPalm],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptPalm] / 2,0,-1)

~+1 to Palming tests per pair of optimized limbs
perform #dicepool[skaPalming,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptPalm" name="CybOptPalm" abbrev="CybOptPalm"/>
      </child>
    </thing>
  <thing id="auLAGCybOptPerc" name="Cyberlimb Optimization, Perception" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Perception: {/b} Any limb may be optimized for perception, but bonuses from limbs other than the skull do not apply to tests other than tactile perception." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="Augment" tag="Cyber"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Equipment" tag="AvailAdd"/>
    <tag group="Equipment" tag="HideActive"/>
    <tag group="AugExclude" tag="OptLimb"/>
    <tag group="AccessType" tag="Skull"/>
    <tag group="AccessType" tag="ArmUpper"/>
    <tag group="AccessType" tag="LegUpper"/>
    <tag group="AccessType" tag="Torso"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptPerc]

doneif (hero.tagcount[Duplicate.CybOptPerc] > 1)

~+1 to Perception limit per optimized limb
perform #limit[skaPercep,+,hero.tagcount[HasAugment.auLAGCybOptPerc],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptPerc] / 2,0,-1)

~+1 to Perception tests per pair of optimized limbs
perform #dicepool[skaPercep,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptPerc" name="CybOptPerc" abbrev="CybOptPerc"/>
      </child>
    </thing>
  <thing id="auLAGNarco" name="Narco" description="This is a set of several minor genetic modifications that have the collective effect of modifying the way your body processes drugs. These genes were discovered through study of survivors of years of heavy substance abuse. While you become more likely to become addicted to drugs, you experience greater effects of drugs and lessened effects when they wear off. Any drug that grants a positive attribute modifier as an effect increases that modifier by +1. Any drug that deals damage when it wears off deals two less damage, and any negative effects that occur when a drug wears off are halved in duration. On Addiction Tests, take a - 2 dice pool modifier when you aren&apos;t addicted to the drug you&apos;re rolling for, and a +2 dice pool modifier when you are addicted to the drug." compset="Augment" replaces="auNarco" uniqueness="useronce">
    <fieldval field="grTreatTim" value="2 weeks"/>
    <fieldval field="grAvail" value="12"/>
    <fieldval field="grEssence" value=".2"/>
    <fieldval field="grCost" value="16420"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="Augment" tag="Gene"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="AugCat" tag="GeneExotic"/>
    <tag group="Show" tag="SpecialTab"/>
    <eval phase="Effects"><![CDATA[doneif (activated = 0)

#situational[hero.child[arAddPhys],"+2 when you are already addicted to the drug you are rolling for",field[thingname].text]
#situational[hero.child[arAddPhys],"-2 when you are not addicted to the drug you are rolling for",field[thingname].text]

#situational[hero.child[arAddPsych],"+2 when you are already addicted to the drug you are rolling for",field[thingname].text]
#situational[hero.child[arAddPsych],"-2 when you are not addicted to the drug you are rolling for",field[thingname].text]]]></eval>
    <eval phase="Effects" priority="50001" index="2"><![CDATA[var negval as number
var total as number
var hist as string
foreach pick in hero where "AttrCat.Physical"
  debug eachpick.idstring
  hist = eachpick.field[trtDrug].history
  ~debug eachpick.field[trtDrug].history
  total = 0
  ~debug "Initial total is " & total
  while (pos(hist,"-") > -1)
    negval = mid(hist, pos(hist,"-") + 1, 1)
    debug "Negative character is " & negval
    total -= negval
    hist = right(hist, length(hist) - pos(hist,"-") - 2)
    debug "New history is" & hist
  loop
  ~debug "Negative total is " & total
  if (eachpick.field[trtDrug].value - total > 0) then
  ~  debug "Drug activation detected!"
    if (eachpick.field[realFinal].value - eachpick.field[trtNatural].value < 4) then
  ~    debug "Not at augmax yet! Adding Narco Bonus!"
      perform eachpick.field[trtDrug].modify[+,1,""]
    endif
  endif
nexteach
foreach pick in hero where "AttrCat.Mental"
  debug eachpick.idstring
  hist = eachpick.field[trtDrug].history
  debug eachpick.field[trtDrug].history
  total = 0
  ~debug "Initial total is " & total
  while (pos(hist,"-") > -1)
    negval = mid(hist, pos(hist,"-") + 1, 1)
    debug "Negative character is " & negval
    total -= negval
    hist = right(hist, length(hist) - pos(hist,"-") - 2)
    debug "New history is" & hist
  loop
  debug "Negative total is " & total
  if (eachpick.field[trtDrug].value - total > 0) then
    debug "Drug activation detected!"
    if (eachpick.field[realFinal].value - eachpick.field[trtNatural].value < 4) then
      debug "Not at augmax yet!"
      perform eachpick.field[trtDrug].modify[+,1,""]
      debug "History is " & eachpick.field[trtDrug].history
    endif
  endif
nexteach]]></eval>
    <child entity="grCustom"></child>
    </thing>
  <thing id="adjLAGdefense" name="Defense Dicepool" description="Select this adjustment to apply a bonus/penalty to the dice pool for a specific defense." compset="Adjustment" replaces="adjDefense">
    <fieldval field="usrCandid1" value="component.DefenRoll"/>
    <fieldval field="adjMaximum" value="50"/>
    <tag group="ChooseSrc1" tag="Hero" name="All Picks on Hero" abbrev="All Picks on Hero"/>
    <tag group="InPlay" tag="PermOK" name="Permanent Allowed" abbrev="Permanent Allowed"/>
    <tag group="InPlay" tag="TempOK" name="Temporary Allowed" abbrev="Temporary Allowed"/>
    <tag group="AdjustCat" tag="Character" name="Character Statistics" abbrev="Character Statistics"/>
    <tag group="AdjustShow" tag="Increment" name="Increment" abbrev="Increment"/>
    <eval phase="Effects" priority="8000"><![CDATA[
      if (activated <> 0) then
        perform field[usrChosen1].chosen.field[DicePool].modify[+,field[adjUser].value,field[adjHistory].text]
        endif]]>
      <after name="Activate Adjustments"/>
      </eval>
    </thing>
  <thing id="auLAGCybOptSneak" name="Cyberlimb Optimization, Sneaking" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Sneaking: {/b} This is an arm, leg and torso optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AccessType" tag="LegUpper" name="Cyber Upper Leg" abbrev="Cyber Upper Leg"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="Torso"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptSneak]

doneif (hero.tagcount[Duplicate.CybOptSneak] > 1)

~+1 to Sneaking limit per optimized limb
perform #limit[skaSneakin,+,hero.tagcount[HasAugment.auLAGCybOptSneak],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptSneak] / 2,0,-1)

~+1 to Sneaking tests per pair of optimized limbs
perform #dicepool[skaSneakin,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptSneak" name="CybOptSneak" abbrev="CybOptSneak"/>
      </child>
    </thing>
  <thing id="auLAGCybOptSurv" name="Cyberlimb Optimization, Survival" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Survival: {/b} This is an arm, leg and torso optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AccessType" tag="LegUpper" name="Cyber Upper Leg" abbrev="Cyber Upper Leg"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="Torso"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptSurv]

doneif (hero.tagcount[Duplicate.CybOptSurv] > 1)

~+1 to Sneaking limit per optimized limb
perform #limit[skaSurviva,+,hero.tagcount[HasAugment.auLAGCybOptSurv],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptSurv] / 2,0,-1)

~+1 to Sneaking tests per pair of optimized limbs
perform #dicepool[skaSurviva,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptSurv" name="CybOptSurv" abbrev="CybOptSurv"/>
      </child>
    </thing>
  <thing id="auLAGCybOptTrack" name="Cyberlimb Optimization, Tracker" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Tracker: {/b} This is a skull only optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="Skull"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptTrack]

doneif (hero.tagcount[Duplicate.CybOptTrack] > 1)

~+1 to Tracking limit per optimized limb
perform #limit[skaTrackin,+,hero.tagcount[HasAugment.auLAGCybOptTrack],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptTrack] / 2,0,-1)

~+1 to Tracking tests per pair of optimized limbs
perform #dicepool[skaTrackin,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptTrack" name="CybOptTrack" abbrev="CybOptTrack"/>
      </child>
    </thing>
  <thing id="auLAGCybOptAeMech" name="Cyberlimb Optimization, Aeronautics Mechanic" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Aeronautics Mechanic: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptAeMech]

doneif (hero.tagcount[Duplicate.CybOptAeMech] > 1)

~+1 to Aeronautics Mechanic limit per optimized limb
perform #limit[skaAeroMec,+,hero.tagcount[HasAugment.auLAGCybOptAeMech],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptAeMech] / 2,0,-1)

~+1 to Aeronautics Mechanic tests per pair of optimized limbs
perform #dicepool[skaAeroMec,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptAeMech" name="CybOptAeMech" abbrev="CybOptAeMech"/>
      </child>
    </thing>
  <thing id="auLAGCybOptAnim" name="Cyberlimb Optimization, Animal Handling" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Animal Handling: {/b} This is a full body optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="LegUpper"/>
    <tag group="AccessType" tag="Skull"/>
    <tag group="AccessType" tag="Torso"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptAnim]

doneif (hero.tagcount[Duplicate.CybOptAnim] > 1)

~+1 to Animal Handling limit per optimized limb
perform #limit[skAnHandli,+,hero.tagcount[HasAugment.auLAGCybOptAnim],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptAnim] / 2,0,-1)

~+1 to Animal Handling tests per pair of optimized limbs
perform #dicepool[skAnHandli,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptAnim" name="CybOptAnim" abbrev="CybOptAnim"/>
      </child>
    </thing>
  <thing id="auLAGCybOptArmo" name="Cyberlimb Optimization, Armorer" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Armorer: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptArmo]

doneif (hero.tagcount[Duplicate.CybOptArmo] > 1)

~+1 to Armorer limit per optimized limb
perform #limit[skaArmorer,+,hero.tagcount[HasAugment.auLAGCybOptArmo],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptArmo] / 2,0,-1)

~+1 to Armorer tests per pair of optimized limbs
perform #dicepool[skaArmorer,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptArmo" name="CybOptArmo" abbrev="CybOptArmo"/>
      </child>
    </thing>
  <thing id="auLAGCybOptArti" name="Cyberlimb Optimization, Artisan" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Artisan: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptArti]

doneif (hero.tagcount[Duplicate.CybOptArti] > 1)

~+1 to Artisan limit per optimized limb
perform #limit[skaArtisan,+,hero.tagcount[HasAugment.auLAGCybOptArti],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptArti] / 2,0,-1)

~+1 to Artisan tests per pair of optimized limbs
perform #dicepool[skaArtisan,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptArti" name="CybOptArti" abbrev="CybOptArti"/>
      </child>
    </thing>
  <thing id="auLAGCybOptAuMech" name="Cyberlimb Optimization, Automotive Mechanic" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Automotive Mechanic: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptAuMech]

doneif (hero.tagcount[Duplicate.CybOptAuMech] > 1)

~+1 to Automotive Mechanic limit per optimized limb
perform #limit[skaAutoMec,+,hero.tagcount[HasAugment.auLAGCybOptAuMech],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptAuMech] / 2,0,-1)

~+1 to Automotive Mechanic tests per pair of optimized limbs
perform #dicepool[skaAutoMec,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptAuMech" name="CybOptAuMech" abbrev="CybOptAuMech"/>
      </child>
    </thing>
  <thing id="auLAGCybOptBiot" name="Cyberlimb Optimization, Biotechnology" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Biotechnology: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptBiot]

doneif (hero.tagcount[Duplicate.CybOptBiot] > 1)

~+1 to Biotechnology limit per optimized limb
perform #limit[skaBiotech,+,hero.tagcount[HasAugment.auLAGCybOptBiot],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptBiot] / 2,0,-1)

~+1 to Biotechnology tests per pair of optimized limbs
perform #dicepool[skaBiotech,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptBiot" name="CybOptBiot" abbrev="CybOptBiot"/>
      </child>
    </thing>
  <thing id="auLAGCybOptChem" name="Cyberlimb Optimization, Chemistry" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Chemistry: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptChem]

doneif (hero.tagcount[Duplicate.CybOptChem] > 1)

~+1 to Chemistry limit per optimized limb
perform #limit[skaChemist,+,hero.tagcount[HasAugment.auLAGCybOptChem],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptChem] / 2,0,-1)

~+1 to Chemistry tests per pair of optimized limbs
perform #dicepool[skaChemist,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptChem" name="CybOptChem" abbrev="CybOptChem"/>
      </child>
    </thing>
  <thing id="auLAGCybOptCyber" name="Cyberlimb Optimization, Cybertechnology" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Cybertechnology: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptCyber]

doneif (hero.tagcount[Duplicate.CybOptCyber] > 1)

~+1 to Cybertechnology limit per optimized limb
perform #limit[skaCyberte,+,hero.tagcount[HasAugment.auLAGCybOptCyber],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptCyber] / 2,0,-1)

~+1 to Cybertechnology tests per pair of optimized limbs
perform #dicepool[skaCyberte,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptCyber" name="CybOptCyber" abbrev="CybOptCyber"/>
      </child>
    </thing>
  <thing id="auLAGCybOptDemo" name="Cyberlimb Optimization, Demolitions" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Demolitions: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptDemo]

doneif (hero.tagcount[Duplicate.CybOptDemo] > 1)

~+1 to Demolitions limit per optimized limb
perform #limit[skaDemolit,+,hero.tagcount[HasAugment.auLAGCybOptDemo],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptDemo] / 2,0,-1)

~+1 to Demolitions tests per pair of optimized limbs
perform #dicepool[skaDemolit,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptDemo" name="CybOptDemo" abbrev="CybOptDemo"/>
      </child>
    </thing>
  <thing id="auLAGCybOptFAid" name="Cyberlimb Optimization, First Aid" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}First Aid: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptFAid]

doneif (hero.tagcount[Duplicate.CybOptFAid] > 1)

~+1 to First Aid limit per optimized limb
perform #limit[skaFirstAi,+,hero.tagcount[HasAugment.auLAGCybOptFAid],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptFAid] / 2,0,-1)

~+1 to First Aid tests per pair of optimized limbs
perform #dicepool[skaFirstAi,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptFAid" name="CybOptFAid" abbrev="CybOptFAid"/>
      </child>
    </thing>
  <thing id="auLAGCybOptForg" name="Cyberlimb Optimization, Forgery" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Forgery: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptForg]

doneif (hero.tagcount[Duplicate.CybOptForg] > 1)

~+1 to Forgery limit per optimized limb
perform #limit[skaForgery,+,hero.tagcount[HasAugment.auLAGCybOptForg],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptForg] / 2,0,-1)

~+1 to Forgery tests per pair of optimized limbs
perform #dicepool[skaForgery,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptForg" name="CybOptForg" abbrev="CybOptForg"/>
      </child>
    </thing>
  <thing id="auLAGEnhAGI" name="Enhanced Agility" description="Cyberlimb enhancements use up to the Capacity of the cyberlimb they enhance. There are three types of enhancement: Agility, Armor, and Strength. Physical attribute enhancements add their Rating to the appropriate attribute of the limb. Armor enhancements provide an Armor bonus equal to their rating, cumulative with other armor, without adding to Encumbrance. Each limb can have only one enhancement of each type (you can&apos;t stack two Strength 3 enhancements in the same cyberarm), but you can replace one you have with one you want." compset="Augment" replaces="auEnhanAGI" uniqueness="useronce">
    <fieldval field="grCostRat" value="6500"/>
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="3"/>
    <fieldval field="grAvailRat" value="3"/>
    <fieldval field="grSpaceRat" value="1"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="Cyberlimb" tag="ArmLower"/>
    <tag group="Cyberlimb" tag="LegLower"/>
    <tag group="Cyberlimb" tag="ArmUpper"/>
    <tag group="Cyberlimb" tag="LegUpper"/>
    <tag group="Cyberlimb" tag="Skull"/>
    <tag group="Cyberlimb" tag="Torso"/>
    <tag group="Cyberlimb" tag="Liminal"/>
    <eval phase="Traits" priority="4000"><![CDATA[
      ~there's a version of this mod specifically for vehicle arms
      doneif (hero.tagis[Hero.Vehicle] <> 0)

      ~don't do anything if we're disabled
      doneif (activated = 0)

      ~add our rating as an in-play bonus to the Agility customization pick
      if (container.childlives[auCustAGI] <> 0) then
        container.child[auCustAGI].field[grInPlay].value += field[grUser].value
        endif]]>
      <before name="Calc grRating #2"/>
      </eval>
    <evalrule phase="Validate" priority="5000" message="A cybertorso is required in order to have cyberlimb enhancements with a rating greater than 3." summary="A cybertorso is required in order to have cyberlimb enhancements with a rating greater than 3."><![CDATA[
      ~if we're being added to a vehicle arm, ignore this
      validif (hero.tagis[Hero.Vehicle] <> 0)

      ~if we're on a cybertorso, that's OK
      validif (parent.tagis[Cyberlimb.Torso] <> 0)

      ~if our rating if 3 or lower, we're OK
      validif (field[grUser].value + field[grBonus].value <= 3)

      ~otherwise, we're OK if the hero has a cybertorso
      validif (hero.tagis[Cyberlimb.Torso] <> 0)]]></evalrule>
    <exprreq message="There is a separate version of this mod for use on vehicle arms">hero.tagis[Hero.Vehicle] = 0</exprreq>
    <child entity="grCustom"></child>
    </thing>
  <thing id="auLAGEnhSTR" name="Enhanced Strength" description="Cyberlimb enhancements use up to the Capacity of the cyberlimb they enhance. There are three types of enhancement: Agility, Armor, and Strength. Physical attribute enhancements add their Rating to the appropriate attribute of the limb. Armor enhancements provide an Armor bonus equal to their rating, cumulative with other armor, without adding to Encumbrance. Each limb can have only one enhancement of each type (you can&apos;t stack two Strength 3 enhancements in the same cyberarm), but you can replace one you have with one you want." compset="Augment" replaces="auEnhanSTR" uniqueness="useronce">
    <fieldval field="grCostRat" value="6500"/>
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="3"/>
    <fieldval field="grAvailRat" value="3"/>
    <fieldval field="grSpaceRat" value="1"/>
    <tag group="Restricted" tag="Restricted" name="Restricted" abbrev="R"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="Cyberlimb" tag="ArmLower"/>
    <tag group="Cyberlimb" tag="LegLower"/>
    <tag group="Cyberlimb" tag="ArmUpper"/>
    <tag group="Cyberlimb" tag="LegUpper"/>
    <tag group="Cyberlimb" tag="Skull"/>
    <tag group="Cyberlimb" tag="Torso"/>
    <tag group="Cyberlimb" tag="Liminal"/>
    <eval phase="Traits" priority="4000"><![CDATA[
      ~there's a version of this mod specifically for vehicle arms
      doneif (hero.tagis[Hero.Vehicle] <> 0)

      ~don't do anything if we're disabled
      doneif (activated = 0)

      ~add our rating as an in-play bonus to the Strength customization pick
      if (container.childlives[auCustSTR] <> 0) then
        container.child[auCustSTR].field[grInPlay].value += field[grUser].value
        endif]]>
      <before name="Calc grRating #2"/>
      </eval>
    <evalrule phase="Validate" priority="5000" message="A cybertorso is required in order to have cyberlimb enhancements with a rating greater than 3." summary="A cybertorso is required in order to have cyberlimb enhancements with a rating greater than 3."><![CDATA[
      ~if we're being added to a vehicle arm, ignore this
      validif (hero.tagis[Hero.Vehicle] <> 0)

      ~if we're on a cybertorso, that's OK
      validif (parent.tagis[Cyberlimb.Torso] <> 0)

      ~if our rating if 3 or lower, we're OK
      validif (field[grUser].value + field[grBonus].value <= 3)

      ~otherwise, we're OK if the hero has a cybertorso
      validif (hero.tagis[Cyberlimb.Torso] <> 0)]]></evalrule>
    <exprreq message="There is a separate version of this mod for use on vehicle arms">hero.tagis[Hero.Vehicle] = 0</exprreq>
    <child entity="grCustom"></child>
    </thing>
  <thing id="auLAGCybOptInMech" name="Cyberlimb Optimization, Industrial Mechanic" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Industrial Mechanic: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptInMech]

doneif (hero.tagcount[Duplicate.CybOptInMech] > 1)

~+1 to Industrial Mechanic limit per optimized limb
perform #limit[skaInduMec,+,hero.tagcount[HasAugment.auLAGCybOptInMech],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptInMech] / 2,0,-1)

~+1 to Industrial Mechanic tests per pair of optimized limbs
perform #dicepool[skaInduMec,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptInMech" name="CybOptInMech" abbrev="CybOptInMech"/>
      </child>
    </thing>
  <thing id="auLAGCybOptLock" name="Cyberlimb Optimization, Locksmith" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Locksmith: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptLock]

doneif (hero.tagcount[Duplicate.CybOptLock] > 1)

~+1 to Locksmith limit per optimized limb
perform #limit[skaLocksmi,+,hero.tagcount[HasAugment.auLAGCybOptLock],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptLock] / 2,0,-1)

~+1 to Locksmith tests per pair of optimized limbs
perform #dicepool[skaLocksmi,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptLock" name="CybOptLock" abbrev="CybOptLock"/>
      </child>
    </thing>
  <thing id="auLAGCybOptMedic" name="Cyberlimb Optimization, Medicine" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Medicine: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptMedic]

doneif (hero.tagcount[Duplicate.CybOptMedic] > 1)

~+1 to Medicine limit per optimized limb
perform #limit[skaMedicin,+,hero.tagcount[HasAugment.auLAGCybOptMedic],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptMedic] / 2,0,-1)

~+1 to Medicine tests per pair of optimized limbs
perform #dicepool[skaMedicin,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptMedic" name="CybOptMedic" abbrev="CybOptMedic"/>
      </child>
    </thing>
  <thing id="auLAGCybOptNaMech" name="Cyberlimb Optimization, Nautical Mechanic" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Nautical Mechanic: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AccessType" tag="ArmUpper" name="Cyber Upper Arm" abbrev="Cyber Upper Arm"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptNaMech]

doneif (hero.tagcount[Duplicate.CybOptNaMech] > 1)

~+1 to Nautical Mechanic limit per optimized limb
perform #limit[skaNautMec,+,hero.tagcount[HasAugment.auLAGCybOptNaMech],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptNaMech] / 2,0,-1)

~+1 to Nautical Mechanic tests per pair of optimized limbs
perform #dicepool[skaNautMec,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptNaMech" name="CybOptNaMech" abbrev="CybOptNaMech"/>
      </child>
    </thing>
  <thing id="auLAGCybOptNavi" name="Cyberlimb Optimization, Navigation" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Navigation: {/b} This is an cyberskull optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="Skull"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptNavi]

doneif (hero.tagcount[Duplicate.CybOptNavi] > 1)

~+1 to Navigation limit per optimized limb
perform #limit[skaNavigat,+,hero.tagcount[HasAugment.auLAGCybOptNavi],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptNavi] / 2,0,-1)

~+1 to Navigation tests per pair of optimized limbs
perform #dicepool[skaNavigat,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptNavi" name="CybOptNavi" abbrev="CybOptNavi"/>
      </child>
    </thing>
  <thing id="auLAGCybOptGunn" name="Cyberlimb Optimization, Gunnery" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Gunnery: {/b} This is an arm optimization." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="ArmUpper"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptGunn]

doneif (hero.tagcount[Duplicate.CybOptGunn] > 1)

~+1 to Gunnery limit per optimized limb
perform #limit[skaGunnery,+,hero.tagcount[HasAugment.auLAGCybOptGunn],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptGunn] / 2,0,-1)

~+1 to Gunnery tests per pair of optimized limbs
perform #dicepool[skaGunnery,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptGunn" name="CybOptGunn" abbrev="CybOptGunn"/>
      </child>
    </thing>
  <thing id="auLAGCybOptPilAe" name="Cyberlimb Optimization, Pilot Aerospace" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Pilot Aerospace: {/b} This is an arm and leg optimization, but no bonuses apply in VR or while rigging." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="ArmUpper"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptPilAe]

doneif (hero.tagcount[Duplicate.CybOptPilAe] > 1)

~+1 to Pilot Aerospace limit per optimized limb
perform #limit[skaPilAero,+,hero.tagcount[HasAugment.auLAGCybOptPilAe],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptPilAe] / 2,0,-1)

~+1 to Pilot Aerospace tests per pair of optimized limbs
perform #dicepool[skaPilAero,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptPilAe" name="CybOptPilAe" abbrev="CybOptPilAe"/>
      </child>
    </thing>
  <thing id="auLAGCybOptPilAi" name="Cyberlimb Optimization, Pilot Aircraft" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Pilot Aircraft: {/b} This is an arm and leg optimization, but no bonuses apply in VR or while rigging." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="ArmUpper"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptPilAi]

doneif (hero.tagcount[Duplicate.CybOptPilAi] > 1)

~+1 to Pilot Aircraft limit per optimized limb
perform #limit[skaPilAirc,+,hero.tagcount[HasAugment.auLAGCybOptPilAi],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptPilAi] / 2,0,-1)

~+1 to Pilot Aircraft tests per pair of optimized limbs
perform #dicepool[skaPilAirc,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptPilAi" name="CybOptPilAi" abbrev="CybOptPilAi"/>
      </child>
    </thing>
  <thing id="auLAGCybOptPilGC" name="Cyberlimb Optimization, Ground Craft" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Pilot Ground Craft: {/b} This is an arm and leg optimization, but no bonuses apply in VR or while rigging." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="ArmUpper"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptPilGC]

doneif (hero.tagcount[Duplicate.CybOptPilGC] > 1)

~+1 to Pilot Ground Craft limit per optimized limb
perform #limit[skaPilGrou,+,hero.tagcount[HasAugment.auLAGCybOptPilGC],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptPilGC] / 2,0,-1)

~+1 to Pilot Ground Craft tests per pair of optimized limbs
perform #dicepool[skaPilGrou,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptPilGC" name="CybOptPilGC" abbrev="CybOptPilGC"/>
      </child>
    </thing>
  <thing id="auLAGCybOptPilWk" name="Cyberlimb Optimization, Walker" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Pilot Walker: {/b} This is an arm and leg optimization, but no bonuses apply in VR or while rigging." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="ArmUpper"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptPilWk]

doneif (hero.tagcount[Duplicate.CybOptPilWk] > 1)

~+1 to Pilot Walker limit per optimized limb
perform #limit[skaPilWalk,+,hero.tagcount[HasAugment.auLAGCybOptPilWk],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptPilWk] / 2,0,-1)

~+1 to Pilot Walker tests per pair of optimized limbs
perform #dicepool[skaPilWalk,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptPilWk" name="CybOptPilWk" abbrev="CybOptPilWk"/>
      </child>
    </thing>
  <thing id="auLAGCybOptPilWa" name="Cyberlimb Optimization, Watercraft" description="For decades, cyberlimbs have been modified and analyzed, producing results that are greater in one area at a small cost in other areas, a general tradeoff that&apos;s been largely accepted in the name of efficiency. Primarily, this market is in the fields of sports or entertainment, but new arenas are always being explored. In each case, this requires a full cyberlimb dedicated to the cause, and they&apos;re usually intended to be taken in pairs for maximum result. As you might imagine, a limb may only be optimized in one way.\n\nOptimized limbs raise the user&apos;s applicable limit by +1 for each limb optimized in that skill. For each pair of limbs optimized for the skill, the user gains +1 to their applicable skill dice pool as well. While the list below showcases several examples, it is by no means exhaustive, and gamemasters are encouraged to come up with several of their own.\n\n{b}Pilot Watercraft: {/b} This is an arm and leg optimization, but no bonuses apply in VR or while rigging." compset="Augment">
    <fieldval field="grCost" value="2000"/>
    <fieldval field="grAvail" value="2"/>
    <fieldval field="grSpace" value="2"/>
    <usesource source="RHLimbOpt" parent="UserParent" name="RunnerHub Cyberlimb Optimization"/>
    <tag group="Equipment" tag="AvailAdd" name="Add Availability to Container" abbrev="Add Availability to Container"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="HideActive" name="Hide Mod/Accessory Activation" abbrev="Hide Mod/Accessory Activation"/>
    <tag group="ModCat" tag="Cyberlimbs" name="Cyberlimbs" abbrev="Cyberlimbs"/>
    <tag group="AugExclude" tag="OptLimb" name="OptLimb" abbrev="OptLimb"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="AccessType" tag="ArmUpper"/>
    <eval phase="Final" priority="20000"><![CDATA[~only proceed if we're not disabled
doneif (activated = 0)

perform hero.assign[Duplicate.CybOptPilWa]

doneif (hero.tagcount[Duplicate.CybOptPilWa] > 1)

~+1 to Pilot Watercraft limit per optimized limb
perform #limit[skaPilWate,+,hero.tagcount[HasAugment.auLAGCybOptPilWa],""]

field[Value].value = round(hero.tagcount[HasAugment.auLAGCybOptPilWa] / 2,0,-1)

~+1 to Pilot Watercraft tests per pair of optimized limbs
perform #dicepool[skaPilWate,+,field[Value].value,""]]]></eval>
    <evalrule phase="Validate" message="placeholder" summary="placeholder"><![CDATA[if (this.container.tagcount[ModInstall.auCyOpt?] + this.container.tagcount[ModInstall.auLAGCybOpt?] > 1) then
@valid = 0
@message = "You can't have two limb optimizations on the same limb."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom">
      <tag group="Duplicate" tag="CybOptPilWa" name="CybOptPilWa" abbrev="CybOptPilWa"/>
      </child>
    </thing>
  <thing id="eqLAGBlight" name="Blight" description="{b}Vector:{/b} Injection, Special\n{b}Speed:{/b} Immediate\n{b}Penetration:{/b} 0\n{b}Power:{/b} 12\n{b}Effect:{/b} Awakened injected with blight lose their connection to the manasphere for [12 – (Body or Magic, whichever is higher) hours, minimum 1 hour]. During this period, the target loses the ability to perform any task associated with magic. Adept powers are turned off, spells cannot be cast, etc.\n\nBlight was discovered by scientists attempting to dispose of manufacturing byproducts from Grey Mana production. The Brothers Grey Auction house holds this “happy” accident much closer to their vests, instead of flooding black markets with \nthis brutal toxin. \nWhen combined with DMSO, blight gains a contact vector. When an Awakened character is exposed to this combination of DMSO and blight, they must make a Drain Resistance test in place of a Toxin Resistance test vs. the power of the toxin. \nDamage taken is treated as Stun Drain. Any spirits exposed to this combination cannot apply immunity to normal weapons to the damage dealt by these weapons.\n\n*Dual-natured creatures injected with this drug are affected similarly in that they also lose connection to the manasphere. They suffer a –4 dice pool penalty to all actions while under the effects of blight. Prolonged exposure results in increasing discomfort. Continued and constant exposure beyond twenty-four hours has been observed to result in horrible mutations followed by death." compset="Toxin" stacking="merge">
    <fieldval field="grCost" value="250"/>
    <fieldval field="grAvail" value="8"/>
    <usesource source="RH_BTB" parent="UserParent" name="RunnerHub Better Than Bad"/>
    <tag group="ModCat" tag="Injected" name="Injected Item" abbrev="Injected Item"/>
    <tag group="ModCat" tag="Toxins" name="Toxins" abbrev="Toxins"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="Vector" tag="Inject" name="Injection" abbrev="Injection"/>
    <tag group="EquipCat" tag="Toxin" name="Toxins" abbrev="Toxins"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="Equipment" tag="ReqThrowbk" name="Must be a throwback device without wireless capability" abbrev="Must be a throwback device without wireless capability"/>
    <child entity="grCustom"></child>
    </thing>
  <thing id="riLAGCalling" name="Calling [Spirit Type]" description="The Calling ritual is the occult way to call forth spirits that the magician would not normally conjure for their tradition. This is not the same as conjuring, as the spirit owes no services to the magician and may be hostile when/if it arrives. Some thaumaturgists would say that the calling ritual is the fundamental root for the Conjuring skill, before knowledge of the existence of metaplanes. They say that just to pick a fight with other thaumaturgians. Each calling ritual is unique to a spirit type, but not to a specific spirit or classification. So the Calling Fae ritual would be used in calling the Wild Hunt, while Calling Phantoms would be used in calling ghosts. For the actual class of spirit, the magician must create paraphernalia.\n\nParaphernalia is the magical link that will call the said spirit to the ritual area. Paraphernalia are unique kinds of conjuring materials (specific reagents), such as Ouija boards, or saucers of milk that are needed for the ritual. It can also include certain places that the ritual has to be practiced at or specific astronomical events have to occur at the time of the ritual. The exact nature is ultimately up to the gamemaster. Crafting paraphernalia requires a successful Alchemy + Magic [Force] (Force of the target spirit, 1 day) Extended Test.\n\nAt the gamemaster&apos;s discretion specific refined or radical Reagents (p. 210, {i}SG{/i}) may be needed to manufacture certain materials. All reagents are consumed or incorporated into the finished product. Paraphernalia can be crafted by the magician himself or purchased from a capable talismonger (i.e., a contact with the necessary skills and resources to create the paraphernalia) as long as the magician understands the composition of the requested paraphernalia. The magician must understand the composition of the paraphernalia before the talismonger begins work.\n\nThe ritual Force required to call a spirit is equal to the Force of the spirit being called. In establishing the ritual&apos;s foundation, a circle similar to a basic ward is prepared. This circle is the only thing separating the spirit from the magician while they barter. The ward may be broken by the magician or anyone else participating in the ritual by physically breaking the circle. The ward may also be broken by the spirit if the spirit&apos;s Force is greater than the Force of the circle and the spirit wins an Opposed Test against it (Force of the spirit vs. Force of the foundation).\n\nThe paraphernalia are expended as part of Give the Offering, step 5 of the ritual (p. 307, {i}SR5{/i}). Once the ritual has been completed, the spirit that was called appears in the center of the circle. If the ritual fails, the spirit doesn&apos;t appear, and the paraphernalia and reagents are lost. The magician who wants to see another day can only hope there is no glitch when he calls a spirit.\n\nFor every two successes (not net successes) the spirit has, the gamemaster may raise the Force of the next spirit called. (for example, the magician wants a Force 5 apparition and instead calls a Force 6). If the spirit gets four or more successes, the gamemaster may also choose a different spirit class of the same type to have been summoned (praying mantis instead of a cockroach in calling an insect spirit). This uncertainty and escalating risk make the calling ritual dangerous and unreliable to dabblers in magic.\n\nThe spirit stays within the circle used in the ritual for a number of hours equal to the Force of the ritual before returning to wherever it originated by way of astral space. While in the circle, the spirit is temporarily immune to any inherit weakness and protected from any attacks by the magician. Reduce successes of any attacks by the force of the circle. All bets are off if either side breaches the circle.\n\nThe spirit called is obligated to materialize and negotiate with the magician. Note that although the spirit who answered the call is inclined to negotiate and not necessarily hostile, it may lose patience or become angry if not shown the respect it believes is due. This would be done through the usual story play and negotiation skills. Be wary of bargaining with spirits that have been called, as they may trick the caller into entering a spirit pact (p. 137, {i}SG{/i}).\n\nThe Calling ritual is conceptually a very old ritual. Awakened and mundane occultists are able, with the proper paraphernalia, to call a spirit. It is believed that the paraphernalia, not the magician, powers the ritual. When a mundane is performing this ritual, substitute Arcana for Ritual Spellcasting." compset="Ritual">
    <fieldval field="domDomain" value="Enter Spirit Type Here"/>
    <tag group="User" tag="NeedDomain"/>
    <tag group="RitKeyword" tag="Contract"/>
    <tag group="RitAccess" tag="Mundane"/>
    <tag group="SkillDice" tag="skaArcana"/>
    <tag group="User" tag="Unique"/>
    </thing>
  <thing id="rvLAGAN822" name="Avibras-Nissan AN 822" description="Amazonia has one of the world’s largest demand for civilian helicopters, and they are extensively used to get around the mega city to avoid the hazards of road transportation. The Avibras-Nissan AN 822, built in partnership between the Japanese giant and a local Amazonian firm is specifically crafted for the reality of Metrópole air travel. It is small and nimble enough to dodge competing air traffic, some of which are large flying critters, such as dracoforms. It carries a suite of defensive measures to ward off the ever-present mid-air extraction risk. High-end executives, however, will always be driven by a rigger, either remotely or physically, or protected by an overwatching decker." compset="RaceVeh" replaces="rvAN822" uniqueness="unique">
    <fieldval field="racCost" value="221500"/>
    <fieldval field="racDiffHOn" value="5"/>
    <fieldval field="racDiffSOn" value="6"/>
    <fieldval field="racDiffAcc" value="3"/>
    <fieldval field="racDiffBod" value="14"/>
    <fieldval field="rvArmor" value="10"/>
    <fieldval field="racDiffPil" value="3"/>
    <fieldval field="racDiffSen" value="3"/>
    <fieldval field="rvSeats" value="5"/>
    <tag group="VehSpec" tag="spAirRot"/>
    <tag group="VehicleCat" tag="Rotor"/>
    <bootstrap thing="prAuManAir">
      <autotag group="Equipment" tag="FixRating"/>
      <autotag group="ProgIs" tag="Program"/>
      <autotag group="Target1" tag="rvAN822"/>
      <assignval field="grUser" value="2"/>
      </bootstrap>
    <bootstrap thing="prAuElecWa">
      <autotag group="Equipment" tag="FixRating"/>
      <autotag group="ProgIs" tag="Program"/>
      <assignval field="grUser" value="2"/>
      </bootstrap>
    <bootstrap thing="prAuDefens">
      <autotag group="Equipment" tag="FixRating"/>
      <autotag group="ProgIs" tag="Program"/>
      <autotag group="Target1" tag="rvAN822"/>
      <assignval field="grUser" value="2"/>
      </bootstrap>
    <bootstrap thing="eqRigger"></bootstrap>
    <bootstrap thing="mdManualOv"></bootstrap>
    </thing>
  <thing id="amLAGPainade" name="Painade" description="Officially called the Fichetti Pain Induction Area Denial Grenade, this item was quickly nicknamed the Painade by law enforcement and news agencies. The device uses the same microwave technology as the Fichetti Pain Inducer; anyone in the field the grenade generates feels like their skin is on fire. Treat this as a toxin attack with a Power of 8 and a speed of Immediate. The target resists with Body + Willpower. If the modified Power exceeds the target’s Mental limit, the target must spend his next Action Phase doing whatever it takes to run away from the pain. If the target cannot get out of the field, he is incapacitated with pain, suffering a dice pool modifier equal to the modified Power on all tests for as long as they are within the area of the grenade’s effect. The grenade projects this field for 5 Combat Turns, but miniaturization of the emitter causes the electronics to fry after use." compset="Ammunition" replaces="grPainade" stacking="merge">
    <fieldval field="grCost" value="300"/>
    <fieldval field="grAvail" value="9"/>
    <fieldval field="wpDamage" value="8"/>
    <fieldval field="wpBlast" value="10"/>
    <fieldval field="shortname" value="Painade"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="AmmoType" tag="Grenade"/>
    <tag group="WpDamType" tag="Special"/>
    <child entity="grCustAmmo"></child>
    </thing>
  <thing id="wpLAGMorAlta" name="Morrissey Alta" description="Seamlessly integrating form and function, the Alta remains Morrissey’s standard-bearer in the pistol marketplace. The Alta’s fame largely stems from Morrissey’s endless pursuit of up-and-coming celebrities for endorsement deals and its prominence in the limited-run trade calendar Morrissey produces. Despite all the buzz, the Alta consistently produces results at the range and in the field. Nearly twenty years of production stands as testament to Morrissey’s devotion to quality and consistency.\n\n{i}Standard Accessories{/i}: Laser Sight (top)\n\nNote: Carrying this weapon does not incur a “wrong attire” penalty to Etiquette tests (p. 140, {i}SR5{/i}) in settings that privilege taste and refinement. A ban on weapons is still a ban, so don’t push your luck, chummer." compset="Ranged" replaces="wpMorAlta">
    <fieldval field="grCost" value="800"/>
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="wpDamage" value="8"/>
    <fieldval field="wpAP" value="-1"/>
    <fieldval field="wpAmmoCap" value="12"/>
    <fieldval field="grAvail" value="7"/>
    <tag group="Manufac" tag="Morrissey"/>
    <tag group="WpCategory" tag="HeavyPst"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Mode" tag="SemiAuto"/>
    <tag group="Armory" tag="Firearm"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="ReloadType" tag="Clip"/>
    <child entity="grCustRang">
      <bootstrap thing="acLaser"></bootstrap>
      </child>
    </thing>
  <thing id="wpLAGUltiRain" name="Ultimax Rain Forest Carbine" description="The Ultimax Rain Forest is a short-barreled rifle designed to meet a design requirement for the Sumatran Alliance. The weapon met all of the government&apos;s criteria and has been purchased to equip the constabulary. The Rain Forest features a deep magazine well to protect the magazine from the moisture and dirt common in jungle climates. Integrating night-vision technology, the carbine is well adapted to operations under the double and triple canopies frequently encountered by users. The carbine is available through Matrix purchases as well as local retailers." compset="Ranged" replaces="wpUltiRain">
    <fieldval field="dpLimit" value="5"/>
    <fieldval field="grCost" value="2600"/>
    <fieldval field="wpDamage" value="11"/>
    <fieldval field="wpAP" value="-2"/>
    <fieldval field="wpRecComp" value="1"/>
    <fieldval field="wpAmmoCap" value="18"/>
    <fieldval field="grAvail" value="8"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="Manufac" tag="Ultimax"/>
    <tag group="WpCategory" tag="AssaultRif"/>
    <tag group="WpDamType" tag="Physical"/>
    <tag group="Mode" tag="SemiAuto"/>
    <tag group="Mode" tag="Burst3"/>
    <tag group="ReloadType" tag="Clip"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="Armory" tag="Firearm"/>
    <child entity="grCustRang">
      <bootstrap thing="eqRainScop"></bootstrap>
      <bootstrap thing="mdFoldStoc"></bootstrap>
      </child>
    </thing>
  <thing id="eqLAGExtClip" name="Extended Clip" description="Sometimes the job calls for the ability to fire more shots without taking time to reload. That is what an extended clip is for. A Rating 1 Extended Clip adds fifty percent more rounds to the gun&apos;s capacity, and a Rating 2 Extended Clip adds one hundred percent more rounds. The only downside is it makes a gun a bit harder to hide (+1 Concealability per Rating). More of an accessory than a modification, an Extended Clip does not use any modification slots." compset="Equipment" replaces="acExtClip">
    <fieldval field="grAvail" value="6"/>
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="2"/>
    <fieldval field="grCost" value="35"/>
    <fieldval field="Value" value="1"/>
    <tag group="EquipCat" tag="Accessory"/>
    <tag group="AccessCat" tag="Firearm"/>
    <tag group="Restricted" tag="Restricted" abbrev="R"/>
    <eval phase="Traits" priority="5000"><![CDATA[
      doneif (container.ishero <> 0)

      ~only apply this if we're activated
      if (activated <> 0) then
        ~if we were user-added, apply the effects normally
        doneif (isuser = 0)

        ~multiply our existing ammo capacity by the multiplier we've
        ~calculated
        parent.field[wpAmmoCap].value *= field[Value].value
        endif]]></eval>
    <eval phase="Traits" priority="4900" index="2"><![CDATA[
      ~note that this script, which only applies to bootstrapped mods, runs
      ~slightly before the normal script.  That way, if you have a pre-installed
      ~Extended Clip 1, and disable it in order to purchase Extended Clip 2,
      ~we're certain that the reduction happens before the multiplication

      field[Value].value += field[grRating].value * 0.5

      doneif (container.ishero <> 0)

      ~if we're bootstrapped, nothing happens, becuase we assume our effects
      ~are already included in the ammo capacity.  However, if we're
      ~un-equipped, reduce the ammo capacity of the weapon - the user has
      ~decided to strip out this mod.
      if (isuser = 0) then
        if (field[grIsEquip].value = 0) then
          parent.field[wpAmmoCap].value = round(parent.field[wpAmmoCap].value/field[Value].value,0,-1)
          endif
        endif]]></eval>
    <evalrule phase="Validate" priority="10000" message="Placeholder"><![CDATA[if (parent.tagexpr[ReloadType.Clip|ReloadType.Belt|ReloadType.Drum] <> 0) then
  @valid=1
else
  @valid=0
  @message = "You can only load the extended clips mod on Clip, Belt, or Drum weapons."
endif]]></evalrule>
    <child entity="grCustom"></child>
    </thing>
  <thing id="rvLAGFordBroad" name="Ford Broadcast" description="The primary news van of the Sixth World, the Ford Broadcast (and similar models) is the newsteamtransport of choice. A driver (who usually doubles as a sound man) and reporter sit up front, with room for two more (usually a cameraman and a technician) in the rear, plus storage space for ample gear (boom mics, cameras, etc.) all topped off with a powerful satellite transmit-ter and a built-in Compuforce TaskMaster drone controller to operate three CU^3 drones (drones not included in the van’s price), allowing for both a mobile uplink unit and an on-the-spot command and control response vehicle for breaking news updates. The Broadcast isn’t a particularly agile or well-armored machine, but can safely roll into the average bad neighborhood without fear of small-arms fire. Barrens with rocket launchers are another matter, of course.\n\n{b}Similar models:{/b} Nissan NV-1800 (newscast variant), S-K Sprinter NCV6 (special)" compset="RaceVeh" uniqueness="unique">
    <fieldval field="racCost" value="50000"/>
    <fieldval field="racDiffHOn" value="3"/>
    <fieldval field="racDiffSOn" value="3"/>
    <fieldval field="racDiffAcc" value="1"/>
    <fieldval field="racDiffBod" value="16"/>
    <fieldval field="rvArmor" value="12"/>
    <fieldval field="racDiffPil" value="2"/>
    <fieldval field="racDiffSen" value="4"/>
    <fieldval field="rvSeats" value="4"/>
    <usesource source="RHNoFuture" parent="UserParent" name="RunnerHub No Future"/>
    <tag group="VehicleCat" tag="Van"/>
    <tag group="VehSpec" tag="spGroWhee"/>
    <bootstrap thing="rccCFTaskM"></bootstrap>
    </thing>
  <thing id="vehLAGFordBroad" name="Ford Broadcast" description="The primary news van of the Sixth World, the Ford Broadcast (and similar models) is the newsteamtransport of choice. A driver (who usually doubles as a sound man) and reporter sit up front, with room for two more (usually a cameraman and a technician) in the rear, plus storage space for ample gear (boom mics, cameras, etc.) all topped off with a powerful satellite transmit-ter and a built-in Compuforce TaskMaster drone controller to operate three CU^3 drones (drones not included in the van’s price), allowing for both a mobile uplink unit and an on-the-spot command and control response vehicle for breaking news updates. The Broadcast isn’t a particularly agile or well-armored machine, but can safely roll into the average bad neighborhood without fear of small-arms fire. Barrens with rocket launchers are another matter, of course.\n\n{b}Similar models:{/b} Nissan NV-1800 (newscast variant), S-K Sprinter NCV6 (special)" compset="Vehicle" stacking="never">
    <fieldval field="grCost" value="50000"/>
    <fieldval field="grAvail" value="8"/>
    <usesource source="RHNoFuture"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="VehicleCat" tag="Van" name="Vans" abbrev="Vans"/>
    <minion id="Vehicle" ownmode="no" livefield="minEnabled" coupledfield="minCoupled">
      <tag group="MinionSet" tag="Vehicle" name="Vehicle" abbrev="Vehicle"/>
      <bootstrap thing="rvLAGFordBroad"></bootstrap>
      </minion>
    </thing>
  <thing id="vehLAGSBCondor" name="Sikorsky-Bell Condor" description="While many channels have moved on to drone-cam reports, there’s still something about “Chopper Dave” reporting live from the sky, flitting over traffic, talking about car chases, or dipping low to get a good view of a gang war before slipping just out of the line of fire from a cheap RPG. The Condor is a simple two-man helicopter with openable windows and an upgraded sensor suite to allow all manner of camera updates. Ordinarily, it’s crewed by one pilot, while the co-pilot’s job is simply to keep an eye on what’s going on while shouting into a mic on live TV. Not a combat-worthy machine by any stretch, most corporate facilities tolerate the buzzing gnats in their airspace for a few minutes before waving them off. Those that don’t take the hint are usually met with “persuasion.”\n\n{b}Similar models:{/b} Robinson Raven IV, Airbus Eurocopter EC 215, Cicare CH-12X" compset="Vehicle" stacking="never">
    <fieldval field="grCost" value="120000"/>
    <fieldval field="grAvail" value="12"/>
    <usesource source="RHNoFuture"/>
    <tag group="Restricted" tag="Restricted"/>
    <tag group="VehicleCat" tag="Rotor"/>
    <minion id="Vehicle" ownmode="no" livefield="minEnabled" coupledfield="minCoupled">
      <tag group="MinionSet" tag="Vehicle" name="Vehicle" abbrev="Vehicle"/>
      <bootstrap thing="rvLAGSBCondor"></bootstrap>
      </minion>
    </thing>
  <thing id="rvLAGSBCondor" name="Sikorsky-Bell Condor" description="While many channels have moved on to drone-cam reports, there’s still something about “Chopper Dave” reporting live from the sky, flitting over traffic, talking about car chases, or dipping low to get a good view of a gang war before slipping just out of the line of fire from a cheap RPG. The Condor is a simple two-man helicopter with openable windows and an upgraded sensor suite to allow all manner of camera updates. Ordinarily, it’s crewed by one pilot, while the co-pilot’s job is simply to keep an eye on what’s going on while shouting into a mic on live TV. Not a combat-worthy machine by any stretch, most corporate facilities tolerate the buzzing gnats in their airspace for a few minutes before waving them off. Those that don’t take the hint are usually met with “persuasion.”\n\n{b}Similar models:{/b} Robinson Raven IV, Airbus Eurocopter EC 215, Cicare CH-12X" compset="RaceVeh" uniqueness="unique">
    <fieldval field="racCost" value="120000"/>
    <fieldval field="racDiffHOn" value="4"/>
    <fieldval field="racDiffSOn" value="4"/>
    <fieldval field="racDiffAcc" value="2"/>
    <fieldval field="racDiffBod" value="12"/>
    <fieldval field="rvArmor" value="9"/>
    <fieldval field="racDiffPil" value="2"/>
    <fieldval field="racDiffSen" value="6"/>
    <fieldval field="rvSeats" value="2"/>
    <usesource source="RHNoFuture" parent="UserParent" name="RunnerHub No Future"/>
    <tag group="VehicleCat" tag="Rotor"/>
    <tag group="VehSpec" tag="spAirRot"/>
    <bootstrap thing="rccCFTaskM"></bootstrap>
    </thing>
  <thing id="eqLAGGraffiti" name="Graffiti Kit" description="While anyone can grab a can of spray paint (p. 258, Run Faster) and tag a wall, a Graffiti Kit has a selection of colors, several stencils, and quick-cleaning solvents, letting a young artisan quickly assemble an impressive display, remove the evidence form their own hands, then store the lot for a rapid escape. Protective goggles and a rebreather are highly recommended." compset="Equipment">
    <fieldval field="grAvail" value="4"/>
    <fieldval field="grCost" value="100"/>
    <usesource source="RHNoFuture"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="Equipment" tag="FixRating"/>
    <tag group="EquipCat" tag="Tools"/>
    <child entity="grCustom"></child>
    </thing>
  <thing id="wpLAGPitchfork" name="Pitchfork" description="Where you have torches, you gotta have pitchforks. The items are easy to find out on the farm, but sprawl-dwellers have to build their own out of meter sticks, cast-off fence parts, and so on. But it’s worth it—nothing gets the blood pumping like\na good ol’ mob!" compset="Melee">
    <fieldval field="grCost" value="25"/>
    <fieldval field="grAvail" value="4"/>
    <fieldval field="dpLimit" value="3"/>
    <fieldval field="wpDamage" value="2"/>
    <fieldval field="wpReach" value="3"/>
    <usesource source="RHNoFuture"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="Weapon" tag="NoTwoBonus" name="Doesn&apos;t Increase DV when wielded two-handed" abbrev="Doesn&apos;t Increase DV when wielded two-handed"/>
    <tag group="Weapon" tag="DamageStr"/>
    <tag group="WpGroup" tag="Throwing"/>
    <tag group="WpCategory" tag="Spear"/>
    <tag group="Equipment" tag="TwoHand"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGYoYo] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.YoYo"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="amLAGMoloCocktail" name="Molotov Cocktail" description="A classic first seen in Russia nearly a hundred and fifty years ago, the Molotov is simple enough to make: Take a glass bottle, fill it with gasoline, stuff a rag in the top, done. Light the “fuse,” hurl it at something you want to burn, then sit back and enjoy a crackling good time. They were absolute terrors against German tanks, with burning fuel slipping through joints and setting people, uniforms, and ammunition aflame. These days, there are some problems. Glass bottles have been generally replaced by bio-plastic, gas costs a ton, and modern armored vehicles are sealed against liquids. \n\nStill, they’re seen at any good riot, ruining many a Knight Errant enforcement officer’s day. Molotovs don’t come in wireless versions. Funny that!" compset="Ammunition" stacking="merge">
    <fieldval field="grCost" value="15"/>
    <fieldval field="grAvail" value="6"/>
    <fieldval field="wpDamage" value="8"/>
    <fieldval field="wpAP" value="-6"/>
    <fieldval field="wpBlast" value="-4"/>
    <usesource source="RHNoFuture"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="ModCat" tag="Grenade" name="Cyberfinger, Grenade" abbrev="Cyberfinger, Grenade"/>
    <tag group="Restricted" tag="Forbidden" name="Forbidden" abbrev="F"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="WpDamSpec" tag="Fire"/>
    <tag group="AmmoType" tag="Grenade" name="Grenades" abbrev="Grenades"/>
    <child entity="grCustAmmo"></child>
    </thing>
  <thing id="wpLAGTorch" name="Torch" description="One of man’s first weapons, a torch is simply a piece of wood set on fire. A well-made one will be wrapped in an oil-soaked cloth to ensure a good burn, but in a pinch, a chair leg’ll do just fine. Not the fanciest of weapons, but it keeps most critters at bay." compset="Melee">
    <fieldval field="grCost" value="10"/>
    <fieldval field="dpLimit" value="3"/>
    <fieldval field="wpDamage" value="8"/>
    <fieldval field="wpReach" value="1"/>
    <fieldval field="wpAP" value="-4"/>
    <usesource source="RHNoFuture"/>
    <tag group="WpDamType" tag="Physical" name="Physical" abbrev="P"/>
    <tag group="Weapon" tag="NoTwoBonus" name="Doesn&apos;t Increase DV when wielded two-handed" abbrev="Doesn&apos;t Increase DV when wielded two-handed"/>
    <tag group="WpGroup" tag="Throwing"/>
    <tag group="Armory" tag="Melee" name="Melee" abbrev="Melee"/>
    <tag group="WpCategory" tag="Baton"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <tag group="WpDamSpec" tag="Fire"/>
    <eval phase="Final" priority="20001"><![CDATA[if (this.hero.tagcount[Specialty.spLAGYoYo] = 0) then
  foreach pick in hero from WeaponBase where "WpCategory.YoYo"
    perform eachpick.field[DicePool].modify[-,99,"Cannot Default"]
    nexteach
endif]]></eval>
    <child entity="grCustWeap"></child>
    </thing>
  <thing id="eqLAGPressPass" name="Press Pass" description="There are some press credentials that are free, such as those given out to an event photographer, but legitimate cred costs nuyen. A press pass (which is registered to your SIN, of course) can be purchased from any media organization that’s willing to have you, giving some special access to areas. The press can enter a crime scene (but will always have an officer at their side to make sure they don’t disrupt anything), get into government functions, attend high-class parties (as long as they’re working) and gain some bonus legal protections. Note that many corporations don’t have a “freedom of the press” law in their corporate charter, so this is by no means a “get out of testimony free” card, but every real reporter carries one." compset="Equipment">
    <fieldval field="grAvail" value="4"/>
    <fieldval field="grCost" value="100"/>
    <fieldval field="usrCandid1" value="IsGear.idIdentity | IsGear.idSinner"/>
    <fieldval field="usrLabel1" value="Associated SIN"/>
    <fieldval field="notUsage" value="Press passes must be assigned to an identity or SIN."/>
    <usesource source="RHNoFuture"/>
    <tag group="EquipCat" tag="Disguise"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="Equipment" tag="FixRating"/>
    <child entity="grCustom"></child>
    </thing>
  <thing id="eqLAGProCam" name="ProCam" description="ProCams are larger, higher-end cameras than most shadowrunners use, ideal for professional camera work. These are larger, shoulder-mounted or built into drones, quite impossible to hide but able to be absolutely stuffed with high-end optics. They can be found at any major event but are typically attached to a cameraman in the wake of a roving on-scene reporter." compset="Equipment">
    <fieldval field="grCostRat" value="250"/>
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="12"/>
    <fieldval field="grCapRat" value="1"/>
    <fieldval field="grAvail" value="4"/>
    <usesource source="RHNoFuture"/>
    <tag group="ModCatAllw" tag="Audio" name="Audio" abbrev="Audio"/>
    <tag group="ModCatAllw" tag="Visual" name="Visual" abbrev="Visual"/>
    <tag group="EquipCat" tag="Visual" name="Optical &amp; Imaging Devices" abbrev="Optical &amp; Imaging Devices"/>
    <tag group="Equipment" tag="CanEquip" name="Show Equip Checkbox" abbrev="Show Equip Checkbox"/>
    <child entity="grCustom"></child>
    </thing>
  <thing id="eqLAGSmartCamEx" name="SmartCam External" description="SmartCams are spun out of smartgun technology, focused on allowing the user to get a better shot of a scene, not a target. There are external add-on SmartCam attachments, but they’re getting harder to find as cameras with an internal SmartCam system have continued to grow in market share. With less computation needed than the ballistics needs of a smartlink, a SmartCam can be used with any DNI but work best with a datajack. \n\nA camera of any kind has a limit equal to its rating. One with an external SmartCam adapter raises this limit by 1 while connected to a DNI, while an internal SmartCam does the same but can grant +2 to the limit by being connected to a datajack." compset="Equipment">
    <fieldval field="grAvail" value="6"/>
    <fieldval field="grCost" value="200"/>
    <usesource source="RHNoFuture"/>
    <tag group="ModCat" tag="Visual" name="Visual" abbrev="Visual"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <eval phase="Effects" priority="99999"><![CDATA[doneif (activated = 0)
if (parent.tagis[Equipment.IsWireless]<>0) then
  debug "1"
  perform parent.assign[Equipment.ShowWirele]
endif


parent.field[dvWireDesc].text = "+1 limit on tests to perceive using this device."]]></eval>
    <evalrule phase="Validate" priority="10000" message="Placeholder"><![CDATA[if (parent.tagcount[ModInstall.eqLAGSmartCam?] > 1) then
@valid = 0
@message = "You may only have one SmartCam per device."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom"></child>
    </thing>
  <thing id="eqLAGSmartCamInt" name="SmartCam Internal" description="SmartCams are spun out of smartgun technology, focused on allowing the user to get a better shot of a scene, not a target. There are external add-on SmartCam attachments, but they’re getting harder to find as cameras with an internal SmartCam system have continued to grow in market share. With less computation needed than the ballistics needs of a smartlink, a SmartCam can be used with any DNI but work best with a datajack. \n\nA camera of any kind has a limit equal to its rating. One with an external SmartCam adapter raises this limit by 1 while connected to a DNI, while an internal SmartCam does the same but can grant +2 to the limit by being connected to a datajack." compset="Equipment">
    <fieldval field="grAvail" value="6"/>
    <fieldval field="grCostPrnt" value="2"/>
    <usesource source="RHNoFuture"/>
    <tag group="ModCat" tag="Visual" name="Visual" abbrev="Visual"/>
    <tag group="Equipment" tag="FixRating" name="Fixed Gear Rating" abbrev="Fixed Gear Rating"/>
    <eval phase="Effects" priority="99999"><![CDATA[doneif (activated = 0)
if (parent.tagis[Equipment.IsWireless]<>0) then
  debug "1"
  perform parent.assign[Equipment.ShowWirele]
endif


parent.field[dvWireDesc].text = "+2 limit on tests to perceive using this device."]]></eval>
    <evalrule phase="Validate" priority="10000" message="Placeholder"><![CDATA[if (parent.tagcount[ModInstall.eqLAGSmartCam?] > 1) then
@valid = 0
@message = "You may only have one SmartCam per device."
else
@valid = 1
endif]]></evalrule>
    <child entity="grCustom"></child>
    </thing>
  <thing id="auLAGCybereye" name="Cybereyes" description="The basic cybereyes system features 20/20 vision for both eyes, an image link, and a built-in camera at no extra cost, as well as capacity for vision enhancements." compset="Augment" replaces="auCybereye" uniqueness="useronce">
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="6"/>
    <arrayval field="grCostArr" index="1" value="4000"/>
    <arrayval field="grCostArr" index="2" value="6000"/>
    <arrayval field="grCostArr" index="3" value="10000"/>
    <arrayval field="grCostArr" index="4" value="14000"/>
    <arrayval field="grCostArr" index="5" value="18000"/>
    <arrayval field="grCostArr" index="6" value="22000"/>
    <arrayval field="grAvailArr" index="1" value="3"/>
    <arrayval field="grAvailArr" index="2" value="6"/>
    <arrayval field="grAvailArr" index="3" value="9"/>
    <arrayval field="grAvailArr" index="4" value="12"/>
    <arrayval field="grAvailArr" index="5" value="15"/>
    <arrayval field="grAvailArr" index="6" value="18"/>
    <arrayval field="grEssArr" index="1" value="0.2"/>
    <arrayval field="grEssArr" index="2" value="0.3"/>
    <arrayval field="grEssArr" index="3" value="0.4"/>
    <arrayval field="grEssArr" index="4" value="0.5"/>
    <arrayval field="grEssArr" index="5" value="0.6"/>
    <arrayval field="grEssArr" index="6" value="0.7"/>
    <arrayval field="grCapArr" index="1" value="4"/>
    <arrayval field="grCapArr" index="2" value="8"/>
    <arrayval field="grCapArr" index="3" value="12"/>
    <arrayval field="grCapArr" index="4" value="16"/>
    <arrayval field="grCapArr" index="5" value="20"/>
    <arrayval field="grCapArr" index="6" value="24"/>
    <usesource source="RHNoFuture"/>
    <tag group="ModCatAllw" tag="Eyeware" name="Eyeware" abbrev="Eyeware"/>
    <tag group="AugCat" tag="Eyeware" name="Eyeware" abbrev="Eyeware"/>
    <tag group="AugExclude" tag="Eyes" name="Eyes" abbrev="Eyes"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="ModCatAllw" tag="Casemod" name="Casemod" abbrev="Casemod"/>
    <child entity="grCustom">
      <bootstrap thing="auImagLink"></bootstrap>
      </child>
    </thing>
  <thing id="auLAGCyberear" name="Cyberears" description="Ordinarily, cyberears replace only the inner ear, although the whole thing can be replaced as well if you like. Cyberears offer hearing with normal ranges (like an omni-directional microphone), a sound link, and Capacity for modifications and enhancements." compset="Augment" replaces="auCyberear" uniqueness="useronce">
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="6"/>
    <arrayval field="grEssArr" index="1" value="0.2"/>
    <arrayval field="grEssArr" index="2" value="0.3"/>
    <arrayval field="grEssArr" index="3" value="0.4"/>
    <arrayval field="grEssArr" index="4" value="0.5"/>
    <arrayval field="grEssArr" index="5" value="0.6"/>
    <arrayval field="grEssArr" index="6" value="0.7"/>
    <arrayval field="grCapArr" index="1" value="4"/>
    <arrayval field="grCapArr" index="2" value="8"/>
    <arrayval field="grCapArr" index="3" value="12"/>
    <arrayval field="grCapArr" index="4" value="16"/>
    <arrayval field="grCapArr" index="5" value="20"/>
    <arrayval field="grCapArr" index="6" value="24"/>
    <arrayval field="grAvailArr" index="1" value="3"/>
    <arrayval field="grAvailArr" index="2" value="6"/>
    <arrayval field="grAvailArr" index="3" value="9"/>
    <arrayval field="grAvailArr" index="4" value="12"/>
    <arrayval field="grAvailArr" index="5" value="15"/>
    <arrayval field="grAvailArr" index="6" value="18"/>
    <arrayval field="grCostArr" index="1" value="3000"/>
    <arrayval field="grCostArr" index="2" value="4500"/>
    <arrayval field="grCostArr" index="3" value="7500"/>
    <arrayval field="grCostArr" index="4" value="11000"/>
    <arrayval field="grCostArr" index="5" value="15500"/>
    <arrayval field="grCostArr" index="6" value="21000"/>
    <usesource source="RHNoFuture"/>
    <tag group="ModCatAllw" tag="Casemod" name="Casemod" abbrev="Casemod"/>
    <tag group="ModCatAllw" tag="Earware" name="Earware" abbrev="Earware"/>
    <tag group="AugCat" tag="Earware" name="Earware" abbrev="Earware"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <child entity="grCustom">
      <bootstrap thing="auSounLink"></bootstrap>
      </child>
    </thing>
  <thing id="auLAGAudiEnha" name="Audio Enhancement" description="An implanted version of audio enhancement (p. 445)\n\n{b}Audio Enhancement{/b}\nAudio enhancement allows the user to hear a broader spectrum of audio frequencies, including high and low frequencies outside the normal metahuman audible spectrum. The user also experiences fine discrimination of nuances and can block out distracting background noise. Audio enhancement adds its Rating to your limit in audio Perception Tests." compset="Augment" replaces="auAudiEnha" uniqueness="useronce">
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="6"/>
    <fieldval field="dvWireDesc" value="Add the audio enhancement&apos;s rating as a dice pool modifier to your audio Perception Tests."/>
    <fieldval field="grAvailRat" value="3"/>
    <arrayval field="grCostArr" index="1" value="4000"/>
    <arrayval field="grCostArr" index="2" value="8000"/>
    <arrayval field="grCostArr" index="3" value="12000"/>
    <arrayval field="grCostArr" index="4" value="20000"/>
    <arrayval field="grCostArr" index="5" value="25000"/>
    <arrayval field="grCostArr" index="6" value="30000"/>
    <arrayval field="grSpaceArr" index="1" value="1"/>
    <arrayval field="grSpaceArr" index="2" value="2"/>
    <arrayval field="grSpaceArr" index="3" value="3"/>
    <arrayval field="grSpaceArr" index="4" value="8"/>
    <arrayval field="grSpaceArr" index="5" value="10"/>
    <arrayval field="grSpaceArr" index="6" value="12"/>
    <arrayval field="grEssArr" index="1" value=".1"/>
    <arrayval field="grEssArr" index="2" value=".1"/>
    <arrayval field="grEssArr" index="3" value=".1"/>
    <arrayval field="grEssArr" index="4" value=".2"/>
    <arrayval field="grEssArr" index="5" value=".2"/>
    <arrayval field="grEssArr" index="6" value=".2"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="ModCat" tag="Earware" name="Earware" abbrev="Earware"/>
    <tag group="AugCat" tag="Earware" name="Earware" abbrev="Earware"/>
    <eval phase="Traits" priority="12000"><![CDATA[
      doneif (activated = 0)

      #situationallimit[hero.childfound[skaPercep],signed(field[grRating].value) & " for audio perception tests.",field[thingname].text]]]>
      <after name="Calc grRating Final"/>
      </eval>
    <child entity="grCustom"></child>
    </thing>
  <thing id="auLAGVisiEnha" name="Vision Enhancement" description="An implanted version of vision enhancement (p. 444).\n\n{b}Vision Enhancement{/b}\nThis sharpens a character&apos;s vision at all ranges, providing visual acuity closer to that of the average hawk than that of the average metahuman. It adds its Rating as a positive modifier to your limit on visual Perception Tests." compset="Augment" replaces="auVisiEnha" uniqueness="useronce">
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="6"/>
    <fieldval field="grAvailRat" value="3"/>
    <fieldval field="dvWireDesc" value="Add the vision enhancement&apos;s rating as a dice pool modifier to your visual Perception Tests."/>
    <arrayval field="grCostArr" index="1" value="4000"/>
    <arrayval field="grCostArr" index="2" value="8000"/>
    <arrayval field="grCostArr" index="3" value="12000"/>
    <arrayval field="grCostArr" index="4" value="20000"/>
    <arrayval field="grCostArr" index="5" value="25000"/>
    <arrayval field="grCostArr" index="6" value="30000"/>
    <arrayval field="grSpaceArr" index="1" value="1"/>
    <arrayval field="grSpaceArr" index="2" value="2"/>
    <arrayval field="grSpaceArr" index="3" value="3"/>
    <arrayval field="grSpaceArr" index="4" value="8"/>
    <arrayval field="grSpaceArr" index="5" value="10"/>
    <arrayval field="grSpaceArr" index="6" value="12"/>
    <arrayval field="grEssArr" index="1" value=".1"/>
    <arrayval field="grEssArr" index="2" value=".1"/>
    <arrayval field="grEssArr" index="3" value=".1"/>
    <arrayval field="grEssArr" index="4" value=".2"/>
    <arrayval field="grEssArr" index="5" value=".2"/>
    <arrayval field="grEssArr" index="6" value=".2"/>
    <tag group="Augment" tag="Cyber" name="Cyberware" abbrev="Cyberware"/>
    <tag group="ModCat" tag="Eyeware" name="Eyeware" abbrev="Eyeware"/>
    <tag group="AugCat" tag="Eyeware" name="Eyeware" abbrev="Eyeware"/>
    <eval phase="Traits" priority="12000"><![CDATA[
      doneif (activated = 0)

      #situationallimit[hero.childfound[skaPercep],signed(field[grRating].value) & " for visual perception tests.",field[thingname].text]]]>
      <after name="Calc grRating Final"/>
      </eval>
    <child entity="grCustom"></child>
    </thing>
  <thing id="auLAGAudioTune" name="Audiotune" description="The concept of a cyber-augmented throat has been around for decades and is present in some highly illegal hardware that allowed for voice modulators to be used to duplicate other people’s voiceprints. Amore musical-aligned (and legal) version has been around since the early ’70s. Known as “AutoVoice,” it led to a brief flurry of cybernetic-voiced artists who, before the addition, couldn’t carry a tune. Used at a normal setting, the AutoVoice controls airflow through the voice box, and the voice box’s own vibrations, to hit and hold notes as needed. With some software tweaks, this can be turned into a more mechanical sound (creating that distinct AutoVoiced sound of a few years back) or used to pitch the user’s voice up or down but still recognizable only as their own. Software hacks to allow more illegal operation now circle the Shadownet.\n\nAutoVoice replaces the user’s own limit for singing skills with its Rating." compset="Augment" uniqueness="useronce">
    <fieldval field="dvWireDesc" value="The AutoVoice allows the user to broadcast to a local audio network without a mic."/>
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="6"/>
    <fieldval field="grCostRat" value="1000"/>
    <fieldval field="grAvailRat" value="1"/>
    <fieldval field="grEssence" value=".2"/>
    <usesource source="RHNoFuture"/>
    <tag group="AugCat" tag="Headware"/>
    <tag group="Augment" tag="Cyber"/>
    <tag group="Show" tag="SpecialTab"/>
    <eval phase="Final" priority="100000"><![CDATA[doneif (activated = 0)
~perform #limit[skaPerform,=,this.field[grRating].value,""]
var diff as number
diff = this.field[grRating].value - hero.child[skaPerform].field[dpLimit].value 
if (diff > 0) then
  perform hero.child[skaPerform].field[dpLimit].modify[+,diff,""]
endif]]></eval>
    <evalrule phase="Validate" priority="10000" message="placeholder"><![CDATA[var counter as number
counter = 0
foreach pick in hero from Augment where "thingid.auLAGAudioTun?"
  counter += 1
nexteach
if (counter > 1) then
  @valid = 0
  @message = "You may only have one Audiotune."
else
  @valid = 1
endif]]></evalrule>
    <child entity="grCustom"></child>
    </thing>
  <thing id="auLAGAudioTuneHac" name="Audiotune (Hacked)" description="The concept of a cyber-augmented throat has been around for decades and is present in some highly illegal hardware that allowed for voice modulators to be used to duplicate other people’s voiceprints. Amore musical-aligned (and legal) version has been around since the early ’70s. Known as “AutoVoice,” it led to a brief flurry of cybernetic-voiced artists who, before the addition, couldn’t carry a tune. Used at a normal setting, the AutoVoice controls airflow through the voice box, and the voice box’s own vibrations, to hit and hold notes as needed. With some software tweaks, this can be turned into a more mechanical sound (creating that distinct AutoVoiced sound of a few years back) or used to pitch the user’s voice up or down but still recognizable only as their own. Software hacks to allow more illegal operation now circle the Shadownet.\n\nAutoVoice replaces the user’s own limit for singing skills with its Rating." compset="Augment" uniqueness="useronce">
    <fieldval field="dvWireDesc" value="The AutoVoice allows the user to broadcast to a local audio network without a mic."/>
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="6"/>
    <fieldval field="grCostRat" value="4000"/>
    <fieldval field="grAvailRat" value="3"/>
    <fieldval field="grEssence" value=".2"/>
    <usesource source="RHNoFuture"/>
    <tag group="AugCat" tag="Headware"/>
    <tag group="Augment" tag="Cyber"/>
    <tag group="Restricted" tag="Forbidden"/>
    <tag group="Show" tag="SpecialTab"/>
    <eval phase="Final" priority="100000"><![CDATA[doneif (activated = 0)
~perform #limit[skaPerform,=,this.field[grRating].value,""]
var diff as number
diff = this.field[grRating].value - hero.child[skaPerform].field[dpLimit].value 
if (diff > 0) then
  perform hero.child[skaPerform].field[dpLimit].modify[+,diff,""]
endif]]></eval>
    <evalrule phase="Validate" priority="10000" message="????"><![CDATA[var counter as number
counter = 0
foreach pick in hero from Augment where "thingid.auLAGAudioTun?"
  counter += 1
nexteach
if (counter > 1) then
  @valid = 0
  @message = "You may only have one Audiotune."
else
  @valid = 1
endif]]></evalrule>
    <child entity="grCustom"></child>
    </thing>
  <thing id="auLAGVocalExp" name="Vocal Expansion" description="A terrifying upgrade usually undertaken only by those who’ve suffered throat damage but sometimes gambled on by those who need the extra edge to break in, vocal expansion is a series of minor bioware improvements to the throat and lungs, controlling the flow of air through the voice box, strengthening the user’s natural abilities to create longer, clearer notes, a more powerful sound, and a throat more resistant to hoarseness and strain. If it goes wrong, it can ruin someone’s career forever or, in a worst-case scenario, render them mute. Currently the upgrade is reserved to beta or delta clinics, but once perfected, it should filter down to standard clinics in a few years.\n\nA vocal expansion raises the user’s natural limit for Leadership and Performance (singing) skills by its rating." compset="Augment" uniqueness="useronce">
    <fieldval field="grMinimum" value="1"/>
    <fieldval field="grMaximum" value="3"/>
    <fieldval field="grCostRat" value="8000"/>
    <fieldval field="grAvailRat" value="6"/>
    <fieldval field="grEssence" value=".1"/>
    <tag group="AugCat" tag="Bioware"/>
    <tag group="Augment" tag="Bio"/>
    <eval phase="Final" priority="100000"><![CDATA[var blurb as string 
blurb = "+" & this.field[grRating].value & " when singing"

#situationallimit[hero.child[skaPerform],blurb,field[thingname].text]
perform #limit[skaLeader,+,this.field[grRating].value,""]]]></eval>
    <child entity="grCustom"></child>
    </thing>
  <thing id="quLAGCandleDark" name="Candle in the Dark" description="In a world of “I got mine Jack,” the rare person with an actual code of honor stands out like a candle in the darkness. Showing that it’s an actual code that defines their life, that they’re willing to make sacrifices to do the right thing even if it hurts themselves? Yeah, some people will dismiss them as a sucker, but those who see the truth find themselves believing. Turns out that when people see a light in the darkness, they’re drawn to it. \n\nAs long as the character doesn’t break their Code of Honor, all contacts are treated as having a Loyalty 2 higher than their actual rating. If the character breaks their Code of Honor, the contacts are treated as having 1 Loyalty less than their rating until the mistake can be corrected." compset="Quality" uniqueness="useronce">
    <fieldval field="trtBPCost" value="5"/>
    <fieldval field="usrChkText" value="Code Broken?"/>
    <fieldval field="notUsage" value="Due to system limits, contact loyalty must be manually adjusted. This should be done immediately after leaving Creation mode. During play contact loyalties must be manually adjusted."/>
    <tag group="QualityCat" tag="Positive"/>
    <exprreq message="A Code of Honor Negative Quality is required."><![CDATA[#hasability[quCode?] <> 0]]></exprreq>
    </thing>
  <hidden id="riCalling"/>
  </document>
